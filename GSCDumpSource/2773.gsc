// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    self endon( "death" );
    self endon( "killanimscript" );
    self._id_411B endon( "disconnect" );
    var_0 = self._id_411B.origin - self.origin;
    var_1 = length( var_0 );
    var_2 = 1;

    if ( var_1 < self._id_1DCD )
    {
        var_3 = self.origin;
        var_2 = 0;
    }
    else
    {
        var_0 = var_0 / var_1;
        var_3 = self._id_411B.origin - var_0 * self._id_1DCD;
    }

    var_4 = 0;
    var_5 = self.origin + ( 0, 0, 30 );
    var_6 = self._id_411B.origin + ( 0, 0, 30 );
    var_7 = _func_0193( var_5, var_6 );

    if ( distancesquared( var_7, var_6 ) > 1 )
        _id_9D6E();
    else
    {
        if ( var_2 )
            var_8 = _id_06B7::_id_3173( self.origin, var_3 );
        else
            var_8 = 1;

        var_9 = undefined;

        if ( !var_8 )
            var_10 = 0;
        else
        {
            var_9 = _id_DB2C( self._id_411B );
            var_10 = isdefined( var_9 );
        }

        self._id_2570 = 1;

        if ( var_10 )
        {
            _id_4C63( var_9 );
            return;
        }

        _id_4E5E( var_3, var_8 );
    }
}

_id_017C()
{
    self _meth_82B9( 1, 1 );
    self._id_2570 = 0;
}

_id_6B32()
{
    return "attack_run_and_jump";
}

_id_DB2C( var_0 )
{
    if ( !self._id_5233 )
        return undefined;

    var_1 = 4;
    var_2 = self.origin - var_0.origin;

    if ( abs( var_2[2] ) > var_1 )
        return undefined;

    var_3 = vectornormalize( ( var_2[0], var_2[1], 0 ) );
    var_4 = anglestoforward( var_0.angles );
    var_5 = vectordot( var_4, var_3 );

    if ( var_5 > 0.707 )
    {
        var_6 = 0;
        var_7 = rotatevector( ( 1, 0, 0 ), var_0.angles );
    }
    else if ( var_5 < -0.707 )
    {
        var_6 = 1;
        var_7 = rotatevector( ( -1, 0, 0 ), var_0.angles );
    }
    else
    {
        var_8 = _id_0AD7::_id_4072( var_2, var_4 );

        if ( var_8 > 0 )
        {
            var_6 = 3;
            var_7 = rotatevector( ( 0, -1, 0 ), var_0.angles );
        }
        else
        {
            var_6 = 2;
            var_7 = rotatevector( ( 0, 1, 0 ), var_0.angles );
        }
    }

    if ( var_6 == 1 )
        var_9 = 128;
    else
        var_9 = 96;

    var_10 = var_0.origin - var_9 * var_7;
    var_11 = _id_06B7::_id_5036( var_10 );

    if ( !isdefined( var_11 ) )
        return undefined;

    if ( abs( var_11[2] - var_10[2] ) > var_1 )
        return undefined;

    if ( !scripts\engine\trace::_id_12CB( var_0.origin + ( 0, 0, 4 ), var_11 + ( 0, 0, 4 ), undefined, self, scripts\engine\trace::_id_3F4E( 1 ) ) )
        return undefined;

    return var_6;
}

_id_4C63( var_0 )
{
    var_1 = "attack_extended";
    _id_4CF7( self._id_411B, self._id_411B.health, "MOD_MELEE_DOG" );
    var_2 = self _meth_810C( var_1, var_0 );
    thread _id_57D9( var_2, self._id_411B.origin, self._id_411B.angles );

    if ( var_0 == 1 )
        self _meth_827D( scripts\engine\utility::ter_op( self._id_2504, "mp_wolf_attack_quick_back_npc", "mp_dog_attack_quick_back_npc" ) );
    else
        self _meth_827D( scripts\engine\utility::ter_op( self._id_2504, "mp_wolf_attack_short_npc", "mp_dog_attack_short_npc" ) );

    _id_0017::_id_B343( var_1, var_0, "attack", "end" );
    self notify( "kill_stick" );
    self._id_411B = undefined;
    self _meth_82B8( "anim deltas" );
    self unlink();
}

_id_57D9( var_0, var_1, var_2 )
{
    self endon( "death" );
    self endon( "killanimscript" );
    self endon( "kill_stick" );
    wait 0.05;

    if ( isalive( self._id_411B ) )
        return;

    var_3 = self._id_411B _meth_8122();
    self linkto( var_3 );
    self _meth_82B3( var_0, var_1, var_2 );
}

_id_4E5E( var_0, var_1 )
{
    var_2 = _id_6B32();
    var_3 = 0;

    if ( !var_1 )
    {
        if ( self _meth_8006( self._id_411B ) )
        {
            var_4 = _id_06B7::_id_5036( self._id_411B.origin );

            if ( isdefined( var_4 ) )
            {
                var_3 = 1;
                var_0 = var_4;
            }
            else
            {
                _id_9D6E();
                return;
            }
        }
        else
        {
            _id_9D6E();
            return;
        }
    }

    self._id_8FFA = undefined;
    self._id_8FFB = undefined;
    var_5 = self _meth_810C( var_2, 0 );
    var_6 = _func_0079( var_5 );
    var_7 = _func_00BB( var_5, "dog_melee" );

    if ( var_7.size > 0 )
        var_8 = var_7[0] * var_6;
    else
        var_8 = var_6;

    self _meth_82B2( self.origin, var_0, var_8 );
    thread _id_FCA6( self._id_411B, var_8, var_1 );
    _id_0017::_id_B343( var_2, 0, "attack", "dog_melee" );
    self notify( "cancel_updatelerppos" );
    var_9 = 0;

    if ( isdefined( self._id_411B ) )
        var_9 = self._id_411B.health;

    if ( isdefined( self._id_9D67 ) )
        var_9 = self._id_9D67;

    if ( isdefined( self._id_411B ) )
        _id_4CF7( self._id_411B, var_9, "MOD_IMPACT" );

    self._id_411B = undefined;

    if ( var_3 )
        self _meth_82B9( 0, 1 );
    else
        self _meth_82B9( 1, 1 );

    self _meth_82C1( "gravity" );
    self _meth_82B8( "anim deltas" );
    _id_0017::_id_1097E( "attack", "end" );
}

_id_FCA6( var_0, var_1, var_2 )
{
    self endon( "killanimscript" );
    self endon( "death" );
    self endon( "cancel_updatelerppos" );
    var_0 endon( "death_or_disconnect" );
    var_3 = var_1;
    var_4 = 0.05;

    for (;;)
    {
        wait( var_4 );
        var_3 = var_3 - var_4;

        if ( var_3 <= 0 )
            break;

        var_5 = _id_6E0A( var_0, var_2 );

        if ( !isdefined( var_5 ) )
            break;

        self _meth_82B2( self.origin, var_5, var_3 );
    }
}

_id_6E0A( var_0, var_1 )
{
    if ( !var_1 )
    {
        var_2 = _id_06B7::_id_5036( var_0.origin );
        return var_2;
    }
    else
    {
        var_3 = var_0.origin - self.origin;
        var_4 = length( var_3 );

        if ( var_4 < self._id_1DCD )
            return self.origin;
        else
        {
            var_3 = var_3 / var_4;
            var_5 = var_0.origin - var_3 * self._id_1DCD;

            if ( _id_06B7::_id_3173( self.origin, var_5 ) )
                return var_5;
            else
                return undefined;
        }
    }
}

_id_4CF7( var_0, var_1, var_2 )
{
    if ( scripts\common\utility::_id_89B5( var_0 ) )
        return;

    var_0 dodamage( var_1, self.origin, self, self, var_2 );
}

_id_9D6E()
{
    self._id_8FFA = self.origin;
    self._id_8FFB = self._id_411B.origin;
}
