// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_EB12()
{
    scripts\mp\utility\perk::_id_6FA5( "specialty_quieter" );
    scripts\mp\utility\perk::_id_6FA5( "specialty_no_battle_chatter" );
    self._id_4380 = 0;
    _id_079B::_id_7B50( "scout" );
    thread _id_EB18();
    return 1;
}

_id_EB14( var_0 )
{
    scripts\mp\utility\perk::removeperk( "specialty_quieter" );
    scripts\mp\utility\perk::removeperk( "specialty_no_battle_chatter" );
    _id_0793::_id_AAD4( "super_deadsilence", self._id_4380 );

    if ( scripts\mp\utility\game::getgametype() != "infect" )
        _id_0780::_id_9751( self, level._id_EB28._id_E76A["super_deadsilence"]._id_7C71, self._id_4380, istrue( var_0 ) );

    thread _id_EB13();

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "br", "superSlotCleanUp" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "br", "superSlotCleanUp" ) ]]( self );

    return 0;
}

_id_EB15()
{
    if ( scripts\mp\utility\game::getgametype() != "infect" )
    {
        _id_0A7B::_id_7D93( "deadSilenceKills", 1 );
        scripts\mp\supers::_id_3A9C( "super_deadsilence" );
        self._id_4380++;
        var_0 = scripts\mp\supers::_id_695E( "super_deadsilence" );

        if ( self._id_4380 > var_0 )
        {
            var_1 = self._id_4380 - var_0;
            scripts\mp\supers::_id_3A9D( "super_deadsilence", var_1 );
        }
    }

    self playlocalsound( "deadsilence_start" );
    scripts\mp\supers::_id_C63D();
    thread _id_19AC();
}

_id_EB13()
{
    self endon( "disconnect" );
    wait 1;
}

_id_EB17( var_0 )
{
    self._id_4381 = var_0;
    self setclientomnvar( "ui_deadsilence_overlay", var_0 );
}

_id_19AC()
{
    self endon( "death_or_disconnect" );
    self notify( "applyFOVPresentation" );
    self endon( "applyFOVPresentation" );
    self _meth_8576( "zombiedefault" );

    if ( isdefined( self._id_EB06._id_E768._id_FEE5 ) )
        var_0 = self._id_EB06._id_E768._id_FEE5;
    else
        var_0 = 15;

    var_1 = var_0 - 2;
    scripts\engine\utility::_id_108AC( var_1, "super_use_finished" );
    self _meth_8576( "default_2seconds" );
}

_id_EB18()
{
    self endon( "death_or_disconnect" );
    self endon( "super_use_finished" );
    self notify( "superDeadsilence_watchForGameEnded" );
    self endon( "superDeadsilence_watchForGameEnded" );
    level scripts\engine\utility::waittill_any_2( "game_ended", "prematch_cleanup" );
    thread scripts\mp\supers::_id_EB4D();
}
