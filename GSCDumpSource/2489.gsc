// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_10145()
{
    var_0 = spawnstruct();
    var_0._id_102F4 = [];
    var_0._id_9EBD = [];
    level._id_FFF1._id_9EE0 = var_0;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_mines", "init" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_mines", "init" ) ]]();
}

_id_10140()
{
    return level._id_FFF1._id_9EE0;
}

_id_10142( var_0, var_1 )
{
    var_2 = _id_10140();
    var_3 = var_2._id_102F4[var_0];

    if ( !isdefined( var_3 ) && istrue( var_1 ) )
    {
        var_3 = spawnstruct();
        var_3._id_5FBD = 90;
        var_3._id_206B = 115;
        var_3._id_9183 = 38;
        var_3._id_C855 = 38;
        var_3._id_292E = 20;
        var_3._id_4B75 = 35;
        var_3._id_9889 = ( 0, 0, 37 );
        var_3._id_F60F = undefined;
        var_2._id_102F4[var_0] = var_3;
    }

    return var_3;
}

_id_10141( var_0, var_1 )
{
    var_2 = _id_10140();
    var_3 = var_2._id_9EBD[var_0];

    if ( !isdefined( var_3 ) && istrue( var_1 ) )
    {
        var_3 = spawnstruct();
        var_3._id_0333 = 10;
        var_3._id_F60F = undefined;
        var_2._id_9EBD[var_0] = var_3;
    }

    return var_3;
}

_id_1014A( var_0, var_1 )
{
    var_2 = _id_10142( var_0._id_1031C );

    if ( !isdefined( var_2 ) )
        return 0;

    var_3 = _id_10141( var_1._id_5542 );

    if ( !isdefined( var_3 ) )
        return 0;

    if ( istrue( var_1._id_57AE ) )
        return 0;

    if ( _func_0133( var_0 _meth_8430() ) < 100 )
    {
        if ( _func_0133( var_0 _meth_8431() ) < 400 )
            return 0;
    }

    if ( var_0 scripts\cp_mp\vehicles\vehicle::_id_8ADE() )
        return 0;

    var_4 = anglestoforward( var_0.angles ) * var_2._id_5FBD;
    var_5 = anglestoforward( var_0.angles ) * -1 * var_2._id_5FBD;
    var_6 = anglestoright( var_0.angles ) * -1 * var_2._id_9183;
    var_7 = anglestoright( var_0.angles ) * var_2._id_C855;
    var_8 = var_0.origin + var_4 + var_6;
    var_9 = var_0.origin + var_4 + var_7;
    var_10 = var_0.origin + var_5 + var_6;
    var_11 = var_0.origin + var_5 + var_7;
    var_12 = ( var_9 - var_8 ) * ( 1, 1, 0 );
    var_13 = ( var_8 - var_10 ) * ( 1, 1, 0 );
    var_14 = var_8 - var_1.origin;
    var_15 = vectordot( vectornormalize( _id_10144( var_12 ) ), var_14 );

    if ( var_15 > var_3._id_0333 )
        return 0;

    var_15 = vectordot( vectornormalize( _id_10144( var_13 ) ), var_14 );

    if ( var_15 > var_3._id_0333 )
        return 0;

    var_16 = ( var_10 - var_11 ) * ( 1, 1, 0 );
    var_17 = ( var_11 - var_9 ) * ( 1, 1, 0 );
    var_14 = var_11 - var_1.origin;
    var_15 = vectordot( vectornormalize( _id_10144( var_16 ) ), var_14 );

    if ( var_15 > var_3._id_0333 )
        return 0;

    var_15 = vectordot( vectornormalize( _id_10144( var_17 ) ), var_14 );

    if ( var_15 > var_3._id_0333 )
        return 0;

    var_14 = var_0.origin + anglestoup( var_0.angles ) * var_2._id_292E - var_1.origin;
    var_15 = vectordot( var_14, anglestoup( var_0.angles ) );

    if ( var_15 > var_2._id_4B75 )
        return 0;
    else if ( var_15 < 0 )
        return 0;

    return 1;
}

_id_10147( var_0, var_1 )
{
    var_2 = _id_10141( var_1._id_5542 );

    if ( isdefined( var_2._id_F60F ) )
        thread [[ var_2._id_F60F ]]( var_0, var_1 );

    var_3 = _id_10142( var_0._id_1031C );

    if ( isdefined( var_3._id_F60F ) )
        thread [[ var_3._id_F60F ]]( var_0, var_1 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle_mines", "trigger" ) )
        thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle_mines", "trigger" ) ]]( var_0, var_1 );
}

_id_10146( var_0 )
{
    if ( level.teambased )
    {
        var_1 = var_0.team;

        if ( !isdefined( var_1 ) )
        {
            if ( isdefined( var_0.owner ) )
                var_1 = var_0.owner.team;
        }

        if ( isdefined( var_1 ) )
            return scripts\cp_mp\vehicles\vehicle::_id_10123( self, var_1 );
    }
    else if ( isdefined( var_0.owner ) )
        return scripts\cp_mp\vehicles\vehicle::_id_10122( self, var_0.owner );

    return 0;
}

_id_10144( var_0 )
{
    return ( var_0[1], var_0[0] * -1, 0 );
}

_id_10143()
{
    return physics_createcontents( [ "physicscontents_water", "physicscontents_glass", "physicscontents_item", "physicscontents_vehicle", "physicscontents_ainosight" ] );
}
