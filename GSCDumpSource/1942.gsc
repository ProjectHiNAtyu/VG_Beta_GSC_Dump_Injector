// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_814A( var_0 )
{
    if ( !isdefined( self._id_39F8 ) )
        self._id_39F8 = [];

    if ( !isdefined( self._id_39F8[var_0] ) )
        self._id_39F8[var_0] = 0;
}

_id_8149( var_0, var_1 )
{
    if ( !isdefined( self._id_39F8 ) )
        self._id_39F8 = [];

    if ( !isdefined( self._id_39F8[var_0] ) )
        self._id_39F8[var_0] = [];

    if ( !isdefined( self._id_39F8[var_0][var_1] ) )
        self._id_39F8[var_0][var_1] = 0;
}

_id_7D79( var_0, var_1 )
{
    _id_814A( var_0 );
    self._id_39F8[var_0] = self._id_39F8[var_0] + var_1;
    _id_D4CC( var_0, self._id_39F8[var_0] );
}

_id_D4CC( var_0, var_1 )
{
    if ( !isplayer( self ) )
        return;

    _id_814A( var_0 );
    self._id_39F8[var_0] = var_1;
    self _meth_875C( var_0, var_1 );
}

_id_D4CA( var_0, var_1, var_2 )
{
    if ( !isplayer( self ) )
        return;

    _id_8149( var_0, var_1 );
    self._id_39F8[var_0][var_1] = var_2;
    self _meth_875C( var_0, var_2, var_1 );
}

_id_695A( var_0 )
{
    _id_814A( var_0 );
    return self._id_39F8[var_0];
}

_id_81F7( var_0 )
{
    if ( !isdefined( self._id_96B1 ) )
        self._id_96B1 = [];

    if ( !isdefined( self._id_96B1[var_0] ) )
        self._id_96B1[var_0] = 0;
}

_id_7D7F( var_0, var_1 )
{
    _id_81F7( var_0 );
    self._id_96B1[var_0] = self._id_96B1[var_0] + var_1;
    _id_D5D7( var_0, self._id_96B1[var_0] );
}

_id_D5D7( var_0, var_1 )
{
    if ( !isplayer( self ) )
        return;

    _id_81F7( var_0 );
    self._id_96B1[var_0] = var_1;
    _id_FC2E( var_0 );
}

getlocalcodcasterclientstat( var_0 )
{
    _id_81F7( var_0 );
    return self._id_96B1[var_0];
}

_id_FC2E( var_0 )
{
    if ( var_0 == 0 || var_0 == 1 )
    {
        _id_D4CC( 0, _id_2E8A() );
        return;
    }

    if ( var_0 == 21 )
    {
        var_1 = self._id_96B1[21];
        _id_D4CC( 21, var_1 );
        var_2 = _id_695A( 22 );

        if ( var_1 > var_2 )
            _id_D4CC( 22, var_1 );

        return;
    }

    if ( var_0 == 3 )
    {
        var_3 = self._id_96B1[3];
        _id_D4CC( 15, _id_2E99( var_3 ) );
        _id_D4CC( 16, _id_2E8F( var_3 ) );
        _id_D4CC( 3, _id_4BA1( _id_695A( 2 ), var_3 ) );
        return;
    }

    if ( var_0 == 4 )
    {
        var_4 = self._id_96B1[4];
        _id_D4CC( 7, _id_2E99( var_4 ) );
        _id_D4CC( 8, _id_2E8F( var_4 ) );
        return;
    }

    if ( var_0 == 5 )
    {
        if ( _id_DB70() )
        {
            _id_7D79( 14, 1 );
            _id_7D79( 2, 1 );
        }

        return;
    }
}

_id_DB70()
{
    _id_814A( 14 );
    return floor( self._id_96B1[5] ) > self._id_39F8[14];
}

_id_2E8A()
{
    if ( !isdefined( self._id_96B1 ) || !isdefined( self._id_96B1[0] ) || !isdefined( self._id_96B1[1] ) )
        return 0.0;

    var_0 = self._id_96B1[0];

    if ( var_0 <= 0 )
        return 0.0;

    var_1 = self._id_96B1[1];
    return var_1 / var_0;
}

_id_2E99( var_0 )
{
    return _id_4BA1( self.pers["kills"], var_0 );
}

_id_2E8F( var_0 )
{
    return _id_4BA1( self.pers["damage"], var_0 );
}

_id_4BA1( var_0, var_1 )
{
    if ( !isdefined( var_0 ) || !isdefined( var_1 ) || var_1 <= 0 )
        return 0.0;

    return var_0 / var_1;
}

_id_CB33()
{
    game["codcasterClientStatsSaveBetweenRounds"] = [];
    game["localCodcasterClientStatsSaveBetweenRounds"] = [];

    foreach ( var_1 in level.players )
    {
        game["codcasterClientStatsSaveBetweenRounds"][var_1.name] = var_1._id_39F8;
        game["localCodcasterClientStatsSaveBetweenRounds"][var_1.name] = var_1._id_96B1;
    }
}

_id_C75C()
{
    if ( !isplayer( self ) )
        return;

    if ( !isdefined( game["codcasterClientStatsSaveBetweenRounds"] ) || !isdefined( game["localCodcasterClientStatsSaveBetweenRounds"] ) )
        return;

    if ( isdefined( game["codcasterClientStatsSaveBetweenRounds"][self.name] ) )
        self._id_39F8 = game["codcasterClientStatsSaveBetweenRounds"][self.name];
    else
        self._id_39F8 = [];

    if ( isdefined( game["localCodcasterClientStatsSaveBetweenRounds"][self.name] ) )
        self._id_96B1 = game["localCodcasterClientStatsSaveBetweenRounds"][self.name];
    else
        self._id_96B1 = [];

    foreach ( var_5, var_1 in self._id_39F8 )
    {
        if ( !_func_0106( self._id_39F8[var_5] ) )
        {
            _id_D4CC( var_5, var_1 );
            continue;
        }

        foreach ( var_4, var_3 in self._id_39F8[var_5] )
            _id_D4CA( var_5, var_4, var_3 );
    }
}

_id_A59F()
{
    level endon( "game_ended" );
    self endon( "killed_player" );
    self endon( "disconnect" );
    self notify( "stop_non_traded_kill_watcher" );
    self endon( "stop_non_traded_kill_watcher" );

    if ( !isplayer( self ) )
        return;

    for (;;)
    {
        self waittill( "non_traded_stat_kill_event" );

        while ( self._id_8DD8.size > 0 )
        {
            var_0 = gettime();
            var_1 = self._id_8DD8[0];
            self._id_8DD8 = scripts\engine\utility::array_remove_index( self._id_8DD8, 0, 0 );
            var_2 = 5000 - ( var_0 - var_1 );
            scripts\engine\utility::_id_107AC( var_2 );
            _id_7D79( 20, 1 );
        }
    }
}

_id_AB5C( var_0 )
{
    if ( !isdefined( var_0._id_8DD8 ) )
        var_0._id_8DD8 = [];

    var_0._id_8DD8[var_0._id_8DD8.size] = gettime();
    var_0 notify( "non_traded_stat_kill_event" );
}

_id_3908()
{
    self._id_8DD8 = [];
}
