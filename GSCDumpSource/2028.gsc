// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    if ( !isdefined( level._id_4AC6 ) )
        level._id_4AC6 = getdvarint( "scr_game_disablespawncamera", 0 ) == 1;

    level._id_DEC3 = getdvarint( "scr_game_spawncamera_snap", 1 ) == 1;
    level._id_5651 = getdvarint( "scr_game_spawncamera_frontline", 0 ) == 1;
    level._id_5658 = getdvarint( "scr_game_spawncamera_spawnpoint", 1 ) == 1;
    level._id_FC4A = ::_id_2515;
    level._id_FC73 = ::_id_2515;

    if ( !istrue( level._id_4AC6 ) )
        _id_8140();
}

_id_2515()
{

}

_id_8140()
{
    level._id_E275 = [];
    level._id_4194 = [];

    foreach ( var_1 in level._id_EF86 )
        level._id_4194[var_1] = "default";

    var_3 = scripts\engine\utility::_id_6D7C( "spawn_selection_camera", "targetname" );

    if ( var_3.size == 0 )
    {
        _id_3F99();
        return;
    }

    foreach ( var_5 in var_3 )
    {
        var_6 = var_5._id_CD8C;

        if ( !isdefined( var_6 ) || var_6 == "spawn_selection_camera" )
            var_6 = var_5._id_0375;

        if ( isdefined( scripts\cp_mp\utility\game_utility::_id_6AF9() ) )
        {
            var_7 = var_5._id_0375;

            if ( !isdefined( var_7 ) || isdefined( var_7 ) && var_7 != level._id_96B5 )
                continue;
        }

        if ( !isdefined( level._id_E275[var_6] ) )
            level._id_E275[var_6] = [];

        var_8 = var_5._id_CE70;

        if ( var_8 == "all" || scripts\mp\utility\game::getgametype() == "base" )
        {
            foreach ( var_1 in level._id_EF86 )
                level._id_E275[var_6][var_1] = var_5;

            continue;
        }

        if ( istrue( level._id_FED5 ) )
        {
            var_11 = _id_07F0::_id_6D6E( var_8 );
            var_5.origin = var_11.origin;
            var_5.angles = var_11.angles;
        }

        level._id_E275[var_6][var_8] = var_5;
    }

    _id_3F99();
}

_id_3F99()
{
    if ( isdefined( level._id_E275["default"] ) )
    {
        var_0 = 1;

        foreach ( var_2 in level._id_EF86 )
        {
            if ( !isdefined( level._id_E275["default"][var_2] ) )
            {
                var_0 = 0;
                break;
            }
        }

        if ( var_0 )
            return;
    }
    else
        level._id_E275["default"] = [];

    var_4 = ( 0, 0, 0 );

    if ( isdefined( level._id_9A9A ) && isdefined( level._id_9A9A[0] ) && isdefined( level._id_9A9A[1] ) )
    {
        level._id_9A9B = level._id_9A9A[1].origin - level._id_9A9A[0].origin;
        level._id_9A99 = level._id_9A9A[0].origin + level._id_9A9B * 0.5;
    }

    foreach ( var_2 in level._id_EF86 )
    {
        if ( isdefined( level._id_E275["default"][var_2] ) )
        {
            level._id_E275["default"][var_2]._id_BF0E = 1;
            continue;
        }

        var_6 = spawnstruct();
        var_6.origin = ( 0, 0, 0 );
        var_6.angles = ( 0, 0, 0 );
        level._id_E275["default"][var_2] = var_6;
    }

    level._id_E278 = _id_6D6A( "allies" );
    level._id_E27A = _id_6D6A( "axis" );
    level._id_E27B = scripts\engine\utility::ter_op( distancesquared( level._id_E27A, level._id_9A9A[0].origin ) < distancesquared( level._id_E27A, level._id_9A9A[1].origin ), level._id_9A9A[0].angles, level._id_9A9A[1].angles );
    var_8 = level._id_E27A - level._id_E278;
    var_9 = level._id_E278 + var_8 * 0.5;

    if ( distancesquared( level._id_E278, level._id_9A9A[0].origin ) < distancesquared( level._id_E278, level._id_9A9A[1].origin ) )
    {
        var_10 = anglestoforward( level._id_9A9A[0].angles );
        var_11 = anglestoright( level._id_9A9A[0].angles );

        if ( abs( vectordot( var_8, var_10 ) ) > abs( vectordot( var_8, var_11 ) ) )
            level._id_E279 = var_10;
        else
            level._id_E279 = var_11;
    }
    else
    {
        var_10 = anglestoforward( level._id_9A9A[1].angles );
        var_11 = anglestoright( level._id_9A9A[1].angles );

        if ( abs( vectordot( var_8, var_10 ) ) > abs( vectordot( var_8, var_11 ) ) )
            level._id_E279 = var_10;
        else
            level._id_E279 = var_11;
    }

    if ( distancesquared( level._id_E27A, level._id_9A9A[0].origin ) < distancesquared( level._id_E27A, level._id_9A9A[1].origin ) )
    {
        var_10 = anglestoforward( level._id_9A9A[0].angles );
        var_11 = anglestoright( level._id_9A9A[0].angles );

        if ( abs( vectordot( var_8, var_10 ) ) > abs( vectordot( var_8, var_11 ) ) )
            level._id_E27C = var_10;
        else
            level._id_E27C = var_11;
    }
    else
    {
        var_10 = anglestoforward( level._id_9A9A[1].angles );
        var_11 = anglestoright( level._id_9A9A[1].angles );

        if ( abs( vectordot( var_8, var_10 ) ) > abs( vectordot( var_8, var_11 ) ) )
            level._id_E27C = var_10;
        else
            level._id_E27C = var_11;
    }

    var_12 = distance( level._id_E278, level._id_E27A );
    level._id_E272 = var_12;
    _id_AC5B();
}

_id_402C()
{
    if ( isdefined( level._id_FC4A ) )
        [[ level._id_FC4A ]]();

    if ( isdefined( level._id_FC73 ) )
        self [[ level._id_FC73 ]]();

    var_0 = self.origin + ( 0, 0, 60 );
    var_1 = self.angles;

    if ( isdefined( self._id_E4AC ) )
    {
        self._id_43F0 = self._id_E4AC;
        self._id_43EF = self._id_E4AB;
    }
    else
    {
        self._id_43F0 = var_0;
        self._id_43EF = var_1;
    }

    if ( !isdefined( self._id_E274 ) )
    {
        var_2 = spawn( "script_model", self._id_43F0 );
        var_2 _id_0765::_id_C2A8( 1 );
        var_2 setmodel( "tag_origin" );
        var_2.angles = self._id_43EF;
        self._id_E274 = var_2;
    }
    else
    {
        self._id_E274.origin = self._id_43F0;
        self._id_E274.angles = self._id_43EF;
    }
}

_id_E71F( var_0, var_1, var_2 )
{
    self endon( "disconnect" );
    scripts\mp\utility\player::_id_BD13( "spawnCamera::startSpawnCamera() START" );
    scripts\mp\utility\player::_id_78ED( 1 );
    _id_402C();

    if ( !isdefined( self._id_E274 ) )
    {
        scripts\mp\utility\player::_id_BD13( "spawnCamera::startSpawnCamera() UNDEFINED SPAWNCAMERAENT!!!" );
        thread _id_B8C8( 0.0, _id_6D24(), 0.5 );
        return;
    }

    if ( istrue( level._id_4AC6 ) && scripts\mp\utility\game::getgametype() != "arm" && scripts\mp\utility\game::getgametype() != "base" )
        return;

    if ( isai( self ) )
        return;

    if ( istrue( self._id_82D6 ) )
        return;

    if ( istrue( level._id_609B ) )
        return;

    if ( isdefined( self._id_D6CF ) )
        return;

    self._id_82D6 = 1;
    scripts\mp\utility\player::_id_D511();
    waitframe();
    _id_07F1::_id_D505();
    scripts\mp\utility\player::_id_FD24( "spectator" );
    self setclientomnvar( "ui_in_spawn_camera", 1 );

    if ( !isdefined( var_0 ) )
        var_0 = 0.0;

    if ( !isdefined( var_1 ) )
        var_1 = 0.25;

    if ( !isdefined( var_2 ) )
        var_2 = 0.25;

    thread _id_B8C8( var_0, var_1, var_2 );
    scripts\engine\utility::_id_108AC( 0.1, "force_spawn" );
    thread _id_C473( self._id_E274 );
    self _meth_805E( self._id_E274, "tag_origin", 1, 1 );
    scripts\mp\utility\player::_id_BD13( "spawnCamera::startSpawnCamera() CameraLinkTo()" );
    self _meth_86A2();
    thread _id_DEC3();
}

_id_6D24()
{
    if ( isdefined( self._id_E27F ) )
        return self._id_E27F;
    else if ( istrue( self._id_E4A7 ) || !istrue( level._id_DEC3 ) && ( istrue( self._id_DDBE ) || !isdefined( self._id_8D54 ) || self._id_8D54 < 2.0 ) )
        return 2.5;
    else
        return 1.5;
}

_id_6D23()
{
    return 1.0;
}

_id_6D22()
{
    var_0 = undefined;

    if ( istrue( level._id_886B ) )
        self._id_5E78 = "default";

    if ( isdefined( self._id_5E78 ) )
    {
        if ( isdefined( level._id_E275[self._id_5E78] ) )
            var_0 = level._id_E275[self._id_5E78][self.team];
        else if ( issubstr( self._id_5E78, "squad" ) )
        {
            var_1 = self._id_5E78;

            if ( var_1 == "squad_leader" )
                var_2 = level._id_E48B[self.team][self._id_E493]._id_E499;
            else
                var_2 = int( _func_00D6( var_1, var_1.size - 1, var_1.size ) );

            var_3 = undefined;

            if ( isdefined( level._id_E48B[self.team] ) && isdefined( level._id_E48B[self.team][self._id_E493] ) && isdefined( level._id_E48B[self.team][self._id_E493].players[var_2] ) )
                var_3 = level._id_E48B[self.team][self._id_E493].players[var_2];

            if ( isdefined( var_3 ) )
            {
                var_4 = level._id_E374[self.team];
                var_5 = var_3.origin + var_4 * -8500 + ( 0, 0, 7000 );
                var_6 = vectornormalize( var_3.origin - var_5 );
                var_7 = _id_0A78::_id_FFE1( var_6, ( 0, 0, 1 ) );

                if ( istrue( level._id_FEEE ) )
                {
                    var_8 = _id_07F0::_id_6E02();
                    var_5 = ( var_5[0], var_5[1], var_8 );
                }

                var_5 = var_5 + scripts\mp\gametypes\arm::_id_2EBA( self.team, var_3.origin );
                var_0 = spawnstruct();
                var_0.origin = var_5;
                var_0.angles = var_7;
            }
        }
        else if ( issubstr( self._id_5E78, "vehicle" ) )
        {
            var_1 = self._id_5E78;
            var_9 = undefined;

            if ( isdefined( level._id_E36E[var_1] ) && isdefined( level._id_E36E[var_1][self.team] ) )
                var_9 = level._id_E36E[var_1][self.team]._id_5094;

            var_4 = level._id_E374[self.team];

            if ( isdefined( var_9 ) && !istrue( var_9._id_87E1 ) )
            {
                var_5 = [];
                var_7 = [];

                if ( istrue( level._id_FED5 ) )
                {
                    var_10 = _id_07F0::_id_6D6E( self.team );
                    var_5 = var_10.origin;
                    var_7 = var_10.angles;
                }
                else
                {
                    var_5 = var_9.origin + var_4 * -8500 + ( 0, 0, 7000 );

                    if ( istrue( level._id_FEEE ) )
                    {
                        var_8 = _id_07F0::_id_6E02();
                        var_5 = ( var_5[0], var_5[1], var_8 );
                    }

                    var_11 = level._id_E36E[var_1][self.team]._id_175A.origin;
                    var_12 = var_11 + var_4 * -8500 + ( 0, 0, 7000 );
                    var_13 = vectornormalize( var_11 - var_12 );
                    var_7 = _id_0A78::_id_FFE1( var_13, ( 0, 0, 1 ) );
                    var_5 = var_5 + scripts\mp\gametypes\arm::_id_2EBA( self.team, var_11 );
                }

                var_0 = spawnstruct();
                var_0.origin = var_5;
                var_0.angles = var_7;
            }
        }
    }
    else if ( istrue( level._id_5658 ) && isdefined( level._id_9036 ) && isdefined( level._id_9036[self.team] ) )
    {
        var_14 = level._id_9036[self.team];
        var_15 = undefined;
        var_16 = undefined;

        foreach ( var_20, var_18 in level._id_E275[level._id_4194[self.team]] )
        {
            var_19 = distancesquared( var_18.origin, var_14 );

            if ( !isdefined( var_16 ) || var_19 < var_15 )
            {
                var_16 = var_18;
                var_15 = var_19;
            }
        }

        var_0 = var_16;
    }
    else if ( istrue( level._id_5651 ) )
    {
        var_21 = _id_2FB8();
        var_15 = undefined;
        var_16 = undefined;

        foreach ( var_20, var_18 in level._id_E275[level._id_4194[self.team]] )
        {
            var_23 = distancesquared( var_18.origin, var_21._id_EF5F[self.team] );
            var_24 = distancesquared( var_18.origin, var_21.origin );

            if ( !isdefined( var_16 ) || var_23 < var_24 )
            {
                var_16 = var_18;
                var_15 = var_23;
            }
        }

        var_0 = var_16;
    }
    else
    {
        if ( istrue( level._id_FE2B ) )
        {
            while ( !isdefined( level._id_4194[self.team] ) )
                waitframe();
        }

        if ( !_func_0120( level._id_4194[self.team] ) )
        {
            var_0 = spawnstruct();
            var_0.origin = level._id_4194[self.team].origin;
            var_0.angles = level._id_4194[self.team].angles;
            var_0._id_FF0C = 1;
        }
        else
            var_0 = level._id_E275[level._id_4194[self.team]][self.team];
    }

    if ( !isdefined( var_0 ) )
    {
        if ( isdefined( level._id_1F6D ) && isdefined( level._id_1F6D[self.team] ) )
        {
            level._id_4194[self.team] = level._id_1F6D[self.team][0];
            var_0 = level._id_E275[level._id_4194[self.team]][self.team];
        }
        else
        {
            level._id_4194[self.team] = "default";
            var_0 = level._id_E275[level._id_4194[self.team]][self.team];
        }
    }

    return var_0;
}

_id_A262()
{
    self endon( "disconnect" );
    self notify( "newMoveToSpawnCameraInitiated" );
    self endon( "newMoveToSpawnCameraInitiated" );
    self endon( "tac_ops_spawn_focus_changed" );
    self endon( "slamZoomInitiated" );
    var_0 = _id_6D22();
    var_1 = var_0.origin;
    var_2 = var_0.angles;
    var_3 = self._id_E274.origin;
    var_4 = vectornormalize( var_3 - var_0.origin );
    var_5 = _id_0A78::_id_FFE1( var_4, ( 0, 0, 1 ) );
    self._id_E274.angles = var_5;
    var_6 = distance( var_3, var_1 );
    var_7 = var_6 / 3520;
    var_7 = clamp( var_7, 1.5, 3.0 );
    self._id_E27E = var_1;
    self._id_E27D = var_2;
    self._id_E27F = var_7;
    self._id_E273 = gettime() + var_7 * 1000;

    if ( !istrue( var_0._id_FF0C ) )
    {
        self._id_E274 moveto( var_1, var_7, var_7 * 0.3, var_7 * 0.4 );
        self._id_E274 rotateto( var_2, var_7, var_7 * 0.3, var_7 * 0.4 );
        wait 1.0;
    }
    else
    {
        self._id_E274.origin = var_1;
        self._id_E274.angles = var_2;
        self._id_43F0 = var_1;
    }

    _id_19C6();
    thread _id_E702();

    if ( isdefined( self ) && isdefined( self._id_E274 ) && !istrue( self._id_82D8 ) )
    {
        var_8 = anglestoforward( var_2 ) * 300;
        var_8 = var_8 * ( 1, 1, 0 );
        self earthquakeforplayer( 0.03, 15.0, var_1, 1000 );
    }

    self notify( "spawn_camera_idle" );
}

_id_A261( var_0 )
{
    self endon( "disconnect" );
    self notify( "newMoveToSpawnCameraInitiated" );
    self endon( "newMoveToSpawnCameraInitiated" );
    self endon( "tac_ops_map_selection_valid" );
    self endon( "tac_ops_spawn_focus_changed" );
    self endon( "slamZoomInitiated" );
    var_1 = _id_6D22();
    var_2 = var_1.origin;
    var_3 = var_1.angles;

    if ( isdefined( self._id_E27E ) && isdefined( self._id_E27D ) && self._id_E27E == var_2 && self._id_E27D == var_3 )
        return;

    var_4 = self._id_E274.origin;
    var_5 = vectornormalize( var_4 - var_1.origin );
    self._id_E27E = var_2;
    self._id_E27D = var_3;
    self._id_E274 moveto( var_2, 1.0, 0.25, 0.75 );
    self._id_E274 rotateto( var_3, 1.0, 0.25, 0.75 );
    wait 1.0;

    if ( isdefined( self ) && isdefined( self._id_E274 ) && !istrue( self._id_82D8 ) )
    {
        var_6 = anglestoforward( var_3 ) * 300;
        var_6 = var_6 * ( 1, 1, 0 );
        self._id_E274 moveto( var_2 + var_6, 15.0, 1.0, 1.0 );
        self earthquakeforplayer( 0.03, 15.0, var_2, 1000 );
    }

    self notify( "spawn_camera_idle" );
}

_id_DEC3()
{
    self endon( "disconnect" );

    while ( !istrue( self._id_31B4 ) )
        waitframe();

    var_0 = _id_6D22();
    self._id_E274 dontinterpolate();
    self._id_E274.origin = var_0.origin;
    self._id_E274.angles = var_0.angles;
    scripts\mp\utility\player::_id_BD13( "spawnCamera::snapToSpawnCamera()" );

    if ( !istrue( level._id_A71E ) )
        self visionsetmissilecamforplayer( "", 0 );

    _id_19C6();
    thread _id_E702();

    if ( isdefined( self ) && isdefined( self._id_E274 ) && !istrue( self._id_82D8 ) )
    {
        var_1 = anglestoforward( self._id_E274.angles ) * 300;
        var_1 = var_1 * ( 1, 1, 0 );
        self._id_E274 moveto( self._id_E274.origin + var_1, 15.0, 1.0, 1.0 );
        self earthquakeforplayer( 0.03, 15.0, self._id_E274.origin, 1000 );
    }

    self notify( "spawn_camera_idle" );
}

_id_532A()
{
    if ( isdefined( self._id_AC30 ) )
    {
        self _meth_867E( "iw8_mp_spawn_camera" );
        self._id_AC30 stoploopsound( self._id_AC31 );
        self._id_AC30 delete();
        self._id_AC30 = undefined;
        self._id_AC31 = undefined;
    }

    if ( !isdefined( self._id_E274 ) )
        return;

    if ( istrue( level._id_609B ) )
        return;

    scripts\mp\utility\player::_id_78ED( 1 );
    thread _id_EA18();
    _id_CA65();
}

_id_476F()
{
    self cameralinkto();

    if ( !isdefined( self._id_E274 ) )
        return;

    self._id_E274 _id_0765::_id_47E6();
    self._id_E274 delete();
    self._id_E274 = undefined;
    self._id_8ABC = undefined;
    self._id_82D6 = 0;
    self notify( "spawn_camera_deleted" );
}

_id_C473( var_0 )
{
    self endon( "spawn_camera_deleted" );
    self waittill( "disconnect" );

    if ( isdefined( var_0 ) )
    {
        var_0 _id_0765::_id_47E6();
        var_0 delete();
    }
}

_id_EA18()
{
    self endon( "disconnect" );
    self waittill( "spawncamera_start" );
    self _meth_8281( self geteye() );
    self waittill( "spawn_camera_complete" );
    self _meth_8282();
}

_id_CA65( var_0 )
{
    self endon( "disconnect" );
    scripts\mp\utility\player::_id_BD13( "spawnCamera::runSlamZoomOnSpawn() START" );
    self waittill( "spawncamera_start" );
    scripts\mp\utility\player::_id_BD13( "spawnCamera::runSlamZoomOnSpawn() spawncamera_start PASSED" );
    self notify( "slamZoomInitiated" );
    scripts\mp\utility\player::_id_0BC4( 1 );
    self playerhide();
    self _meth_8771( 1 );
    self._id_B915 = 1;
    scripts\common\utility::_id_1563( 0 );
    _id_07F1::_id_D505();
    scripts\mp\utility\player::_id_FD24( "spectator" );
    self _meth_805E( self._id_E274, "tag_origin", 1 );
    scripts\mp\utility\player::_id_BD13( "spawnCamera::runSlamZoomOnSpawn() CameraLinkTo()" );
    _id_7453();
    _id_476F();

    if ( self.team == "spectator" )
    {
        scripts\mp\playerlogic::_id_C496();
        self setclientomnvar( "ui_in_spawn_camera", 0 );

        if ( !istrue( level._id_A71E ) )
            self visionsetmissilecamforplayer( "", 0 );

        scripts\mp\utility\player::_id_0BC4( 0 );
        self _meth_8771( 0 );
        self._id_B915 = 0;
        thread _id_07F1::_id_D6D7();
        return;
    }

    scripts\mp\utility\player::_id_FD24( "playing" );

    if ( istrue( self._id_DB60 ) )
    {
        var_1 = scripts\mp\playerlogic::_id_6D2C();
        self setorigin( var_1._id_E32F );
        self setplayerangles( var_1._id_E264 );
        _id_07EE::_id_5A80( var_1._id_E33F );
        self._id_DB60 = undefined;
        self._id_D059 = undefined;
    }

    self setclientomnvar( "ui_in_spawn_camera", 0 );

    if ( !istrue( level._id_A71E ) )
        self visionsetmissilecamforplayer( "", 0 );

    scripts\mp\utility\player::_id_0BC4( 0 );
    self playershow();
    self _meth_8771( 0 );
    self._id_B915 = 0;
    scripts\common\utility::_id_1563( 1 );
    self notify( "spawned_player" );
    level notify( "player_spawned", self, self._id_10A1C );
    thread scripts\mp\playerlogic::_id_D6CE();
    self._id_10A1C = undefined;
    self._id_46A2 = undefined;
    self._id_E290 = undefined;
    scripts\mp\utility\player::_id_BD13( "spawnCamera::runSlamZoomOnSpawn() COMPLETE" );
}

_id_7452( var_0 )
{
    self endon( "disconnect" );
    var_1 = self geteye();
    var_2 = self.angles;
    var_3 = ( var_1[0], var_1[1], self._id_E274.origin[2] );
    var_3 = var_3 + anglestoforward( var_2 ) * -480;
    self._id_E274 moveto( var_3, 0.75, 0.25, 0.25 );
    var_4 = vectornormalize( var_1 - var_3 );
    var_5 = _id_0A78::_id_FFE1( var_4, ( 0, 0, 1 ) );
    self._id_E274 rotateto( var_5, 0.75, 0.25, 0.25 );
    wait 0.75;
    self visionsetmissilecamforplayer( "tac_ops_slamzoom", 0.2 );
    var_6 = var_1 + anglestoforward( var_2 ) * -60;
    self._id_E274 moveto( var_6, 0.5, 0.1, 0.4 );
    self._id_E274 rotateto( var_2, 0.7, 0.45, 0.05 );
    wait 0.5;
    thread _id_B8C8();
    self._id_E274 moveto( var_1, 0.6, 0.1, 0.1 );
    wait 0.2;
    self visionsetmissilecamforplayer( "", 0 );
}

_id_7453( var_0, var_1 )
{
    self endon( "disconnect" );
    self endon( "kill_handle_move_to_blended" );
    scripts\mp\utility\player::_id_BD13( "spawnCamera::handleMoveTo() START" );

    if ( !isdefined( var_0 ) )
        var_0 = self._id_E290._id_E32F + ( 0, 0, 60 );

    if ( !isdefined( var_1 ) )
        var_1 = self._id_E290._id_E264;

    if ( isdefined( self._id_5EA4 ) )
    {
        var_0 = self._id_5EA4;
        var_1 = self._id_5EA3;
        self._id_5EA4 = undefined;
        self._id_5EA3 = undefined;
    }

    var_2 = _id_175D( self._id_E274.angles[1], var_1[1] ) < 45;
    var_3 = distance2dsquared( self._id_E274.origin, var_0 ) > 1000000;
    thread _id_5892( var_0 );

    if ( !var_2 || !var_3 )
    {
        if ( !istrue( level._id_A71E ) )
        {
            if ( !scripts\cp_mp\utility\game_utility::isnightmap() )
            {
                _id_C525();
                self visionsetmissilecamforplayer( "", 0 );
            }
            else
                self visionsetmissilecamforplayer( "respawn_camera_night", 0 );
        }

        wait 0.05;
        self._id_E274 moveto( var_0, 1.0, 0.1, 0.9 );
        self._id_E274 rotateto( var_1, 1.0, 0.9, 0.1 );
        scripts\mp\utility\player::_id_BD13( "spawnCamera::handleMoveTo() FULL Blend Set" );

        if ( !istrue( level._id_A71E ) )
        {
            if ( !scripts\cp_mp\utility\game_utility::isnightmap() )
                self visionsetmissilecamforplayer( "tac_ops_slamzoom", 0.8 );
        }

        wait 0.8;

        if ( !istrue( level._id_A71E ) )
            self visionsetmissilecamforplayer( "", 0.2 );

        wait 0.2;
    }
    else
    {
        var_4 = vectornormalize( var_0 - self._id_E274.origin );
        var_5 = _id_0A78::_id_FFE1( var_4, ( 0, 0, 1 ) );
        self._id_E274 rotateto( var_5, 0.7, 0.2, 0.2 );
        scripts\mp\utility\player::_id_BD13( "spawnCamera::handleMoveTo() FIRST HALF Blend Set" );

        if ( !istrue( level._id_A71E ) )
        {
            if ( !scripts\cp_mp\utility\game_utility::isnightmap() )
            {
                _id_C525();
                self visionsetmissilecamforplayer( "", 0 );
            }
            else
                self visionsetmissilecamforplayer( "respawn_camera_night", 0 );
        }

        wait 0.05;
        self._id_E274 moveto( var_0, 1.0, 0.1, 0.9 );

        if ( !istrue( level._id_A71E ) )
        {
            if ( !scripts\cp_mp\utility\game_utility::isnightmap() )
                self visionsetmissilecamforplayer( "tac_ops_slamzoom", 0.8 );
        }

        wait 0.5;
        self._id_E274 rotateto( var_1, 0.5, 0.2, 0.1 );
        scripts\mp\utility\player::_id_BD13( "spawnCamera::handleMoveTo() SECOND HALF Blend Set" );
        wait 0.3;

        if ( !istrue( level._id_A71E ) )
            self visionsetmissilecamforplayer( "", 0.2 );

        wait 0.2;
    }

    if ( !istrue( level._id_A71E ) )
        self visionsetmissilecamforplayer( "", 0 );

    scripts\mp\utility\player::_id_BD13( "spawnCamera::handleMoveTo() COMPLETE" );
    self notify( "spawn_camera_complete" );
}

_id_5892( var_0 )
{
    var_1 = [ "physicscontents_clipshot", "physicscontents_missileclip", "physicscontents_vehicle", "physicscontents_characterproxy", "physicscontents_glass", "physicscontents_itemclip" ];
    var_2 = physics_createcontents( var_1 );
    var_3 = scripts\engine\trace::ray_trace( self._id_E274.origin, var_0, undefined, var_2 );
    var_4 = scripts\engine\trace::ray_trace( var_0, self._id_E274.origin, undefined, var_2 );
    var_5 = var_3["fraction"];
    var_6 = var_4["fraction"];
    var_7 = 0.11;

    if ( istrue( self._id_E306 ) )
    {
        self _meth_867D( "iw8_mp_vehicle_spawn", 0.1 );
        thread _id_38D2();
    }

    if ( istrue( self._id_E306 ) || scripts\cp_mp\utility\game_utility::isnightmap() )
    {
        self._id_E306 = undefined;

        if ( isdefined( self._id_1034F ) && self._id_1034F == "light_tank" )
        {
            var_5 = min( var_5, 0.95 );
            var_6 = 0.0;
            var_7 = 0.75;
        }
        else
        {
            var_5 = min( var_5, 0.95 );
            var_6 = 0.0;
        }
    }

    if ( istrue( self._id_DB60 ) )
    {
        var_5 = min( var_5, 0.5 );
        var_6 = 0.0;
        thread _id_107D6();
    }

    if ( var_5 < 1.0 )
    {
        if ( var_5 - 0.22 > 0.0 )
            wait( var_5 - 0.22 );

        thread _id_B8C8( 0.1, 1.0 - var_5 - var_6 + var_7, 0.25 );
    }
}

_id_107D6()
{
    self endon( "disconnect" );
    self waittill( "fadeUp_start" );
    self notify( "kill_handle_move_to_blended" );
}

_id_38D2()
{
    wait 2.5;
    self _meth_867E( "iw8_mp_vehicle_spawn", 1 );
}

_id_B8C8( var_0, var_1, var_2 )
{
    self endon( "disconnect" );
    self._id_31B4 = 0;

    if ( !isdefined( var_2 ) )
        var_2 = 0.5;

    self notify( "fadeDown_start" );

    if ( isdefined( var_0 ) && var_0 > 0 )
    {
        var_3 = 0.0;
        var_4 = var_0 / level._id_5F1B;
        var_5 = 1.0 / var_4;
        var_6 = 0;

        while ( var_6 < var_4 )
        {
            var_6++;
            var_3 = var_3 + var_5;
            var_3 = clamp( var_3, 0.0, 1.0 );
            self setclientomnvar( "ui_world_fade", var_3 );
            waitframe();
        }
    }
    else
        self setclientomnvar( "ui_world_fade", 1.0 );

    self notify( "fadeDown_complete" );
    self._id_31B4 = 1;

    if ( isdefined( var_1 ) && var_1 > 0 )
        wait( var_1 );

    self notify( "fadeUp_start" );

    if ( isdefined( var_2 ) && var_2 > 0 )
    {
        var_3 = 1.0;
        var_4 = var_2 / level._id_5F1B;
        var_5 = 1.0 / var_4;
        var_6 = 0;

        while ( var_6 < var_4 )
        {
            var_6++;
            var_3 = var_3 - var_5;
            var_3 = clamp( var_3, 0.0, 1.0 );
            self setclientomnvar( "ui_world_fade", var_3 );
            waitframe();
        }
    }
    else
        self setclientomnvar( "ui_world_fade", 0.0 );

    self notify( "fadeUp_complete" );
}

_id_A214( var_0, var_1, var_2 )
{
    self moveto( var_1, 1.0, 0.5, 0.5 );
    self rotateto( var_2, 1.0, 0.5, 0.5 );
    var_0 thread _id_E702();
    wait 1.1;
}

_id_19C6()
{
    if ( istrue( self._id_E277 ) )
    {
        self._id_E277 = 0;
        return;
    }

    if ( istrue( self._id_E276 ) )
        return;

    if ( !istrue( level._id_A71E ) )
    {
        if ( scripts\cp_mp\utility\game_utility::isnightmap() )
            self visionsetmissilecamforplayer( "respawn_camera_night", 0 );
        else
            self visionsetmissilecamforplayer( "respawn_camera", 0 );
    }
}

_id_C525()
{

}

_id_E702()
{
    self endon( "disconnect" );
    self endon( "game_ended" );

    if ( isdefined( self._id_AC30 ) )
        return;

    if ( istrue( level._id_A724 ) )
        return;

    self._id_AC30 = spawn( "script_origin", ( 0, 0, 0 ) );
    self._id_AC30 _meth_83C9( self );
    self _meth_867D( "iw8_mp_spawn_camera" );
    var_0 = scripts\mp\utility\teams::_id_6DC1( self.team );
    var_1 = "dx_mpo_" + var_0 + "op_drone_deathchatter";

    if ( !_func_0200( var_1 ) )
        var_1 = "dx_mpo_usop_drone_deathchatter";

    self._id_AC31 = var_1;
    self._id_AC30 playloopsound( var_1 );
    thread _id_531B();
}

_id_531B()
{
    self endon( "spawned_player" );
    var_0 = self._id_AC30;
    var_1 = self._id_AC31;
    self waittill( "disconnect" );

    if ( isdefined( var_0 ) )
    {
        var_0 stoploopsound( var_1 );
        var_0 delete();
    }
}

_id_D565( var_0, var_1 )
{
    level._id_E275["gamemode"][var_0] = var_1;
    _id_D6CA( var_0, "gamemode" );
}

_id_D6CA( var_0, var_1 )
{
    level._id_4194[var_0] = var_1;
}

_id_AC5B()
{
    if ( !istrue( level._id_E275["default"]["allies"]._id_BF0E ) )
    {
        var_0 = level._id_9A99 + level._id_E279 * level._id_E272 * -0.85 + ( 0, 0, 1 ) * level._id_E272 * 0.45;
        var_1 = vectornormalize( level._id_9A99 - var_0 );
        var_2 = _id_0A78::_id_FFE1( var_1, ( 0, 0, 1 ) );
        level._id_E275["default"]["allies"].origin = var_0;
        level._id_E275["default"]["allies"].angles = var_2;
    }

    if ( !istrue( level._id_E275["default"]["axis"]._id_BF0E ) )
    {
        var_3 = level._id_9A99 + level._id_E27C * level._id_E272 * -0.85 + ( 0, 0, 1 ) * level._id_E272 * 0.45;
        var_1 = vectornormalize( level._id_9A99 - var_3 );
        var_4 = _id_0A78::_id_FFE1( var_1, ( 0, 0, 1 ) );
        level._id_E275["default"]["axis"].origin = var_3;
        level._id_E275["default"]["axis"].angles = var_4;
    }
}

_id_AC5A()
{
    var_0 = scripts\mp\utility\teams::_id_6A3A( "allies", 1 );
    var_1 = level._id_E278;

    if ( var_0.size > 0 )
    {
        var_1 = ( 0, 0, 0 );

        foreach ( var_3 in var_0 )
            var_1 = var_1 + var_3.origin;

        var_1 = var_1 / var_0.size;
    }

    var_5 = scripts\mp\utility\teams::_id_6A3A( "axis", 1 );
    var_6 = level._id_E27A;

    if ( var_5.size > 0 )
    {
        var_6 = ( 0, 0, 0 );

        foreach ( var_3 in var_5 )
            var_6 = var_6 + var_3.origin;

        var_6 = var_6 / var_5.size;
    }

    var_9 = var_6 - var_1;
    var_10 = vectornormalize( var_9 );
    var_11 = vectordot( var_9, var_9 );

    if ( var_11 < 1048576 )
        return;

    var_12 = level._id_9A99 + var_10 * level._id_E272 * -0.5 + ( 0, 0, 1 ) * level._id_E272 * 0.2;
    var_13 = vectornormalize( level._id_9A99 - var_12 );
    var_14 = _id_0A78::_id_FFE1( var_13, ( 0, 0, 1 ) );
    level._id_E275["default"]["allies"].origin = var_12;
    level._id_E275["default"]["allies"].angles = var_14;
    var_15 = level._id_9A99 + var_10 * level._id_E272 * 0.5 + ( 0, 0, 1 ) * level._id_E272 * 0.2;
    var_13 = vectornormalize( level._id_9A99 - var_15 );
    var_16 = _id_0A78::_id_FFE1( var_13, ( 0, 0, 1 ) );
    level._id_E275["default"]["axis"].origin = var_15;
    level._id_E275["default"]["axis"].angles = var_16;
    thread _id_0A63::_id_4F23( var_12, level._id_9A99, 60.0, ( 0, 0, 1 ) );
    thread _id_0A63::_id_4F23( var_15, level._id_9A99, 60.0, ( 1, 0, 0 ) );
}

_id_2FB8()
{
    var_0 = scripts\mp\utility\teams::_id_6A3A( "allies", 1 );
    var_1 = _id_6D6A( "allies" );

    if ( var_0.size > 0 )
    {
        var_1 = ( 0, 0, 0 );

        foreach ( var_3 in var_0 )
            var_1 = var_1 + var_3.origin;

        var_1 = var_1 / var_0.size;
    }

    var_5 = scripts\mp\utility\teams::_id_6A3A( "axis", 1 );
    var_6 = _id_6D6A( "axis" );

    if ( var_5.size > 0 )
    {
        var_6 = ( 0, 0, 0 );

        foreach ( var_3 in var_5 )
            var_6 = var_6 + var_3.origin;

        var_6 = var_6 / var_5.size;
    }

    var_9 = var_6 - var_1;
    var_10 = vectornormalize( var_9 );
    var_11 = spawnstruct();
    var_11.origin = ( var_1 + var_6 ) * 0.5;
    var_11.angles = _func_0256( var_10, ( 0, 0, 1 ) );
    var_11._id_EF5F = [];
    var_11._id_EF5F["allies"] = var_1;
    var_11._id_EF5F["axis"] = var_6;
    return var_11;
}

_id_6D6A( var_0 )
{
    if ( isdefined( level._id_E71E ) && isdefined( level._id_E71E[var_0] ) )
        return level._id_E71E[var_0];

    if ( !isdefined( level._id_E71E ) )
        level._id_E71E = [];

    level._id_E71E[var_0] = ( 0, 0, 0 );
    var_1 = _id_07EE::_id_6D30( "mp_tdm_spawn_" + var_0 + "_start" );
    var_2 = ( 0, 0, 0 );

    foreach ( var_4 in var_1 )
        var_2 = var_2 + var_4.origin;

    if ( var_1.size > 0 )
        var_2 = var_2 / var_1.size;

    level._id_E71E[var_0] = var_2;
    return level._id_E71E[var_0];
}

_id_175D( var_0, var_1 )
{
    return 180 - abs( abs( var_0 - var_1 ) - 180 );
}
