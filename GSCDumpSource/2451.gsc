// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "toma_strike", "init" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "toma_strike", "init" ) ]]();

    level._id_F30C = [];
    _id_80BD();
}

_id_80BD()
{
    game["dialog"]["cluster_strike_hit"] = "cluster_strike_hit";
    game["dialog"]["cluster_strike_miss"] = "cluster_strike_miss";
}

_id_F75F( var_0 )
{
    var_1 = var_0._id_EA0F;
    var_2 = getdvarint( "scr_toma_strike_type", 3 );
    return 1;
}

_id_10D70( var_0, var_1, var_2 )
{
    level endon( "game_ended" );
    var_3 = getdvarint( "scr_toma_strike_type", 3 );
    var_2 thread _id_F30D( var_3, undefined, var_1, var_0 );
}

_id_10D94( var_0 )
{
    if ( isdefined( level._id_F30C ) && level._id_F30C.size >= 2 )
    {
        scripts\mp\hud_message::_id_DCBD( "KILLSTREAKS/AIR_SPACE_TOO_CROWDED" );
        var_0 notify( "killstreak_finished_with_deploy_weapon" );
        return 0;
    }

    return 1;
}

_id_10DE1( var_0, var_1 )
{
    var_2 = getdvarint( "scr_toma_strike_type", 3 );
}

_id_10D81( var_0, var_1, var_2 )
{
    if ( !isdefined( var_0._id_EEEF ) )
    {
        var_3 = _id_F313( self );

        if ( !isdefined( var_3 ) )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "hud", "showErrorMessage" ) )
                [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "hud", "showErrorMessage" ) ]]( "KILLSTREAKS/INVALID_POINT" );

            return "continue";
        }
    }

    if ( _id_0764::_id_8599() )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "hud", "showErrorMessage" ) )
            self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "hud", "showErrorMessage" ) ]]( "KILLSTREAKS/CANNOT_BE_USED" );

        return "continue";
    }

    var_4 = undefined;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "sound", "playKillstreakDeployDialog" ) )
    {
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "sound", "playKillstreakDeployDialog" ) ]]( self, var_0._id_EA0F );
        var_4 = 2.0;
    }

    thread scripts\cp_mp\utility\killstreak_utility::_id_B85C( "use_" + var_0._id_EA0F, 1, var_4 );
    return "success";
}

_id_F79F()
{
    var_0 = scripts\cp_mp\utility\killstreak_utility::_id_4034( "toma_strike", self );
    return _id_F7A0( var_0 );
}

_id_F7A0( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );

    if ( isdefined( level._id_8DD2 ) )
    {
        if ( !level [[ level._id_8DD2 ]]( var_0 ) )
            return 0;
    }

    var_1 = getdvarint( "scr_toma_strike_type", 3 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "getGameType" ) )
    {
        var_2 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "getGameType" ) ]]();

        if ( var_2 == "br" )
            var_1 = 5;
    }

    if ( var_1 == 4 )
    {
        var_3 = _id_0A39::_id_F179( var_0, ::_id_10D70 );

        if ( !istrue( var_3 ) )
            return 0;
    }
    else if ( var_1 == 5 && isdefined( self._id_8E3A ) )
    {
        var_0._id_EEEF = self._id_8E3A;
        self._id_8E3A = undefined;
        var_4 = _id_10D81( var_0, undefined, undefined );

        if ( var_4 != "success" )
            return 0;
    }
    else
    {
        var_3 = _id_0990::_id_EA00( var_0, makeweapon( "s4_ks_targeting_radio_mp" ), "weapon_fired", ::_id_10D94, ::_id_10DE1, ::_id_10D81 );

        if ( !istrue( var_3 ) )
            return 0;
    }

    if ( isdefined( level._id_8DAD ) )
    {
        if ( !level [[ level._id_8DAD ]]( var_0 ) )
            return 0;
    }

    if ( _id_F319( var_1 ) )
    {
        var_5 = 1;

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "killstreak", "currentActiveVehicleCount" ) && scripts\cp_mp\utility\script_utility::issharedfuncdefined( "killstreak", "maxVehiclesAllowed" ) )
        {
            if ( [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "currentActiveVehicleCount" ) ]]() >= [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "maxVehiclesAllowed" ) ]]() || level._id_59C1 + var_5 >= [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "maxVehiclesAllowed" ) ]]() )
            {
                self iprintlnbold( &"KILLSTREAKS/TOO_MANY_VEHICLES" );
                var_0 notify( "killstreak_finished_with_deploy_weapon" );
                return 0;
            }
        }

        var_3 = _id_0990::_id_EA02( var_0, ::_id_10D94, ::_id_10DE1 );

        if ( !istrue( var_3 ) )
            return 0;
    }

    var_6 = undefined;

    if ( var_1 == 0 )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle", "incrementFauxVehicleCount" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle", "incrementFauxVehicleCount" ) ]]();

        var_6 = _id_4045( self, var_0 );

        if ( !isdefined( var_6 ) )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle", "decrementFauxVehicleCount" ) )
                [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle", "decrementFauxVehicleCount" ) ]]();

            return 0;
        }
    }
    else if ( var_1 == 1 )
    {
        if ( level._id_F2E8.size == 0 )
        {
            var_7 = [ "ks_strike_camera_1", "ks_strike_camera_2", "ks_strike_camera_3", "ks_strike_camera_4" ];

            foreach ( var_9 in var_7 )
            {
                var_10 = scripts\engine\utility::_id_6D7A( var_9, "targetname" );

                if ( !isdefined( var_10 ) )
                {
                    var_0 notify( "killstreak_finished_with_deploy_weapon" );
                    return;
                }

                var_11 = spawn( "script_model", var_10.origin );
                var_11.angles = var_10.angles;
                var_11._id_045A = var_10._id_045A;
                var_11 setmodel( "tag_player" );
                level._id_F2E8[level._id_F2E8.size] = var_11;
            }
        }
    }
    else if ( var_1 == 2 )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle", "incrementFauxVehicleCount" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle", "incrementFauxVehicleCount" ) ]]();

        var_6 = _id_4044( self, var_0 );

        if ( !isdefined( var_6 ) )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle", "decrementFauxVehicleCount" ) )
                [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle", "decrementFauxVehicleCount" ) ]]();

            return 0;
        }
    }
    else
        level._id_F30C[level._id_F30C.size] = self;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "hud", "teamPlayerCardSplash" ) )
        level thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "hud", "teamPlayerCardSplash" ) ]]( "used_toma_strike", self );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "killstreak", "logKillstreakEvent" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "logKillstreakEvent" ) ]]( var_0._id_EA0F, self.origin );

    if ( var_1 != 4 )
        thread _id_E72F( var_1, var_6, level._id_F2E8, var_0 );

    if ( isdefined( level._id_8DBA ) )
        level thread [[ level._id_8DBA ]]( var_0 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "toma_strike", "munitionUsed" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "toma_strike", "munitionUsed" ) ]]();

    return 1;
}

_id_4045( var_0, var_1 )
{
    var_2 = scripts\cp_mp\utility\killstreak_utility::_id_6ABC();
    var_3 = ( 0, 0, 0 );

    if ( isdefined( var_2 ) )
        var_3 = ( 0, 0, var_2.origin[2] );
    else
        var_3 = ( 0, 0, 600 );

    var_3 = var_3 - ( 0, 0, 900 );
    var_4 = _func_0209( var_0, var_0.origin + ( 0, 0, 1000 ), var_0.angles, "veh_toma_drone_mp", "veh8_mil_air_mquebec8" );

    if ( !isdefined( var_4 ) )
        return;

    var_4._id_03C7 = 100;
    var_4._id_0E1F = 50;
    var_4.health = 9999;
    var_4.maxhealth = 2000;
    var_4._id_935B = 10;
    var_4.team = var_0.team;
    var_4.owner = var_0;
    var_4.angles = var_0.angles;
    var_4.streakinfo = var_1;
    var_4._id_EA0F = var_1._id_EA0F;
    var_4._id_419D = 0;
    var_4._id_CC09 = "destroyed_toma_strike";
    var_4._id_1068D = "destroyed_toma_strike";
    var_4._id_106B2 = "timeout_toma_strike";
    var_4._id_482A = "callout_destroyed_toma_strike";
    var_4._id_41E7 = "proto_apache_flir_mp";
    level._id_F30C[level._id_F30C.size] = var_4;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "killstreak", "addToActiveKillstreakList" ) )
        var_4 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "addToActiveKillstreakList" ) ]]( var_1._id_EA0F, "Killstreak_Air", var_0, 0, 1, 25 );

    var_4 setmaxpitchroll( 15, 15 );
    var_4 vehicle_setspeed( var_4._id_03C7, var_4._id_0E1F );
    var_4 _meth_832C( 50, 5, 2.5 );
    var_4 _meth_8395( 1 );
    var_4 setyawspeed( 500, 100, 25, 0.5 );
    var_4 setotherent( var_0 );
    var_4 setentityowner( var_0 );
    var_4 setcandamage( 1 );
    var_4 setneargoalnotifydist( 100 );
    return var_4;
}

_id_4044( var_0, var_1 )
{
    var_2 = scripts\cp_mp\utility\killstreak_utility::_id_6ABC();
    var_3 = ( 0, 0, 0 );

    if ( isdefined( var_2 ) )
        var_3 = ( 0, 0, var_2.origin[2] + 8000 );
    else
        var_3 = ( 0, 0, 5000 );

    var_3 = var_3 - ( 0, 0, 900 );
    var_4 = level._id_9A95 - anglestoforward( var_0.angles ) * 5000 + var_3;
    var_5 = level._id_9A95 + anglestoforward( var_0.angles ) * 20000 + var_3;
    var_6 = spawn( "script_model", var_4 );
    var_6 setmodel( "veh8_mil_air_acharlie130" );
    var_6.health = 9999;
    var_6.maxhealth = 2000;
    var_6.angles = var_0.angles;
    var_6.owner = var_0;
    var_6.team = var_0.team;
    var_6.streakinfo = var_1;
    var_6._id_EA0F = var_1._id_EA0F;
    var_6._id_AED3 = var_4;
    var_6._id_AEC9 = var_5;
    var_6._id_5C6A = 1;
    var_6 setotherent( var_0 );
    var_6 setentityowner( var_0 );
    var_6 setcandamage( 1 );
    var_6 _meth_856C();
    var_6 _meth_85AD();
    var_6._id_2FD2 = spawn( "script_model", var_6.origin - ( 0, 0, 10 ) );
    var_6._id_2FD2 setmodel( "tag_player" );
    var_6._id_2FD2.angles = vectortoangles( level._id_9A95 - var_6._id_2FD2.origin );
    var_6._id_2FD2 linkto( var_6 );
    var_6._id_39DC = spawn( "script_model", var_6._id_2FD2.origin - ( 0, 0, 10 ) );
    var_6._id_39DC setmodel( "ks_toma_strike_mp" );
    var_6._id_39DC.angles = var_6.angles;
    var_6._id_39DC linkto( var_6._id_2FD2 );
    level._id_F30C[level._id_F30C.size] = var_6;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "killstreak", "addToActiveKillstreakList" ) )
        var_6 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "addToActiveKillstreakList" ) ]]( var_1._id_EA0F, "Killstreak_Air", var_0, 0, 1, 25 );

    return var_6;
}

_id_E72F( var_0, var_1, var_2, var_3 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );

    if ( _id_F319( var_0 ) )
    {
        scripts\common\utility::_id_1516( 0 );
        scripts\common\utility::_id_156B( 0 );
        scripts\common\utility::_id_1508( 0 );
        scripts\common\utility::_id_1548( 0 );
        scripts\common\utility::_id_1562( 0 );
        scripts\common\utility::_id_1527( 0 );
        self._id_C6FA = self.angles;
        var_4 = 1;
        var_5 = spawn( "script_model", self.origin );
        var_5 setmodel( "ks_toma_strike_marker_mp" );
        var_5 setotherent( self );
        var_6 = [];

        foreach ( var_8 in level.players )
        {
            if ( level.teambased && var_8.team == self.team )
                continue;

            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "perk", "hasPerk" ) )
            {
                if ( var_8 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "perk", "hasPerk" ) ]]( "specialty_noscopeoutline" ) )
                    continue;
            }

            var_6[var_6.size] = var_8;
        }

        var_10 = scripts\cp\cp_weapon::_id_EEDC( "thermalvisionenemydefault", self, var_6, self, 0, 1, 1 );
        var_11 = scripts\cp\cp_weapon::_id_EEDC( "thermalvisionfriendlydefault", self, self, self );

        if ( var_0 == 0 )
        {
            if ( !isdefined( var_1 ) )
                return;

            self setplayerangles( var_1.angles );
            self _meth_805E( var_1, "tag_origin" );
            self _meth_8292( var_1 );
            var_1 thread _id_F327();
            var_1 thread _id_F323();
            var_1 thread _id_F32E();
            var_1 thread _id_F325( var_5 );
            thread _id_F32D( var_5, var_1 );
            var_1._id_B798 = spawn( "script_origin", var_1.origin );
            var_1._id_B798 linkto( var_1 );
            var_1._id_B798 playloopsound( "veh_apache_killstreak_amb_lr" );
            self setclientomnvar( "ui_killstreak_health", ( var_1.maxhealth - var_1._id_013D ) / var_1.maxhealth );
        }
        else if ( var_0 == 1 )
        {
            if ( !isdefined( var_2 ) || var_2.size == 0 )
                return;

            var_4 = 0;
            scripts\cp_mp\utility\player_utility::_id_0BC4( 1 );
            thread _id_F322( var_2, var_5 );
            thread _id_F32D( var_5, var_1 );
        }
        else if ( var_0 == 2 )
        {
            if ( !isdefined( var_1 ) )
                return;

            self hashed_0x826D( var_1._id_2FD2, "tag_player", 1, 180, 180, 10, 90, 0 );
            self _meth_8265( 0 );
            var_1 thread _id_F327();
            var_1 thread _id_F323();
            var_1 thread _id_F32E();
            var_1 thread _id_F325( var_5 );
            var_1 thread _id_F32C( var_5 );
            var_1 thread _id_F31C();

            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "flares", "handleIncomingStinger" ) )
                var_1 thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "flares", "handleIncomingStinger" ) ]]( ::_id_F315 );

            if ( isplayer( var_1.owner ) )
                var_1.owner _meth_82F9( "cluster_strike", 2 );

            var_1._id_39DC setscriptablepartstate( "clouds", "on" );
            var_1 moveto( var_1._id_AEC9, 70 );
        }

        self._id_39E1 = 3;
        self setclientomnvar( "ui_cluster_controls", 1 );
        self setclientomnvar( "ui_cluster_missiles_left", self._id_39E1 );
        self visionsetkillstreakforplayer( "proto_toma_strike_mp" );
        thread _id_F31B( var_5, var_1 );
        thread _id_F321( var_5, var_1, var_4 );
        thread _id_F32B( var_0, var_5, var_1, var_3 );
        thread _id_F32F( var_3, var_0, var_10, var_11 );
    }
    else
    {
        thread _id_F30D( var_0, undefined, undefined, var_3 );
        var_3 notify( "killstreak_finished_with_deploy_weapon" );
        thread _id_F328( var_3 );
        scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 20 );
        self notify( "cluster_strike_finished" );
        scripts\cp_mp\utility\killstreak_utility::_id_C13C( var_3 );
    }
}

_id_F315( var_0, var_1, var_2, var_3 )
{
    self endon( "death" );

    for (;;)
    {
        if ( !isdefined( var_2 ) )
            break;

        var_4 = var_2 _meth_8174( 0, 0, 0 );
        var_5 = distance( self.origin, var_4 );

        if ( var_5 < 4000 && var_2._id_5C6A > 0 )
        {
            var_2._id_5C6A--;

            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "flares", "playFx" ) )
                var_2 thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "flares", "playFx" ) ]]( undefined, var_3 );

            var_6 = undefined;

            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "flares", "deploy" ) )
                var_6 = var_2 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "flares", "deploy" ) ]]();

            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "killstreak", "updateScrapAssistDataForceCredit" ) )
                var_2 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "updateScrapAssistDataForceCredit" ) ]]( var_0 );

            self missile_settargetent( var_6 );
            self notify( "missile_pairedWithFlare" );
            return;
        }

        waitframe();
    }
}

_id_F327()
{
    self.owner endon( "disconnect" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "killstreak", "allowRideKillstreakPlayerExit" ) )
        self thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "allowRideKillstreakPlayerExit" ) ]]( "death" );

    self waittill( "killstreakExit" );
    self notify( "death" );
}

_id_F32D( var_0, var_1 )
{
    self endon( "disconnect" );
    self endon( "stop_marker_guide" );
    var_2 = 1;

    if ( isdefined( var_1 ) )
    {
        var_1 endon( "death" );
        var_1 endon( "leaving" );
        var_2 = 0;
    }

    level endon( "game_ended" );
    self setclientomnvar( "ui_killstreak_countdown", gettime() + int( 10000 ) );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 10 );
    scripts\cp_mp\utility\killstreak_utility::_id_B85C( "timeout_toma_strike" );

    if ( isdefined( var_1 ) )
        var_1 notify( "death" );

    self notify( "tomaStrike_returnPlayer", var_2 );

    if ( isdefined( var_0 ) )
        var_0 delete();

    self notify( "stop_marker_guide" );
}

_id_F323()
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "toma_strike", "monitorDamage" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "toma_strike", "monitorDamage" ) ]]( self.maxhealth, "hitequip", ::_id_F324, ::_id_F31A, 1 );
}

_id_F31A( var_0 )
{
    var_1 = var_0.attacker;
    var_2 = var_0.objweapon;
    var_3 = var_0._id_9CBF;
    var_4 = var_0.damage;
    var_5 = var_0._id_7C7C;
    var_6 = var_4;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "killstreak", "getModifiedAntiKillstreakDamage" ) )
        var_6 = self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "getModifiedAntiKillstreakDamage" ) ]]( var_1, var_2, var_3, var_6, self.maxhealth, 2, 3, 4 );

    if ( isdefined( self.owner ) && self.owner scripts\cp_mp\utility\player_utility::_id_8AB5() )
    {
        if ( istrue( self._id_8EC9 ) )
        {
            earthquake( 0.25, 0.2, self.origin, 150 );
            self.owner playrumbleonentity( "damage_heavy" );
        }
        else
        {
            earthquake( 0.15, 0.15, self.origin, 150 );
            self.owner playrumbleonentity( "damage_light" );
        }
    }

    self._id_41A9 = self.maxhealth - ( self._id_013D + var_6 );
    self.owner setclientomnvar( "ui_killstreak_health", self._id_41A9 / self.maxhealth );
    return var_6;
}

_id_F324( var_0 )
{
    var_1 = var_0.attacker;
    var_2 = var_0.objweapon;
    var_3 = var_0._id_9CBF;
    var_4 = var_0.damage;
    var_5 = var_0._id_7C7C;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "damage", "onKillstreakKilled" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "damage", "onKillstreakKilled" ) ]]( self._id_EA0F, var_1, var_2, var_3, var_4, self._id_CC09, self._id_1068D, self._id_482A );

    self notify( "death" );
}

_id_F325( var_0 )
{
    self endon( "gone" );
    self waittill( "death" );

    if ( !isdefined( self ) )
        return;

    self.owner notify( "toma_strike_end" );

    if ( isdefined( self.owner ) && self.owner scripts\cp_mp\utility\player_utility::_id_8AB5() )
        self.owner notify( "tomaStrike_returnPlayer", 0 );

    thread _id_F30E( self.owner, self.origin, "s4_ks_ord_ger_mp", var_0 );
}

_id_F32C( var_0 )
{
    self endon( "death" );
    level endon( "game_ended" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 35.0 );
    self notify( "leaving" );

    if ( isdefined( self.owner ) && self.owner scripts\cp_mp\utility\player_utility::_id_8AB5() )
        self.owner notify( "tomaStrike_returnPlayer", 0 );

    if ( isdefined( self._id_F81C ) )
        self._id_F81C delete();

    if ( isdefined( self._id_2FD2 ) )
        self._id_2FD2 delete();

    if ( isdefined( self._id_39DC ) )
        self._id_39DC delete();

    if ( isdefined( var_0 ) )
        var_0 delete();

    thread _id_F329( var_0 );
}

_id_F329( var_0 )
{
    self endon( "death" );
    level endon( "game_ended" );

    while ( self.origin != self._id_AEC9 )
        waitframe();

    level._id_F30C = scripts\engine\utility::array_remove( level._id_F30C, self );

    if ( isdefined( self._id_B798 ) )
    {
        self._id_B798 stoploopsound();
        self._id_B798 delete();
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle", "decrementFauxVehicleCount" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle", "decrementFauxVehicleCount" ) ]]();

    self delete();
}

_id_F31C()
{
    self endon( "death" );
    self endon( "leaving" );
    level endon( "game_ended" );

    for (;;)
    {
        self.owner earthquakeforplayer( 0.07, 0.1, self gettagorigin( "tag_origin" ), 700 );
        wait 0.1;
    }
}

_id_F32E()
{
    self endon( "death" );
    level endon( "game_ended" );
    self.owner scripts\engine\utility::_id_1087F( "disconnect", "joined_team", "joined_spectators" );
    self notify( "death" );
}

_id_F322( var_0, var_1 )
{
    self endon( "disconnect" );
    self endon( "stop_marker_guide" );
    var_2 = var_0[0];
    self hashed_0x826D( var_2, "tag_player", 1, 45, 45, 20, 70, 0 );
    self setplayerangles( var_2.angles );
    self._id_4198 = var_2;
    self notifyonplayercommand( "switch_camera_left", "+actionslot 3" );
    self notifyonplayercommand( "switch_camera_left", "+moveleft" );
    self notifyonplayercommand( "switch_camera_right", "+actionslot 4" );
    self notifyonplayercommand( "switch_camera_right", "+moveright" );
    var_3 = 0;
    var_4 = var_0.size - 1;
    var_5 = var_3;

    for (;;)
    {
        var_6 = scripts\engine\utility::_id_10895( "switch_camera_left", "switch_camera_right" );
        var_7 = var_0[var_5].origin;
        var_8 = self getplayerangles();

        if ( !isdefined( var_6 ) )
            continue;

        switch ( var_6 )
        {
            case "switch_camera_left":
                var_5++;

                if ( var_5 > var_4 )
                    var_5 = var_3;

                break;
            case "switch_camera_right":
                var_5--;

                if ( var_5 < var_3 )
                    var_5 = var_4;

                break;
        }

        _id_F31D( var_7, var_8, var_0[var_5], var_1 );
        waitframe();
    }
}

_id_F31D( var_0, var_1, var_2, var_3 )
{
    level endon( "game_ended" );
    var_4 = spawn( "script_model", var_0 );
    var_4 setmodel( "tag_player" );
    var_4.owner = self;
    var_4.angles = var_1;
    self hashed_0x826D( var_4, "tag_player", 1, 0, 0, 0, 0, 0 );
    self _meth_8265( 0 );
    self _meth_844D( "bw", 0.25 );
    self visionsetkillstreakforplayer( "" );
    self visionsetmissilecamforplayer( "tac_ops_slamzoom", 0.25 );
    self setclientomnvar( "ui_cluster_controls", 0 );
    var_3 setscriptablepartstate( "target", "off", 0 );
    var_4 moveto( var_2.origin, 0.25 );
    var_4 rotateto( var_2.angles, 0.25 );
    var_4 waittill( "rotatedone" );
    self visionsetmissilecamforplayer( "", 0.2 );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 0.1 );
    self setclientomnvar( "ui_cluster_controls", 1 );
    self _meth_844D( "", 0 );
    self visionsetkillstreakforplayer( "proto_toma_strike_mp" );
    self visionsetmissilecamforplayer( "", 0 );
    var_3 setscriptablepartstate( "target", "guide", 0 );
    self hashed_0x826D( var_2, "tag_player", 1, 45, 45, 20, 70, 0 );
    self._id_4198 = var_2;
    var_4 delete();
}

_id_F32F( var_0, var_1, var_2, var_3 )
{
    self endon( "disconnect" );
    self waittill( "tomaStrike_returnPlayer", var_4 );
    _id_F31E( var_0, var_1, var_4, var_2, var_3 );
}

_id_F32B( var_0, var_1, var_2, var_3 )
{
    self endon( "disconnect" );
    self endon( "stop_marker_guide" );

    if ( isdefined( var_2 ) )
    {
        var_2 endon( "death" );
        var_2 endon( "leaving" );
    }

    level endon( "game_ended" );
    self notifyonplayercommand( "drone_target_start", "+attack" );

    for (;;)
    {
        self waittill( "drone_target_start" );

        if ( self._id_39E1 == 0 )
            continue;

        var_4 = spawn( "script_model", self.origin );
        var_4 setmodel( "ks_toma_strike_marker_mp" );
        var_4 setotherent( self );
        var_4.owner = self;
        thread _id_F320( var_0, var_2, var_1, var_4, var_3 );

        if ( var_0 == 2 )
            scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 2 );
    }
}

_id_F321( var_0, var_1, var_2 )
{
    self endon( "disconnect" );
    self endon( "stop_marker_guide" );
    var_3 = 1;

    if ( isdefined( var_1 ) )
    {
        var_1 endon( "death" );
        var_1 endon( "leaving" );
        var_3 = 0;
    }

    for (;;)
    {
        self waittill( "ammo_used" );
        self._id_39E1--;
        self setclientomnvar( "ui_cluster_missiles_left", self._id_39E1 );

        if ( self._id_39E1 == 0 && istrue( var_2 ) )
        {
            var_0 setscriptablepartstate( "target", "off", 0 );
            self setclientomnvar( "ui_cluster_controls", 2 );
            wait 5;
            var_0 setscriptablepartstate( "target", "guide", 0 );
            self._id_39E1 = 3;
            self setclientomnvar( "ui_cluster_controls", 1 );
            self setclientomnvar( "ui_cluster_missiles_left", self._id_39E1 );
            continue;
        }

        self setclientomnvar( "ui_cluster_missiles_left", self._id_39E1 );

        if ( self._id_39E1 == 0 )
        {
            self notify( "tomaStrike_returnPlayer", var_3 );

            if ( isdefined( var_0 ) )
                var_0 delete();

            self notify( "stop_marker_guide" );
            break;
        }
    }
}

_id_F31B( var_0, var_1 )
{
    self endon( "disconnect" );
    self endon( "stop_marker_guide" );

    if ( isdefined( var_1 ) )
    {
        var_1 endon( "death" );
        var_1 endon( "leaving" );
    }

    var_0 setscriptablepartstate( "target", "guide", 0 );

    for (;;)
    {
        var_2 = _id_F313( self );
        var_0.origin = var_2;
        waitframe();
    }
}

_id_F313( var_0 )
{
    var_1 = [ "physicscontents_water", "physicscontents_glass", "physicscontents_clipshot", "physicscontents_missileclip", "physicscontents_ainosight", "physicscontents_vehicleclip" ];
    var_2 = physics_createcontents( var_1 );
    var_3 = var_0 getvieworigin();
    var_4 = var_3 + anglestoforward( var_0 getplayerangles() ) * 50000;
    var_5 = var_0 scripts\cp_mp\utility\killstreak_utility::_id_B6EF();
    var_6 = scripts\engine\trace::ray_trace( var_3, var_4, var_5, var_2 );
    var_7 = undefined;

    if ( isdefined( var_6["hittype"] ) && var_6["hittype"] != "hittype_none" )
        var_7 = var_6["position"];

    return var_7;
}

_id_F32A( var_0 )
{
    var_1 = self.owner;
    var_1 endon( "disconnect" );
    var_1 endon( "drone_target_placed" );
    self endon( "death" );
    level endon( "game_ended" );
    thread _id_F326();
    var_1 waittill( "drone_target_release" );
    var_1 notify( "drone_target_cancel" );
    var_0 setscriptablepartstate( "target", "off", 0 );
}

_id_F326()
{
    var_0 = self.owner;
    var_0 endon( "disconnect" );
    var_0 endon( "drone_target_release" );
    self waittill( "death" );
    var_0 notify( "toma_strike_end" );
    var_0 notify( "drone_target_cancel" );
}

_id_F320( var_0, var_1, var_2, var_3, var_4 )
{
    level endon( "game_ended" );
    var_3.origin = var_2.origin;
    var_3 setscriptablepartstate( "target", "placed", 0 );

    if ( var_0 == 1 )
        var_3 thread _id_46B8( 7 );
    else
        var_3 thread _id_46B8( 3 );

    self playlocalsound( "weap_cluster_target_beep" );
    self notify( "ammo_used" );

    if ( isdefined( self ) )
        thread _id_F30D( var_0, var_1, var_3, var_4 );
}

_id_F30D( var_0, var_1, var_2, var_3 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    self notify( "drone_target_placed" );
    var_3._id_DA5E++;
    var_4 = undefined;
    var_5 = undefined;

    if ( var_0 == 0 || var_0 == 2 )
    {
        var_4 = var_1.origin - ( 0, 0, 10 ) + anglestoforward( var_1.angles ) * 20;
        var_5 = var_1.angles;
    }
    else if ( var_0 == 1 )
    {
        var_4 = self._id_4198.origin - ( 0, 0, 3000 );
        var_5 = anglestoright( self._id_4198.angles );
    }
    else
    {
        var_4 = self.origin + ( 0, 0, 5000 ) - anglestoforward( self.angles ) * 5000;
        var_5 = anglestoright( self.angles );
    }

    var_6 = undefined;

    if ( isdefined( var_2 ) )
    {
        if ( isvector( var_2 ) )
            var_6 = var_2;
        else
            var_6 = var_2.origin;
    }
    else
    {
        if ( var_0 == 5 && isdefined( var_3._id_EEEF ) )
            var_6 = var_3._id_EEEF;
        else
            var_6 = _id_F313( self );

        var_2 = spawn( "script_model", var_6 );
        var_2 setmodel( "ks_toma_strike_marker_mp" );

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "requestObjectiveID" ) )
            var_2._id_A8F5 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "requestObjectiveID" ) ]]( 99 );

        var_2._id_7C20 = "icon_waypoint_clusterstrike";
        var_2 setotherent( self );
        var_2 _id_F2FF( var_2._id_A8F5, var_2._id_7C20, self, 50 );
        var_2 thread _id_F2F6();
    }

    var_7 = 3;
    var_8 = 300;

    if ( var_0 == 5 )
    {
        var_7 = 6;
        var_8 = 900;

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "killstreak", "dangerNotifyPlayersInRange" ) )
            self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "dangerNotifyPlayersInRange" ) ]]( var_6, var_8 + 300, var_3._id_EA0F );
    }

    if ( var_0 == 0 || var_0 == 2 )
    {
        scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 0.3 );
        var_4 = var_1.origin - ( 0, 0, 10 ) + anglestoforward( var_1.angles ) * 50;
        var_9 = var_6;
        var_10 = spawnstruct();
        var_10._id_E06C = var_4;
        var_10._id_01E7 = var_9;
        var_10._id_829B = var_10._id_01E7 - var_10._id_E06C;
        thread _id_F310( var_10, var_3, var_1 );
    }
    else if ( var_0 == 1 || var_0 == 3 || var_0 == 4 || var_0 == 5 )
    {
        var_11 = 2;
        var_12 = anglestoforward( self getplayerangles() );
        var_13 = anglestoforward( self.angles );
        var_14 = anglestoright( self.angles );
        scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_11 );

        for ( var_16 = 0; var_16 < var_7; var_16++ )
        {
            var_10 = _id_5AE9( var_6, var_8, var_12, var_13, var_14 );
            thread _id_F310( var_10, var_3 );
            scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( randomfloatrange( 1.35, 2.5 ) );
        }

        level._id_F30C = scripts\engine\utility::array_remove( level._id_F30C, self );
    }
}

_id_5AE9( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = spawnstruct();
    var_6 = _id_F30F( var_0, var_2, var_3, var_4 );
    var_7 = vectornormalize( var_0 - ( var_6[0], var_6[1], 0 ) );
    var_8 = _id_F314( var_0, var_1, var_7 );
    var_9 = ( 0, 0, -1 * getdvarint( "#x3f7e9b59e29bb9d7e", 800 ) );
    var_10 = ( var_8._id_0317 - 0.5 * var_9 * _func_0214( 4 ) - var_6 ) / 4;
    var_12 = var_6 + var_10 * 3.925 + 0.5 * var_9 * _func_0214( 3.925 );
    var_5._id_E06C = var_6;
    var_5._id_54E6 = var_8._id_54E6;
    var_5._id_54E7 = var_8._id_54E7;
    var_5._id_01E7 = var_8._id_0317;
    var_5._id_BB70 = var_12;
    var_5._id_829B = var_10;
    return var_5;
}

_id_46B8( var_0 )
{
    self.owner endon( "disconnect" );
    self endon( "death" );
    self.owner scripts\engine\utility::_id_108A5( var_0, "stop_marker_guide" );
    self setscriptablepartstate( "target", "off", 0 );
    self delete();
}

_id_F31F( var_0, var_1 )
{
    var_2 = self.owner;
    var_2 endon( "disconnect" );

    if ( isdefined( var_2 ) )
    {
        var_2 visionsetthermalforplayer( var_1 );

        if ( isdefined( var_0 ) )
        {
            scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_0 );
            var_2 visionsetthermalforplayer( self._id_41E7 );
        }
    }
}

_id_F314( var_0, var_1, var_2 )
{
    var_3 = randomint( var_1 );
    var_4 = randomint( 360 );
    var_5 = var_0[0] + var_3 * cos( var_4 );
    var_6 = var_0[1] + var_3 * sin( var_4 );
    var_7 = var_0[2];
    var_8 = ( var_5, var_6, var_7 );

    if ( isdefined( var_2 ) )
        var_8 = var_8 - var_2 * 100;

    var_9 = 10000;

    if ( isdefined( level._id_F308 ) )
        var_9 = level._id_F308;

    var_10 = spawnstruct();
    var_11 = scripts\engine\trace::_id_3ED4( 1 );
    var_12 = scripts\engine\trace::ray_trace( var_8 + ( 0, 0, var_9 ), var_8 - ( 0, 0, var_9 ), undefined, var_11 );

    if ( isdefined( var_12["entity"] ) )
    {
        var_13 = var_12["entity"];
        var_10._id_54E6 = var_13;

        if ( _id_F317( var_13 ) || _id_F316( var_13 ) )
            var_10._id_54E7 = "flying";
    }

    if ( isdefined( var_12["position"] ) )
        var_8 = var_12["position"];

    var_10._id_0317 = var_8;
    return var_10;
}

_id_F317( var_0 )
{
    return var_0 scripts\cp_mp\vehicles\vehicle::_id_8ADC() && istrue( var_0 scripts\cp_mp\vehicles\vehicle::_id_102EC() );
}

_id_F316( var_0 )
{
    return isdefined( var_0.streakinfo ) && isdefined( var_0._id_D0BD ) && var_0._id_D0BD == "Killstreak_Air";
}

_id_F310( var_0, var_1, var_2 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );

    if ( isdefined( var_2 ) )
        self earthquakeforplayer( 0.35, 1, var_2.origin, 1000 );

    var_3 = magicgrenademanual( "s4_ks_ord_ger_mp", var_0._id_E06C, var_0._id_829B, 5, self );
    var_3.angles = vectortoangles( var_0._id_829B );
    var_3 setentityowner( self );
    var_3 setotherent( self );
    var_3._id_5798 = spawn( "script_model", var_3.origin );
    var_3._id_5798 setmodel( "ks_toma_strike_missile_mp" );
    var_3._id_5798 linkto( var_3 );
    var_3._id_5798 dontinterpolate();
    var_3._id_5798 setentityowner( self );
    var_4 = spawn( "script_model", var_0._id_E06C );
    var_4 linkto( var_3, "tag_origin", ( 10, 0, 10 ), ( 0, 0, 0 ) );
    var_3.killcament = var_4;
    var_3.owner = self;
    var_3.streakinfo = var_1;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "spawn", "addSpawnDangerZone" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "spawn", "addSpawnDangerZone" ) ]]( var_0._id_01E7, 512, 300, self.team, 6, self, 1 );

    var_3 thread _id_F30A();
    var_3 thread _id_F30B( vectortoangles( var_0._id_829B ), gettime(), var_0._id_829B );
}

_id_F312( var_0 )
{
    var_1 = var_0;

    foreach ( var_3 in level.players )
    {
        if ( level.teambased && var_3.team == self.team )
            continue;
        else if ( !level.teambased && var_3 == self )
            continue;

        if ( !var_3 scripts\cp_mp\utility\player_utility::_id_0C14() )
            continue;

        if ( istrue( var_3._id_9B25 ) )
            continue;

        if ( distancesquared( var_0, var_3.origin ) > 250000 )
            continue;

        var_3._id_9B25 = 1;
        var_1 = var_3.origin;
        var_3 thread _id_3936();
        break;
    }

    return var_1;
}

_id_3936()
{
    self endon( "disconnect" );
    scripts\engine\utility::_id_108A5( 10, "death" );
    self._id_9B25 = undefined;
}

_id_F31E( var_0, var_1, var_2, var_3, var_4 )
{
    scripts\common\utility::_id_1516( 1 );
    scripts\common\utility::_id_156B( 1 );
    scripts\common\utility::_id_1508( 1 );
    scripts\common\utility::_id_1548( 1 );
    scripts\common\utility::_id_1562( 1 );
    scripts\common\utility::_id_1527( 1 );
    self _meth_8077( 1 );

    if ( var_1 == 1 )
        scripts\cp_mp\utility\player_utility::_id_0BC4( 0 );

    if ( !istrue( var_2 ) )
    {
        if ( var_1 == 0 )
        {
            self remotecontrolvehicle();
            self cameralinkto();
            self setplayerangles( self._id_C6FA );
            self._id_C6FA = undefined;
        }
        else if ( var_1 == 2 )
            self unlink();
    }
    else
    {
        self unlink();
        self setplayerangles( self._id_C6FA );
        self._id_C6FA = undefined;
    }

    self setclientomnvar( "ui_cluster_controls", 0 );
    self setclientomnvar( "ui_cluster_missiles_left", 0 );
    self visionsetkillstreakforplayer( "", 0 );
    self _meth_844D( "", 0 );
    self visionsetmissilecamforplayer( "", 0 );
    scripts\cp\cp_weapon::_id_EEDB( var_3 );
    scripts\cp\cp_weapon::_id_EEDB( var_4 );
    var_0 notify( "killstreak_finished_with_deploy_weapon" );
}

_id_F30E( var_0, var_1, var_2, var_3 )
{
    self playsound( "weap_hellfire_impact" );

    if ( isdefined( self._id_B798 ) )
    {
        self._id_B798 stoploopsound();
        self._id_B798 delete();
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "shellshock", "grenade_earthQuakeAtPosition" ) )
        level thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "shellshock", "grenade_earthQuakeAtPosition" ) ]]( var_1, 1.5 );

    level._id_F30C = scripts\engine\utility::array_remove( level._id_F30C, self );

    if ( isdefined( self._id_F81C ) )
        self._id_F81C delete();

    if ( isdefined( self._id_2FD2 ) )
        self._id_2FD2 delete();

    if ( isdefined( self._id_39DC ) )
        self._id_39DC delete();

    if ( isdefined( var_3 ) )
        var_3 delete();

    self delete();

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "vehicle", "decrementFauxVehicleCount" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "vehicle", "decrementFauxVehicleCount" ) ]]();
}

_id_F2F8( var_0 )
{
    self endon( "death" );
    self._id_57AE = 1;
    self._id_5798 unlink();
    self._id_5798.origin = var_0;
    self._id_5798 setscriptablepartstate( "explode", "active", 0 );
    thread _id_0823::_id_6280( self._id_5798.origin );
    self hide();
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 3 );

    if ( isdefined( self._id_5798 ) )
        self._id_5798 delete();

    self delete();
}

_id_F2EF()
{
    self endon( "death" );
    wait 0.05;
    self hide();
}

_id_F30A()
{
    self endon( "death" );
    var_0 = self.owner;
    var_0 waittill( "disconnect" );

    if ( isdefined( self.killcament ) )
        self.killcament delete();

    thread _id_F2F8( self.origin );
    self notify( "missile_dest_failed" );
}

_id_F309( var_0, var_1, var_2 )
{
    self endon( "death" );
    self endon( "missile_dest_failed" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 3.925 );
    thread _id_F2F8( var_0 );
}

_id_F2FB( var_0, var_1 )
{
    self endon( "death" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_0 );
    self unlink();
    self moveto( var_1, 3 );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 7 );
    self delete();
}

_id_F30B( var_0, var_1, var_2 )
{
    self endon( "death" );
    self endon( "missile_dest_failed" );
    self waittill( "missile_stuck", var_3 );
    var_4 = -1 * getdvarint( "#x3f7e9b59e29bb9d7e", 800 );
    var_5 = ( gettime() - var_1 ) / 1000;
    var_6 = var_2 + ( 0, 0, var_4 * var_5 );

    if ( isdefined( var_3 ) && isplayer( var_3 ) )
        _id_F307( self, var_3, var_0, var_6 );
    else
        _id_F306( var_3, var_0, var_6 );

    thread _id_F2F8( self.origin );
}

_id_F306( var_0, var_1, var_2 )
{
    var_3 = undefined;
    var_4 = vectornormalize( var_2 );
    var_5 = anglestoup( self.angles );
    var_6 = anglestoright( var_1 );

    if ( abs( vectordot( var_4, var_5 ) ) >= 0.9848 )
        var_3 = _id_F2FE( var_5, var_6 );
    else
        var_3 = _id_F2FD( var_5, var_4 );

    self.angles = var_3;
    var_7 = _id_F2EE( self.origin, var_3, var_0, self.owner, gettime(), self.streakinfo );
}

_id_F307( var_0, var_1, var_2, var_3 )
{
    var_3 = var_3 * ( 0, 0, 1 );
    var_4 = var_0.origin;
    var_5 = ( 0, 0, -1 );
    var_6 = var_4 + var_5 * 128;
    var_7 = physics_createcontents( [ "physicscontents_missileclip", "physicscontents_glass", "physicscontents_water", "physicscontents_item", "physicscontents_vehicle" ] );
    var_8 = _func_02BC( var_4, var_6, var_7, var_0, 0, "physicsquery_closest", 1 );

    if ( isdefined( var_8 ) && var_8.size > 0 )
    {
        var_6 = var_8[0]["position"];
        var_9 = var_8[0]["normal"];
        var_10 = var_8[0]["entity"];
        var_6 = var_6 - var_9 * 1;
        var_11 = -1 * getdvarint( "#x3f7e9b59e29bb9d7e", 800 );
        var_12 = vectordot( var_6 - var_4, var_5 );
        var_13 = _func_0213( 2 * var_12 / ( -1 * var_11 ) );
        var_14 = var_9;
        var_15 = anglestoright( var_2 );
        var_16 = _id_F2FE( var_14, var_15 );
        var_17 = _id_F2EE( var_6, var_16, var_10, self.owner, gettime(), self.streakinfo );
    }
}

_id_F2F7( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = var_0.owner;
    var_6 = var_0.killcament;
    var_7 = anglestoup( var_2 );
    var_8 = var_1 + var_7 * 1;
    var_9 = var_8 + var_7 * 25;
    var_10 = physics_createcontents( [ "physicscontents_missileclip", "physicscontents_glass", "physicscontents_water", "physicscontents_item", "physicscontents_vehicle" ] );
    var_11 = _func_02BC( var_8, var_9, var_10, var_0, 0, "physicsquery_closest", 1 );

    if ( isdefined( var_11 ) && var_11.size > 0 )
        var_9 = var_11[0]["position"] - var_7 * 1;

    var_12 = var_9;
    var_13 = _id_F2F4( var_5, var_0.streakinfo, var_4, var_6 );
    var_14 = _id_F2F1();
    var_15 = _id_F2ED( var_13, var_14, undefined, var_12, var_2, var_3, 0, undefined, undefined );
    var_13._id_2AE8[var_13._id_2AE8.size] = var_15;
    var_15.killcament = var_6;
    var_16 = anglestoforward( var_2 );
    var_17 = anglestoright( var_2 );
    var_18 = anglestoup( var_2 );
    var_19 = _func_01C1( var_18, var_16, 45 );
    var_20 = vectornormalize( _func_0256( var_19, var_18 ) );
    var_21 = _func_0256( var_20, var_16 );
    var_22 = _func_0017( var_19, var_20, var_21 );
    var_14 = _id_F2F1();
    var_15 = _id_F2ED( var_13, var_14, undefined, var_12, var_22, var_3, 0, undefined, undefined );
    var_15.killcament = var_6;
    var_13._id_2AE8[var_13._id_2AE8.size] = var_15;
    var_19 = _func_01C1( var_18, var_16, -45 );
    var_20 = vectornormalize( _func_0256( var_19, var_18 ) );
    var_21 = _func_0256( var_20, var_16 );
    var_22 = _func_0017( var_19, var_20, var_21 );
    var_14 = _id_F2F1();
    var_15 = _id_F2ED( var_13, var_14, undefined, var_12, var_22, var_3, 0, undefined, undefined );
    var_15.killcament = var_6;
    var_13._id_2AE8[var_13._id_2AE8.size] = var_15;
    var_13 _id_F302();

    foreach ( var_15 in var_13._id_2AE8 )
        var_15 thread _id_F304();
}

_id_F304()
{
    var_0 = self.killcament;

    if ( !isdefined( self._id_BC0F ) )
        self._id_BC0F = gettime();

    if ( !isdefined( self._id_E6C7 ) )
    {
        if ( !self._id_D9AB _id_F301() )
        {
            var_1 = _id_F2EA( self._id_E6D2, self._id_E6C6, self._id_E6D4, self._id_D9AB.streakinfo );
            var_1.killcament = var_0;
            var_1 thread _id_F305();
            self._id_879F = 1;
            self._id_D9AB _id_F301( 1 );
        }
    }
    else
    {
        self._id_32F1 = self._id_E6D2;
        self._id_32E9 = undefined;
        self._id_32E3 = self._id_E6C6;
        self._id_32E7 = undefined;
        self._id_32F5 = self._id_E6C7;
        self._id_E6D2 = undefined;
        self._id_E6C6 = undefined;
        self._id_E6C7 = undefined;

        for (;;)
        {
            if ( self._id_D9AB _id_F301() )
                break;

            if ( _id_F2EB() )
                break;

            if ( !self._id_D9AB _id_F300() )
            {
                waitframe();
                continue;
            }

            if ( self._id_32F5 == 0 )
            {
                var_2 = self._id_32E5._id_5BB1;

                if ( isdefined( var_2 ) )
                {
                    self._id_32E3 = [[ var_2 ]]( self._id_32E3 );
                    self._id_32E5._id_5BB1 = undefined;
                }
            }

            self._id_32E7 = _id_F2F2( self._id_32E3, self._id_32F5 );
            self._id_32E9 = self._id_32F1 + self._id_32E7 * _id_F2F3( self._id_32F5, self._id_32E5 );
            var_3 = undefined;
            var_4 = undefined;
            var_5 = undefined;
            var_6 = undefined;
            var_7 = undefined;
            var_8 = _func_02BC( self._id_32F1, self._id_32E9, self._id_D9AB._id_32E4, undefined, 0, "physicsquery_closest", 1 );

            if ( isdefined( var_8 ) && var_8.size > 0 )
            {
                var_3 = 1;
                var_4 = var_8[0]["position"];
                var_5 = var_8[0]["normal"];
                var_6 = var_8[0]["entity"];
            }

            switch ( self._id_32F5 )
            {
                case 0:
                    if ( istrue( var_3 ) )
                    {
                        _id_F2EC( self._id_32F5, 0, var_4 );
                        var_9 = 1;

                        if ( isdefined( self._id_32E5._id_5BAE ) )
                        {
                            var_10 = var_4 - self._id_32F1;
                            var_11 = vectordot( var_10, self._id_32E7 );
                            self._id_32E5._id_5BAE = self._id_32E5._id_5BAE - var_11;

                            if ( self._id_32E5._id_5BAE > self._id_32E5._id_5BB0 )
                                var_9 = 0;
                            else
                                self._id_32E5._id_5BAE = undefined;
                        }

                        var_7 = _id_F2FE( var_5, anglestoright( self._id_32E3 ) );

                        if ( var_9 )
                        {
                            var_1 = _id_F2EA( var_4, var_7, var_6, self._id_D9AB.streakinfo );
                            var_1.killcament = var_0;
                            var_1 thread _id_F305();
                        }

                        self._id_32F5 = 2;
                        self._id_32F1 = var_4 + var_5 * 1;
                        self._id_32E3 = var_7;
                    }
                    else
                    {
                        _id_F2EC( self._id_32F5, undefined, undefined );

                        if ( isdefined( self._id_32E5._id_5BAE ) )
                        {
                            var_10 = self._id_32E9 - self._id_32F1;
                            var_11 = vectordot( var_10, self._id_32E7 );
                            self._id_32E5._id_5BAE = self._id_32E5._id_5BAE - var_11;

                            if ( self._id_32E5._id_5BAE <= self._id_32E5._id_5BB0 )
                                self._id_32E5._id_5BAE = undefined;
                        }

                        self._id_32F5 = 1;
                        self._id_32F1 = self._id_32E9;
                    }

                    break;
                case 1:
                    if ( istrue( var_3 ) )
                    {
                        var_7 = _id_F2FE( var_5, anglestoright( self._id_32E3 ) );
                        var_1 = _id_F2EA( var_4, var_7, var_6, self._id_D9AB.streakinfo );
                        var_1.killcament = var_0;
                        var_1 thread _id_F305();
                        var_12 = vectordot( anglestoup( self._id_32E3 ), var_5 );

                        if ( var_12 < 0.9848 )
                        {
                            _id_F2EC( self._id_32F5, 2, var_4 );
                            self._id_32F5 = 2;
                            self._id_32F1 = var_4 + var_5 * 1;
                            self._id_32E3 = var_7;
                        }
                        else
                        {
                            _id_F2EC( self._id_32F5, 1, var_4 );
                            self._id_32F5 = 0;
                        }
                    }
                    else
                    {
                        _id_F2EC( self._id_32F5, undefined, undefined );
                        self._id_32F1 = self._id_32E9;
                    }

                    break;
                case 2:
                    if ( istrue( var_3 ) )
                    {
                        _id_F2EC( self._id_32F5, 3, var_4 );
                        self._id_32F5 = 0;
                        self._id_32F1 = var_4 + var_5 * 1;
                    }
                    else
                    {
                        _id_F2EC( self._id_32F5, undefined, undefined );
                        self._id_32F5 = 0;
                    }

                    break;
            }

            waittillframeend;
        }

        self._id_879F = 1;
        self._id_D9AB _id_F301( 1 );
        self._id_D9AB._id_2AE8 = [];
    }
}

_id_F2EA( var_0, var_1, var_2, var_3 )
{
    var_4 = 300;

    if ( 1 )
        var_4 = randomintrange( 300, 350 );

    var_5 = self._id_BC0F + var_4;
    var_6 = _id_F2EE( var_0 + anglestoup( var_1 ), var_1, var_2, self._id_D9AB.owner, var_5, var_3 );
    self._id_BC0F = var_5;
    self._id_5506[self._id_5506.size] = var_6;
    self._id_D9AB _id_F303();
    return var_6;
}

_id_F2EE( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_6 = spawn( "script_model", var_0 );
    var_6.angles = var_1;
    var_6._id_EA90 = var_2;
    var_6.owner = var_3;
    var_6._id_E72A = var_4;
    var_6.streakinfo = var_5;
    var_6 setmodel( "s4_ks_toma_strike_cluster_mp" );
    var_6 setotherent( var_3 );
    var_6 setentityowner( var_3 );

    if ( isdefined( var_2 ) )
        var_6 linkto( var_2 );

    return var_6;
}

_id_F305()
{
    self endon( "death" );
    self.owner endon( "disconnect" );
    self.owner endon( "joined_team" );

    if ( isdefined( self._id_EA90 ) )
        self._id_EA90 endon( "death" );

    while ( gettime() < self._id_E72A )
        waitframe();

    thread _id_F2F0();
}

_id_F2F0()
{
    self setscriptablepartstate( "explode", "active", 0 );
    wait 1;
    self delete();
}

_id_F302()
{
    self._id_32F4++;
    self._id_32F3++;
    self._id_5F1F = gettime();
}

_id_F303()
{
    self.entitynumber++;
}

_id_F300()
{
    if ( self._id_5F1F < gettime() )
    {
        self._id_5F1F = gettime();
        self._id_32F3 = 0;
    }

    return self._id_32F3 < 3;
}

_id_F301( var_0 )
{
    var_1 = 0;

    if ( self._id_32F4 >= 60 )
        var_1 = 1;
    else if ( self.entitynumber >= 20 )
        var_1 = 1;
    else if ( istrue( var_0 ) )
    {
        var_2 = 1;

        foreach ( var_4 in self._id_2AE8 )
        {
            if ( !var_4 _id_F2EB() )
            {
                var_2 = 0;
                break;
            }
        }

        if ( var_2 )
            var_1 = 1;
    }

    if ( var_1 )
        self._id_879F = 1;

    return var_1;
}

_id_F2EC( var_0, var_1, var_2 )
{
    self._id_D9AB _id_F302();
    self._id_32F0++;

    if ( isdefined( var_1 ) )
    {
        if ( var_1 == 0 || var_1 == 1 || var_1 == 2 )
            self._id_32EA = 0;
    }
    else if ( var_0 == 1 )
        self._id_32EA++;
}

_id_F2EB( var_0 )
{
    var_1 = 0;
    var_2 = undefined;

    if ( self._id_D9AB _id_F301() )
        var_1 = 1;
    else if ( isdefined( self._id_32E5 ) && self._id_32EA >= self._id_32E5._id_9C58 )
        var_1 = 1;
    else if ( isdefined( self._id_32E5 ) && self._id_32F0 >= self._id_32E5._id_9C43 )
        var_1 = 1;
    else if ( isdefined( self._id_32E5 ) && self._id_5506.size >= self._id_32E5._id_9C54 )
        var_1 = 1;
    else if ( istrue( var_0 ) )
    {
        var_2 = 1;

        foreach ( var_4 in self._id_2AE8 )
        {
            if ( !var_4 _id_F2EB() )
            {
                var_2 = 0;
                break;
            }
        }

        if ( var_2 )
            var_1 = 1;
    }

    if ( var_1 && !istrue( self._id_879F ) )
    {
        var_6 = self._id_AA79;

        if ( isdefined( var_6 ) )
            self [[ var_6 ]]();

        if ( istrue( var_2 ) )
        {
            var_1 = 0;

            foreach ( var_4 in self._id_2AE8 )
            {
                if ( !var_4 _id_F2EB() )
                {
                    var_2 = 0;
                    break;
                }
            }

            if ( var_2 )
                var_1 = 1;
        }
    }

    if ( var_1 )
        self._id_879F = 1;

    return var_1;
}

_id_F2ED( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 )
{
    var_9 = spawnstruct();
    var_9._id_D9AB = var_0;
    var_9._id_32E5 = var_1;
    var_9._id_E6D2 = var_3;
    var_9._id_E6C6 = var_4;
    var_9._id_E6D4 = var_5;
    var_9._id_E6C7 = var_6;
    var_9._id_AA79 = var_8;
    var_9._id_5506 = [];
    var_9._id_2AE8 = [];
    var_9._id_7997 = [];
    var_9._id_79A7 = [];
    var_9._id_32F0 = 0;
    var_9._id_32EA = 0;
    var_9._id_BC0F = var_7;
    return var_9;
}

_id_F2F4( var_0, var_1, var_2, var_3 )
{
    var_4 = spawnstruct();
    var_4.owner = var_0;
    var_4.team = var_0.team;
    var_4.streakinfo = var_1;
    var_4._id_7D3C = var_2;
    var_4._id_2AE8 = [];
    var_4.entitynumber = 0;
    var_4._id_32F4 = 0;
    var_4._id_32F3 = 0;
    var_4._id_5F1F = gettime();
    var_4._id_32E4 = physics_createcontents( [ "physicscontents_missileclip", "physicscontents_glass", "physicscontents_water", "physicscontents_item", "physicscontents_vehicle" ] );
    return var_4;
}

_id_F2F1()
{
    var_0 = spawnstruct();
    var_0._id_4B81 = 250;
    var_0._id_4B80 = 50;
    var_0._id_4B9E = 25;
    var_0._id_9C43 = 2;
    var_0._id_9C58 = 2;
    var_0._id_9C54 = 2;
    return var_0;
}

_id_F2F2( var_0, var_1 )
{
    switch ( var_1 )
    {
        case 0:
            return anglestoforward( var_0 );
        case 1:
            return -1 * anglestoup( var_0 );
        case 2:
            return anglestoup( var_0 );
    }

    return undefined;
}

_id_F2F3( var_0, var_1 )
{
    switch ( var_0 )
    {
        case 0:
            if ( isdefined( var_1._id_5BAE ) )
                return var_1._id_5BAE;
            else
                return var_1._id_4B81;
        case 1:
            return var_1._id_4B80;
        case 2:
            return var_1._id_4B9E;
    }

    return undefined;
}

_id_F2FE( var_0, var_1 )
{
    var_2 = vectornormalize( _func_0256( var_0, var_1 ) );
    var_1 = _func_0256( var_2, var_0 );
    return _func_0017( var_2, var_1, var_0 );
}

_id_F2FD( var_0, var_1 )
{
    var_2 = vectornormalize( _func_0256( var_1, var_0 ) );
    var_1 = _func_0256( var_0, var_2 );
    return _func_0017( var_1, var_2, var_0 );
}

_id_F319( var_0 )
{
    var_1 = 0;

    switch ( var_0 )
    {
        case 2:
        case 1:
        case 0:
            var_1 = 1;
            break;
    }

    return var_1;
}

_id_F318( var_0 )
{
    var_1 = 0;

    switch ( var_0 )
    {
        case 4:
        case 3:
            var_1 = 1;
            break;
    }

    return var_1;
}

_id_F2FF( var_0, var_1, var_2, var_3 )
{
    _func_015B( var_0, var_1 );
    _func_0187( var_0 );
    _func_0180( var_0, var_2 );
    _func_015C( var_0, self );
    _func_015D( var_0, var_3 );
    _func_016D( var_0, 0 );
    _func_016E( var_0, 0 );
    _func_0175( var_0, 1 );

    if ( level.teambased )
        _func_017D( var_0, var_2.team );
    else
        _func_017C( var_0, var_2 );

    _func_0166( var_0, "current" );
}

_id_F2F6()
{
    self endon( "death" );
    self setscriptablepartstate( "target", "on", 0 );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 10 );

    if ( isdefined( self ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "returnObjectiveID" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "returnObjectiveID" ) ]]( self._id_A8F5 );

        self delete();
    }
}

_id_F30F( var_0, var_1, var_2, var_3 )
{
    var_4 = scripts\engine\trace::_id_3ED4( 1 );
    var_5 = scripts\engine\trace::ray_trace( var_0 - var_1 * 30, var_0 + var_1 * 1000, undefined, var_4 );
    var_6 = var_5["position"] + var_5["normal"] * 20;
    var_7 = var_6;
    var_8 = 5000;
    var_9 = 5000;
    var_10 = [ var_7 + var_2 * 100, var_7 - var_2 * 100, var_7 + var_3 * 100, var_7 - var_3 * 100, var_7 + ( var_2 + var_3 ) * 100, var_7 + ( var_2 - var_3 ) * 100, var_7 + ( var_3 - var_2 ) * 100, var_7 + ( -1 * var_2 - var_3 ) * 100 ];
    var_11 = var_7 + ( 0, 0, var_8 * 1.5 );

    foreach ( var_13 in var_10 )
    {
        var_14 = vectornormalize( var_13 - var_7 );
        var_15 = var_7 + ( 0, 0, var_8 ) - var_14 * var_9;
        var_16 = var_7;
        var_17 = scripts\engine\trace::ray_trace_passed( var_15, var_16, undefined, var_4 );

        if ( !istrue( var_17 ) )
        {
            wait 0.05;
            continue;
        }

        var_11 = var_15;
        break;
    }

    return var_11;
}

_id_F328( var_0 )
{
    self endon( "cluster_strike_finished" );
    self endon( "disconnect" );
    level waittill( "game_ended" );
    scripts\cp_mp\utility\killstreak_utility::_id_C13C( var_0 );
}
