// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_E91E()
{
    var_0 = self._id_900A;
    var_1 = _func_0370();

    if ( scripts\mp\utility\weapon::_id_88DF( var_0 ) || scripts\mp\utility\weapon::_id_8A63( var_0 ) || scripts\mp\utility\weapon::_id_88DC( var_0 ) || scripts\mp\utility\weapon::_id_885C( var_0 ) || _id_07E2::_id_89EF( var_0.basename ) || scripts\mp\utility\weapon::_id_8A1E( var_0.basename ) || !_id_E929( var_0 ) || var_0.basename == "iw8_lm_dblmg_mp" || var_0.basename == "s4_me_fists_mp" )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "hud", "showErrorMessage" ) )
            self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "hud", "showErrorMessage" ) ]]( "MP/SUPPORT_BOX_INCOMPAT" );

        return 0;
    }

    var_2 = _id_E920();

    if ( !istrue( var_2 ) )
        return 0;

    if ( self _meth_8542( var_0 ) )
    {
        var_1 = var_0;
        var_0 = var_0 _meth_8626();
    }
    else
        var_1 = var_0 getaltweapon();

    var_3 = [];
    var_4 = 0;
    var_5 = 0;

    if ( !isnullweapon( var_1 ) )
        var_3[var_3.size] = var_1;

    var_3[var_3.size] = var_0;

    foreach ( var_7 in var_3 )
    {
        var_8 = 0;

        if ( var_7 _meth_8622( "akimbo", 1 ) )
            var_8 = 1;

        if ( issameweapon( var_7, var_0, 0 ) )
        {
            var_9 = scripts\mp\weapons::_id_689C( var_7 );
            var_10 = var_9 * 1;

            if ( var_8 )
                var_10 = var_10 * 2;

            thread _id_E927( self, var_7, var_10 );

            if ( 1 )
            {
                if ( var_8 )
                {
                    var_9 = self getweaponammoclip( var_7, "left" ) + self getweaponammoclip( var_7, "right" );
                    var_4 = self getweaponammostock( var_7 );
                    var_11 = var_9 + var_4;
                    var_12 = int( min( weaponmaxammo( var_7 ), var_11 + var_10 ) );
                    self setweaponammostock( var_7, var_12 );
                    self setweaponammoclip( var_7, 0, "left" );
                    self setweaponammoclip( var_7, 0, "right" );
                }
                else
                {
                    var_9 = self getweaponammoclip( var_7 );
                    var_4 = self getweaponammostock( var_7 );
                    var_11 = var_9 + var_4;
                    var_13 = weaponmaxammo( var_7 );
                    var_14 = var_11 + var_10;
                    var_5 = int( var_14 - var_13 );
                    var_15 = int( min( var_13, var_14 ) );

                    if ( var_7.basename == "iw8_lm_dblmg_mp" )
                        self setweaponammoclip( var_7, var_9 + var_10 );
                    else
                    {
                        self setweaponammostock( var_7, var_15 );
                        self setweaponammoclip( var_7, 0 );
                    }
                }
            }
        }
    }

    thread _id_E92E( var_0, var_4, var_5 );
    return 1;
}

_id_E929( var_0 )
{
    if ( !self _meth_8542( var_0 ) )
        return 1;

    var_1 = var_0._id_0490;
    return scripts\mp\weapons::_id_8752( var_1 );
}

_id_E92E( var_0, var_1, var_2 )
{
    level endon( "game_ended" );
    self endon( "death_or_disconnect" );

    for (;;)
    {
        if ( self getcurrentprimaryweapon() != var_0 )
            break;

        var_3 = self getweaponammoclip( var_0 );

        if ( var_3 > 0 )
        {
            thread scripts\mp\hud_message::showsplash( "stopping_power_loaded" );

            if ( var_2 > 0 )
                self setweaponammostock( var_0, var_1 + var_2 );

            break;
        }

        waitframe();
    }

    var_4 = 0;

    if ( self._id_EB06._id_E768._id_C17B == "super_ammo_resupply_drop" )
        var_4 = 1;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "supers", "superUseFinished" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "supers", "superUseFinished" ) ]]( undefined, undefined, undefined, var_4 );
}

_id_E927( var_0, var_1, var_2 )
{
    if ( !isdefined( var_0._id_75BE ) )
        var_0._id_75BE = [];
    else
    {
        var_3 = var_0._id_75BE[var_1.basename];

        if ( isdefined( var_3 ) )
            var_3 thread _id_E92C();
    }

    var_4 = spawnstruct();
    var_4.player = var_0;
    var_4.objweapon = var_1;
    var_4._id_C93A = var_2;
    var_4._id_6261 = 0;
    var_4._id_024B = 0;
    var_0._id_75BE[var_1.basename] = var_4;
    var_4 thread _id_E923();
    var_4 thread _id_E924();
    var_4 thread _id_E925();
    var_4 thread _id_E926();
    var_0 thread _id_E91F();
    var_4 thread _id_E92F();
    var_4 thread _id_E930();
    return var_4;
}

_id_E920()
{
    self endon( "death_or_disconnect" );
    self cancelreload();
    wait 0.05;
    return 1;
}

_id_E92F()
{
    self endon( "stoppingPower_removeHCR" );
    self.player endon( "disconnect" );

    while ( self.player hasweapon( self.objweapon ) )
    {
        if ( _id_E928( self.player getcurrentweapon() ) )
        {
            if ( !self._id_6261 )
            {
                self.player scripts\mp\utility\perk::_id_6FA5( "specialty_bulletdamage" );
                self._id_6261 = 1;
            }
        }
        else if ( self._id_6261 )
        {
            self.player scripts\mp\utility\perk::removeperk( "specialty_bulletdamage" );
            self._id_6261 = 0;
        }

        self.player waittill( "weapon_change" );
    }

    thread _id_E92C();
}

_id_E930()
{
    self endon( "stoppingPower_removeHCR" );
    self.player endon( "disconnect" );

    while ( self.player hasweapon( self.objweapon ) )
    {
        self.player waittill( "weapon_fired", var_0 );

        if ( _id_E928( var_0 ) )
        {
            self._id_C93A--;

            if ( self._id_C93A <= 0 )
                break;
        }
    }

    self.player thread _id_E92D( self.objweapon );
    thread _id_E92C();
}

_id_E92D( var_0 )
{
    self endon( "disconnect" );

    if ( !isdefined( self ) )
        return;

    var_1 = scripts\mp\utility\weapon::getweaponrootname( var_0 );

    if ( var_1 != "s4_ar_stango44" )
        return;

    self._id_8F9D = 1;
    scripts\engine\utility::_id_108AD( 2, "weapon_fired", "weapon_change" );
    self._id_8F9D = undefined;
}

_id_E92C()
{
    self notify( "stoppingPower_removeHCR" );

    if ( isdefined( self.player ) )
    {
        if ( self._id_6261 )
            self.player scripts\mp\utility\perk::removeperk( "specialty_bulletdamage" );

        _id_E922();
    }
}

_id_E92A()
{
    self notify( "stoppingPower_removeHCR" );

    if ( isdefined( self.player ) )
        _id_E922();
}

_id_E922()
{
    if ( isdefined( self.player._id_75BE ) )
    {
        var_0 = self.objweapon.basename;
        var_1 = self.player._id_75BE[var_0];

        if ( var_1 == self )
            self.player._id_75BE[var_0] = undefined;

        self.player _id_0793::_id_AAD4( "super_support_box", self._id_024B );
        _id_0780::_id_9751( self.player, level._id_EB28._id_E76A["super_support_box"]._id_7C71, self._id_024B, 0 );
    }
}

_id_E92B( var_0 )
{
    if ( isdefined( var_0 ) )
    {
        var_1 = var_0.basename;
        var_2 = self._id_75BE[var_1];

        if ( isdefined( var_2 ) )
        {
            _id_0A7B::_id_7D93( "stoppingPowerKills", 1 );
            scripts\mp\supers::_id_3A9C( "super_support_box" );
            var_2._id_024B++;
        }
    }
}

_id_E928( var_0 )
{
    var_1 = self.player _meth_810A( self.objweapon );
    var_2 = self.player _meth_810A( var_0 );
    var_3 = var_1 == var_2;
    return issameweapon( var_0, self.objweapon, 1 ) && var_3;
}

_id_E923()
{
    self.player endon( "disconnect" );
    self endon( "stoppingPower_removeHCR" );
    self.player waittill( "death" );
    thread _id_E92C();
}

_id_E924()
{
    self.player endon( "disconnect" );
    self endon( "stoppingPower_removeHCR" );
    level waittill( "game_ended" );
    thread _id_E92C();
}

_id_E925()
{
    self.player endon( "disconnect" );
    self endon( "stoppingPower_removeHCR" );
    self.player waittill( "all_perks_cleared" );
    thread _id_E92A();
}

_id_E926()
{
    self.player endon( "death_or_disconnect" );
    self.player scripts\mp\utility\perk::_id_6FA5( "specialty_fastreload" );
    self.player scripts\engine\utility::_id_1087F( "weapon_fired", "weapon_change", "stoppingPower_removeHCR" );
    self.player scripts\mp\utility\perk::removeperk( "specialty_fastreload" );
}

_id_E91F()
{
    self endon( "death_or_disconnect" );
    scripts\common\utility::_id_1559( 0 );
    wait 0.4;
    scripts\common\utility::_id_1559( 1 );
}
