// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_AF1F( var_0, var_1, var_2, var_3 )
{
    return length( self._id_04B7 ) > 1;
}

_id_AF28( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( self._id_03E1 ) || !isdefined( self._id_03E1._id_AF1C ) || !isdefined( self._id_03E1._id_AF1E ) )
        return 0;

    var_4 = 200;

    if ( gettime() > self._id_03E1._id_AF1E + var_4 )
        return 0;

    if ( isdefined( self._id_03E1._id_8508 ) )
        self _meth_819F( self._id_03E1._id_8508.origin );

    return 1;
}

_id_AF22( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( self._id_03E1 ) || !isdefined( self._id_017D ) )
        return 0;

    if ( _id_0009::_id_1C39() == "combat" && self _meth_8066( self._id_017D ) )
    {
        self._id_03E1._id_AF1C = "med";
        self._id_03E1._id_AF1D = self._id_017D.origin;
        self._id_03E1._id_AF1E = gettime();
        return 1;
    }

    return 0;
}

_id_B323( var_0, var_1, var_2 )
{
    self endon( var_1 + "_finished" );
    _id_B324( var_0, var_1, var_1 );
}

_id_B324( var_0, var_1, var_2 )
{
    self._id_03E1._id_2B4B = self._id_03E1._id_AF1C;

    if ( _id_DB8F() )
    {
        if ( distance2dsquared( self.origin, self._id_03E1._id_AF1D ) > 1024 )
            self _meth_8343( self._id_03E1._id_AF1D );
    }

    var_3 = self _meth_85C6( var_0, var_1 );
    var_4 = _id_0009::_id_1C46( var_2, var_3 );
    var_5 = 1;

    if ( isdefined( self._id_03E1._id_C073 ) )
    {
        var_6 = 1;
        var_7 = _func_00BB( var_4, "code_move" );

        if ( var_7.size > 0 )
            var_6 = var_7[0];

        var_8 = _func_0079( var_4 ) * var_6;
        var_9 = 0.05 + ( self._id_03E1._id_C073 - gettime() ) / 1000;

        if ( var_9 < 0.2 )
            var_9 = 0.2;

        var_5 = clamp( var_8 / var_9, 0.8, 1.3 );
        self._id_03E1._id_C073 = undefined;
    }

    self _meth_85EB( var_2, var_3, var_5 );
    self._id_03E1._id_AF1C = undefined;
    self._id_03E1._id_AF1E = undefined;
    _id_0009::_id_1C22( var_0, var_1, ::_id_5C9F, undefined, var_2 );
}

_id_DB8F( var_0, var_1, var_2, var_3 )
{
    return self._id_03E1._id_AF1C == "large" || self._id_03E1._id_AF1C == "med" || self._id_03E1._id_AF1C == "smed";
}

_id_DB90( var_0, var_1, var_2, var_3 )
{
    return _id_0009::_id_1C39() == "combat" && !isdefined( self._id_017D ) && self [[ self._id_5D78 ]]();
}

_id_DB91( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_017D );
}

_id_358F( var_0, var_1, var_2 )
{
    return _id_0009::_id_1C55( var_1, scripts\engine\utility::_id_EA4F( _id_6C01() ) );
}

_id_3590( var_0, var_1, var_2 )
{
    var_3 = scripts\engine\utility::_id_EA4F( _id_6C01() );
    return _id_358C( var_0, var_1, var_3 );
}

_id_6C01()
{
    var_0 = 0;

    if ( isdefined( self._id_03E1._id_AF1D ) )
    {
        var_1 = self._id_03E1._id_AF1D - self.origin;

        if ( _func_0132( var_1 ) < 36 )
            var_0 = 0;
        else
        {
            var_2 = _func_025C( var_1 );
            var_0 = self.angles[1] - var_2;
        }
    }

    return _id_6CC6( var_0 );
}

_id_6C00()
{
    var_0 = _id_6C01();
    var_1 = self._id_03E1._id_AF1C + "_" + var_0;
    return var_1;
}

_id_358D( var_0, var_1, var_2 )
{
    var_3 = _id_6C00();
    return _id_0009::_id_1C55( var_1, var_3 );
}

_id_358E( var_0, var_1, var_2 )
{
    var_3 = _id_6C00();
    return _id_358C( var_0, var_1, var_3 );
}

_id_AF3A( var_0, var_1, var_2 )
{
    self._id_03E1._id_2B4B = undefined;
    self _meth_83EF();
}

_id_6CC6( var_0 )
{
    var_0 = _func_000B( var_0 );

    if ( var_0 > 135 || var_0 < -135 )
        var_1 = 2;
    else if ( var_0 < -45 )
        var_1 = 4;
    else if ( var_0 > 45 )
        var_1 = 6;
    else
        var_1 = 8;

    return var_1;
}

_id_742B( var_0, var_1, var_2 )
{
    if ( var_1 == "face_goal" && isdefined( self._id_03E1._id_AF1D ) )
    {
        var_3 = self._id_03E1._id_AF1D - self.origin;
        var_4 = _func_025C( var_3 );
        thread _id_5861( var_0, var_4 );
        return 1;
    }

    return 0;
}

_id_5861( var_0, var_1 )
{
    self notify( "FaceGoalThread" );
    self endon( "FaceGoalThread" );
    self endon( "death" );
    self endon( var_0 + "_finished" );

    for (;;)
    {
        var_2 = 1;
        var_3 = self._id_017D;

        if ( !isdefined( var_3 ) )
        {
            if ( isdefined( self._id_03E1._id_84E7 ) && isplayer( self._id_03E1._id_84E8 ) )
                var_3 = self._id_03E1._id_84E8;
        }

        if ( isdefined( var_3 ) && isplayer( var_3 ) && distance( self.origin, var_3.origin ) <= 200 )
            var_2 = 0;

        var_4 = 0.25;

        if ( isdefined( var_3 ) && _func_011C( var_3 ) )
        {
            if ( !var_2 || var_2 && self _meth_8066( var_3 ) )
            {
                var_5 = var_3.origin - self.origin;
                var_1 = _func_025C( var_5 );
                var_4 = 0.5;
            }
        }

        var_6 = _func_000B( var_1 - self.angles[1] );
        self _meth_8250( "face angle", self.angles[1] + var_6 * var_4 );
        waitframe();
    }
}

_id_AF03( var_0, var_1, var_2 )
{
    self endon( var_1 + "_finished" );
    thread _id_08C8::_id_107FE( var_0, var_1, 1 );
    var_3 = _id_0009::_id_1C34( var_0, var_1 );
    var_4 = randomfloatrange( 0.8, 1.2 );
    self _meth_85EB( var_1, var_3, var_4 );
    _id_0009::_id_1C66( var_0, var_1, _id_0009::_id_1C46( var_1, var_3 ) );
    _id_0009::_id_1C1D( var_0, var_1, _id_0009::_id_1C42( var_0, var_1 ) );
}

_id_AEDE()
{
    if ( isdefined( self._id_0B3E._id_7CB2 ) )
        return _func_000B( self._id_0B3E._id_7CB2.angles[1] - self.angles[1] );
    else if ( isdefined( self._id_AED9 ) )
        return _func_000B( self._id_AED9 - self.angles[1] );
    else if ( isdefined( self._id_0B3E._id_24B9 ) )
    {
        var_0 = _func_034B( self.origin, 256, 96 );

        if ( isdefined( var_0 ) )
        {
            var_1 = _func_000B( _func_025C( var_0 ) - self.angles[1] );
            return var_1;
        }
    }

    return undefined;
}

_id_AF23( var_0, var_1, var_2, var_3 )
{
    var_4 = _id_AEDE();
    var_5 = isdefined( var_4 ) && abs( var_4 ) > 10.0;
    self._id_47FC = var_4;
    return var_5;
}

_id_AED8( var_0, var_1, var_2 )
{
    var_3 = undefined;

    if ( isdefined( self._id_47FC ) )
        var_3 = self._id_47FC;

    if ( !isdefined( var_3 ) )
        var_4 = "8";
    else if ( var_3 < -135 )
        var_4 = "2r";
    else if ( var_3 > 135 )
        var_4 = "2l";
    else if ( var_3 < -45 )
        var_4 = "6";
    else if ( var_3 > 45 )
        var_4 = "4";
    else
        var_4 = "8";

    var_5 = _id_0009::_id_1C55( var_1, var_4 );
    return var_5;
}

_id_AEFE( var_0, var_1, var_2 )
{
    _id_0009::_id_1C59( var_0, var_1, 1 );
}

_id_747D( var_0, var_1 )
{
    if ( var_0 == "face_goal" && isdefined( self._id_47FC ) && isdefined( var_1._id_E759 ) )
    {
        var_2 = _func_00BB( var_1._id_10FCF, "face_goal_end" );
        var_3 = undefined;

        if ( !isdefined( var_2 ) )
            return undefined;

        var_4 = _func_0079( var_1._id_10FCF );

        if ( scripts\common\utility::_id_8A2C() )
            var_5 = self _meth_8111( var_1._id_10FCF );
        else
        {
            var_6 = _func_00BB( var_1._id_10FCF, "face_goal" );
            var_5 = var_6[0];
        }

        var_3 = var_2[0] - var_5;
        var_7 = _func_0077( var_1._id_10FCF, 0, 1 );
        var_8 = _func_000B( self._id_47FC - var_7 );
        var_3 = var_3 * var_4;
        thread _id_AF2F( var_1._id_E759, var_8, var_3 );
    }
    else if ( var_0 == "end" )
        return 0;

    return undefined;
}

_id_AF2F( var_0, var_1, var_2 )
{
    self notify( "FaceYawThread" );
    self endon( "FaceYawThread" );
    self endon( "death" );
    self endon( var_0 + "_finished" );
    var_3 = var_2 * ( 1000 / level._id_01CC );
    var_4 = var_1 / var_3;

    while ( var_3 >= 0 )
    {
        self _meth_8250( "face angle", _func_000A( self.angles[1] + var_4 ) );
        var_3 = var_3 - 1;
        waitframe();
    }
}

_id_AF01( var_0, var_1, var_2 )
{
    self endon( var_1 + "_finished" );
    _id_06AE::_id_4958();
    var_3 = _id_0009::_id_1C34( var_0, var_1 );
    var_4 = _id_0009::_id_1C46( var_1, var_3 );

    if ( scripts\engine\utility::_id_0F4F() && isdefined( self._id_017D ) )
        self _meth_8250( "face enemy" );
    else
        self _meth_8250( "face angle 3d", self.angles );

    if ( isdefined( self._id_02CD ) )
        self _meth_8018( "angle deltas" );
    else
        self _meth_8018( "zonly_physics" );

    _id_0009::_id_1C66( var_0, var_1, var_4 );
    self._id_E837 = _func_000B( _func_0077( var_4, 0, 1 ) + self.angles[1] );
    self._id_049A = 1;
    var_5 = 1;
    self _meth_85EB( var_1, var_3, var_5 );
    var_6 = spawnstruct();
    var_6._id_10FCF = var_4;
    var_6._id_E759 = var_1;
    _id_0009::_id_1C1D( var_0, var_1, ::_id_747D, var_6 );
}

_id_AF21( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( self._id_03E1 ) )
        return 0;

    if ( !isdefined( self._id_0303 ) )
        return 0;

    if ( !isdefined( self._id_03E1._id_24B6 ) || !self._id_03E1._id_24B6 )
        return 0;

    if ( !isdefined( self._id_03E1._id_3D53._id_8505 ) )
    {
        var_4 = _func_0319( self._id_1C08._id_1A0D, var_2 );
        self._id_03E1._id_3D53._id_8505 = var_4[randomint( var_4.size )];
    }

    var_5 = _id_0009::_id_1C55( var_2, self._id_03E1._id_3D53._id_8505 );
    var_6 = _id_0009::_id_1C46( var_2, var_5 );
    var_7 = _func_00B0( var_6 );
    var_8 = length( var_7 );
    var_9 = 12;
    var_10 = 12;
    var_11 = self._id_0262;

    if ( var_11 < var_8 - var_10 )
        return 0;

    var_12 = self _meth_8472();

    if ( var_12 > var_8 + var_9 )
        return 0;

    if ( var_12 < var_8 - var_10 )
        return 0;

    var_13 = self._id_0303 - self.origin;
    var_14 = spawnstruct();
    var_14._id_0051 = 0;
    var_14._id_01AA = vectortoangles( var_13 );
    var_14._id_03E8 = var_5;
    var_14._id_02B4 = var_7;
    var_14._id_03DE = self._id_0303 - rotatevector( var_7, var_14._id_01AA );
    self._id_1C08._id_E903 = var_14;
    return 1;
}

_id_AEDB( var_0, var_1, var_2 )
{
    if ( isdefined( self._id_03E1 ) && isdefined( self._id_03E1._id_3D53 ) )
        self._id_03E1._id_3D53._id_8505 = undefined;

    self._id_03E1._id_24B6 = undefined;
    _id_08CA::_id_5AF2( var_0, var_1, var_2 );
}

_id_AEEE( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_03E1 ) && isdefined( self._id_03E1._id_24D7 ) && self._id_03E1._id_24D7;
}

_id_AEEF( var_0, var_1, var_2, var_3 )
{
    return !_id_AEEE( var_0, var_1, var_2, var_3 );
}

_id_AEFF( var_0, var_1, var_2 )
{
    thread _id_AF00( var_1, self._id_03E1._id_7CB0 );
    _id_0009::_id_1C5F( var_0, var_1 );
}

_id_AF00( var_0, var_1 )
{
    self endon( var_0 + "_finished" );

    while ( isdefined( var_1 ) && isalive( var_1 ) )
    {
        var_2 = self _meth_8203( var_1 );
        var_3 = var_2 - self.origin;
        self _meth_8250( "face angle", _func_025C( var_3 ) );
        waitframe();
    }
}

_id_AF25( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_03E1 ) && isdefined( self._id_03E1._id_24FC ) && self._id_03E1._id_24FC;
}

_id_AEFA( var_0, var_1, var_2, var_3 )
{
    return !_id_AF25( var_0, var_1, var_2, var_3 );
}

_id_AF26( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( self._id_0B3E._id_24BA ) || !self._id_0B3E._id_24BA )
        return 0;

    return !isdefined( self._id_1C08._id_5C88 ) || !self._id_1C08._id_5C88;
}

_id_AF27( var_0, var_1, var_2, var_3 )
{
    if ( isdefined( self._id_0B3E._id_24BA ) && self._id_0B3E._id_24BA )
        return 0;

    return isdefined( self._id_1C08._id_5C88 ) && self._id_1C08._id_5C88;
}

_id_AEF0( var_0, var_1, var_2 )
{
    if ( isdefined( self._id_1C08._id_5C88 ) && self._id_1C08._id_5C88 )
        _id_486A();

    if ( istrue( self._id_0B3E._id_24BA ) && !self._id_5C88 )
        self [[ self._id_5DA6 ]]();
}

_id_AEF1( var_0, var_1, var_2 )
{
    if ( istrue( self._id_0B3E._id_24BA ) )
        self [[ self._id_5DA6 ]]();
}

_id_358C( var_0, var_1, var_2 )
{
    var_3 = var_2;

    if ( isdefined( self._id_1C08._id_5C88 ) && self._id_1C08._id_5C88 )
        var_3 = "fl_" + var_3;

    return _id_0009::_id_1C55( var_1, var_3 );
}

_id_AEE0( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_1C08._id_5C88 ) && self._id_1C08._id_5C88;
}

_id_AEF9( var_0, var_1, var_2, var_3 )
{
    return !_id_AEE0( var_0, var_1, var_2, var_3 );
}

_id_AF02( var_0, var_1, var_2 )
{
    self endon( var_1 + "_finished" );
    thread _id_08C8::_id_107FE( var_0, var_1, 1 );
    var_3 = _id_0009::_id_1C34( var_0, var_1 );
    self._id_03E1._id_5CA0 = _id_0009::_id_1C46( var_1, var_3 );
    var_4 = self._id_A233;

    if ( length( self._id_04B7 ) < 1 )
        var_4 = randomfloatrange( 0.8, 1.2 );

    self _meth_85EB( var_1, var_3, var_4 );
    self _meth_85F3( var_1, var_3, var_4 );
    _id_0009::_id_1C66( var_0, var_1, _id_0009::_id_1C46( var_1, var_3 ) );
    var_5 = _id_0009::_id_1C1D( var_0, var_1, _id_0009::_id_1C42( var_0, var_1 ) );

    if ( var_5 == "code_move" )
        var_5 = _id_0009::_id_1C1D( var_0, var_1, _id_0009::_id_1C42( var_0, var_1 ) );
}

_id_5C9C( var_0 )
{
    if ( var_0 == "attach" )
    {
        var_1 = 1;

        if ( isdefined( self._id_03E1._id_5CA0 ) && self _meth_8112( self._id_03E1._id_5CA0 ) > 0 )
        {
            var_1 = !_func_0011( self._id_03E1._id_5CA0, "flashlight_on" );
            self._id_03E1._id_5CA0 = undefined;
        }

        _id_1D60( var_1 );
    }
    else if ( var_0 == "detach" )
    {
        _id_486A();

        if ( _id_0009::_id_1C39() != "patrol" && isdefined( self._id_0B3E._id_24BA ) && self._id_0B3E._id_24BA )
            self [[ self._id_5DA6 ]]();
    }
    else if ( var_0 == "flashlight_on" )
        self [[ self._id_5DA6 ]]();
    else if ( var_0 == "flashlight_off" )
        self [[ self._id_5DA5 ]]( 0 );
}

_id_D557( var_0 )
{
    if ( isai( self ) )
        _id_486A();

    self._id_5C99 = var_0;

    if ( isai( self ) && istrue( self._id_1C08._id_5C88 ) )
        _id_1D60( 1 );
}

_id_6A29()
{
    var_0 = "wm_equip_gen_flashlight_00";

    if ( isdefined( self._id_5C99 ) )
        var_0 = self._id_5C99;
    else if ( isdefined( level._id_5C99 ) )
        var_0 = level._id_5C99;

    return var_0;
}

_id_6A2A()
{
    var_0 = "tag_accessory_left";

    if ( isdefined( self._id_5C9B ) )
        var_0 = self._id_5C9B;
    else if ( isdefined( level._id_5C9B ) )
        var_0 = level._id_5C9B;

    return var_0;
}

_id_1D60( var_0 )
{
    self [[ self._id_5DA5 ]]( 0 );
    var_1 = _id_6A29();
    var_2 = _id_6A2A();
    self attach( var_1, var_2, 1 );
    self._id_5C98 = var_1;
    self._id_5C9A = var_2;
    self._id_1C08._id_5C88 = 1;
    self._id_5C93 = "tag_light";

    if ( var_0 )
        self [[ self._id_5DA6 ]]();
}

_id_486A()
{
    if ( !istrue( self._id_1C08._id_5C88 ) )
        return;

    self [[ self._id_5DA5 ]]( 0 );

    if ( isdefined( self._id_5C98 ) && isdefined( self._id_5C9A ) )
    {
        self detach( self._id_5C98, self._id_5C9A );
        self._id_5C98 = undefined;
        self._id_5C9A = undefined;
    }

    self._id_1C08._id_5C88 = 0;
    self._id_5C93 = undefined;
}

_id_5C9F( var_0, var_1, var_2 )
{
    _id_5C9C( var_1 );
    return _id_742B( var_0, var_1 );
}

_id_AEE8( var_0, var_1, var_2 )
{
    if ( isdefined( self._id_03E1._id_8508 ) )
    {
        scripts\common\utility::_id_4786( "alert" );
        self._id_03E1._id_AF1C = "small";
        self._id_03E1._id_AF1D = self._id_03E1._id_8508._id_84F8;
        self._id_03E1._id_AF1E = gettime();
    }
}

_id_AEF3( var_0, var_1, var_2, var_3 )
{
    if ( isdefined( self._id_1C08._id_5E1A._id_5E16 ) && self._id_1C08._id_5E1A._id_5E16 == "right" )
        return 0;

    var_4 = self _meth_8472();

    if ( var_4 < 96 )
        return 0;

    return 1;
}

_id_AF29( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( self._id_03E1 ) )
        return 0;

    return self [[ self._id_5D79 ]]() || self [[ self._id_5D7C ]]();
}

_id_AEF5( var_0, var_1, var_2, var_3 )
{
    if ( isdefined( _id_0694::_id_239E() ) )
        return 0;

    if ( istrue( self._id_94C0 ) )
        return 0;

    var_4 = undefined;

    if ( isdefined( self._id_1C08._id_4249._id_1BDA ) )
        var_4 = self._id_1C08._id_4249._id_1BDA[1];
    else
    {
        var_5 = _func_034B( self.origin, 256, 96 );

        if ( isdefined( var_5 ) )
            var_4 = _func_025C( var_5 );
    }

    if ( !isdefined( var_4 ) )
        return 0;

    var_6 = _func_000B( var_4 - self.angles[1] );

    if ( abs( var_6 ) < 25 )
        return 0;

    self._id_47FC = var_6;
    return 1;
}

_id_AEF4( var_0, var_1, var_2, var_3 )
{
    if ( _id_0009::_id_1C29( var_0, "sharp_turn" ) )
        return 0;

    if ( distance2dsquared( self._id_0303, self.origin ) < 16 )
        return 0;

    var_4 = anglestoforward( self.angles );
    var_5 = vectordot( self._id_0261, var_4 );
    var_6 = 0;

    if ( self _meth_8472() > 100 )
        var_6 = -0.707;

    if ( vectordot( self._id_0261, var_4 ) > var_6 )
        return 0;

    var_7 = "left";

    if ( _id_0009::_id_1C29( var_0, "pass_left" ) )
        var_7 = "left";
    else if ( _id_0009::_id_1C29( var_0, "pass_right" ) )
        var_7 = "right";
    else if ( self._id_1C08._id_5E1A._id_5E16 == "right" )
        var_7 = "right";

    var_8 = spawnstruct();
    var_8._id_0052 = 4;
    var_8._id_0051 = 0;
    var_8._id_03E8 = _id_0009::_id_1C55( var_2, var_7 + "2" );
    var_9 = _id_0009::_id_1C46( var_2, var_8._id_03E8 );
    var_8._id_02B4 = _func_00B0( var_9 );
    var_10 = rotatevector( var_8._id_02B4, self.angles );
    var_11 = self.origin + var_10;
    var_12 = _func_02A1( self.origin, var_11, self, 1 );
    var_13 = var_12["position"];
    var_8._id_03DE = var_13 - var_10;
    var_8._id_01AA = self.angles;
    var_8._id_2C2F = 1;
    var_8._id_425B = var_13;
    self._id_1C08._id_E903 = var_8;
    return 1;
}
