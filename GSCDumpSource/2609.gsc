// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_3C43( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    self._id_BDD8 = undefined;

    if ( var_3 < 3.0 )
        return 0;

    var_6 = _id_0990::_id_EA02( var_1 );

    if ( !var_6 )
        return 0;

    thread _id_10BDC( var_2 );
    thread _id_10B62();

    if ( !isdefined( var_4 ) || !var_4 )
        thread _id_10BDA( var_2 );

    if ( isalive( var_0 ) && !istrue( var_0._id_5080 ) )
        _id_E68E( var_0, var_1._id_EA0F, var_2, var_5 );
    else
    {
        self notify( var_2 );
        return 0;
    }

    return 1;
}

_id_10BD8( var_0, var_1 )
{
    self endon( "disconnect" );
    self endon( var_0 );

    for (;;)
    {
        self waittill( "player_killstreak_death", var_2, var_3, var_4, var_5, var_6, var_7 );

        if ( var_3 != self && isplayer( var_3 ) )
        {
            var_3 _id_0A76::_id_6FE6( "destroyed_" + var_1 );
            thread scripts\mp\hud_util::_id_EF8A( "callout_destroyed_" + var_1, var_3 );
            var_8 = makeweaponfromstring( var_7 );
            thread _id_0793::_id_8DBF( var_1, self, self, var_3, var_4, var_6, var_8, "destroyed_" + var_1 );
            thread _id_0A64::_id_9120( var_1 + "_destroyed", undefined, undefined, self.origin );
        }

        self notify( var_0, 1 );
    }
}

_id_10BD9( var_0 )
{
    self endon( var_0 );
    self waittill( "disconnect" );
    self notify( var_0, 1 );
}

_id_10BDD( var_0 )
{
    self endon( var_0 );
    self waittill( "joined_team" );
    self notify( var_0, 1 );
}

_id_10BDA( var_0 )
{
    self endon( "disconnect" );
    self endon( var_0 );
    var_1 = level._id_5F1B;

    for (;;)
    {
        var_2 = 0;

        while ( self usebuttonpressed() )
        {
            var_2 = var_2 + var_1;

            if ( var_2 > 0.75 )
            {
                self._id_B6EE = self.origin;
                self notify( var_0 );
                return;
            }

            wait( var_1 );
        }

        waitframe();
    }
}

_id_10BDE( var_0, var_1 )
{
    self endon( "disconnect" );
    self endon( var_0 );
    wait( var_1 );
    self notify( var_0, 1 );
}

_id_10BDB( var_0 )
{
    self endon( "disconnect" );
    self endon( var_0 );

    for (;;)
        self waittill( "emp_damage", var_1, var_2 );
}

_id_10BDC( var_0 )
{
    scripts\engine\utility::waittill_any_2( var_0, "level_game_ended" );
    _id_E901();
}

_id_10B62()
{
    level waittill( "game_ended" );
    self notify( "level_game_ended" );
}

_id_E68E( var_0, var_1, var_2, var_3 )
{
    if ( isdefined( self ) && isalive( var_0 ) )
    {
        self _meth_850D( var_0 );

        if ( isdefined( var_3 ) )
            self visionsetmissilecamforplayer( var_3, 0 );

        self._id_B74B = var_0;
    }
}

_id_E901()
{
    if ( isdefined( self ) )
    {
        if ( _id_0A6F::_id_87A6() )
        {
            self _meth_850E();
            self visionsetmissilecamforplayer( "", 0 );
        }

        self.streakinfo notify( "killstreak_finished_with_deploy_weapon" );
        self._id_B74B = undefined;
        self._id_0F2D = undefined;
    }
}

_id_3900( var_0 )
{
    _id_09C8::_id_C466( var_0._id_9648 );
    scripts\mp\class::_id_9607();
}

_id_C0B5( var_0 )
{
    var_1 = undefined;

    switch ( var_0._id_9648 )
    {
        case "archetype_assault":
            var_1 = _id_09C7::_id_199D;
            break;
    }

    scripts\mp\class::_id_963C( var_0 );

    if ( isdefined( var_1 ) )
        self [[ var_1 ]]();
}

_id_8D7C( var_0 )
{

}
