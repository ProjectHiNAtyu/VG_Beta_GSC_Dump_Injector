// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_8093()
{
    if ( isdefined( anim._id_DE26 ) )
        return;

    anim._id_DE26 = [];
}

_id_FF33()
{
    if ( !isdefined( anim._id_DE25 ) )
        return;

    foreach ( var_1 in anim._id_DE25 )
    {

    }
}

_id_0FF1( var_0, var_1, var_2 )
{
    _id_8093();
    var_3 = spawnstruct();
    var_3._id_5D6C = var_1;
    var_3._id_5DB1 = var_2;
    anim._id_DE26[var_0] = var_3;
}

_id_402A()
{
    var_0 = spawnstruct();
    var_0._id_1885 = [];
    return var_0;
}

_id_1102( var_0, var_1 )
{
    if ( !isdefined( self._id_1885[var_0] ) )
        self._id_1885[var_0] = [];

    self._id_1885[var_0] = var_1;
}

_id_1106( var_0 )
{
    _id_1102( "smartobject_intro", var_0 );
    self._id_755C = 1;
}

_id_1101( var_0 )
{
    _id_1102( "smartobject_logic", var_0 );
}

_id_1109( var_0 )
{
    if ( isdefined( var_0 ) )
        _id_1102( "smartobject_react", var_0 );

    self._id_7582 = 1;
}

_id_1107( var_0 )
{
    _id_1102( "smartobject_outro", var_0 );
    self._id_7573 = 1;
}

_id_1103()
{
    self._id_751F = 1;
}

_id_1105()
{
    self._id_7543 = 1;
}

_id_1108( var_0 )
{
    if ( isdefined( var_0 ) )
        _id_1102( "smartobject_pain", var_0 );

    self._id_7575 = 1;
}

_id_1104( var_0 )
{
    if ( isdefined( var_0 ) )
        _id_1102( "smartobject_death", var_0 );

    self._id_7535 = 1;
}

_id_6D14( var_0 )
{
    return anim._id_DE26[var_0];
}

_id_DE1C()
{
    var_0 = _id_6D14( self._id_CE3B );
    var_1 = self [[ var_0._id_5D6C ]]();

    if ( isdefined( var_1._id_FE98 ) )
    {
        self._id_A431 = 1;
        return;
    }

    var_2 = gettime() + var_1._id_A4D4 * 1000;
    self._id_A4D4 = var_2;

    if ( isdefined( self._id_94F3 ) )
    {
        foreach ( var_4 in self._id_94F3 )
        {
            if ( isdefined( var_4._id_A4D4 ) )
            {
                var_4._id_A4D4 = max( var_4._id_A4D4, var_2 );
                continue;
            }

            var_4._id_A4D4 = var_2;
        }
    }
}

_id_37D1( var_0 )
{
    var_0._id_37CE = self;
}

_id_F933( var_0 )
{
    var_0._id_37CE = undefined;
}

_id_3142( var_0 )
{
    return !isdefined( var_0._id_37CE );
}

_id_31E3( var_0 )
{
    if ( istrue( var_0._id_4D55 ) )
        return 0;

    if ( isdefined( var_0._id_A431 ) )
        return 0;

    if ( isdefined( var_0._id_A4D4 ) && gettime() < var_0._id_A4D4 )
        return 0;

    var_1 = _id_6D14( var_0._id_CE3B );
    var_2 = [[ var_1._id_5DB1 ]]( var_0 );
    return var_2;
}

_id_68F7( var_0, var_1, var_2 )
{
    if ( !isdefined( anim._id_DE25 ) )
        return undefined;

    var_3 = var_2 * var_2;
    var_4 = _func_01FF( anim._id_DE25, var_0 );
    var_5 = var_4.size;

    for ( var_6 = 0; var_6 < var_5; var_6++ )
    {
        var_7 = var_4[var_6];

        if ( distancesquared( var_7.origin, var_0 ) > var_3 )
            break;

        if ( !_id_3142( var_7 ) )
            continue;

        if ( !_id_31E3( var_7 ) )
            continue;

        if ( !_id_8A24( var_7, var_0, var_1 ) )
            continue;

        var_8 = _id_6D14( var_7._id_CE3B );

        if ( [[ var_8._id_5DB1 ]]( var_7 ) )
            return var_7;
    }

    return undefined;
}

_id_897D( var_0 )
{
    var_1 = 1600;
    var_2 = 4096;

    foreach ( var_4 in level.players )
    {
        if ( distance2dsquared( var_0.origin, var_4.origin ) < var_1 && _func_0214( var_0.origin[2] - var_4.origin[2] ) < var_2 )
        {
            var_5 = _func_025C( var_4.origin - var_0.origin );

            if ( abs( _func_000B( var_5 - var_0.angles[1] ) ) < 90 )
                return 1;
        }
    }

    return 0;
}

_id_68F8( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( !isdefined( anim._id_DE25 ) )
        return;

    var_7 = 60;
    var_8 = 60;
    var_9 = 5184;
    var_10 = 48;

    if ( isdefined( var_2._id_1069F._id_037A ) )
        var_10 = var_2._id_1069F._id_037A;

    var_11 = 128;

    if ( isdefined( var_2._id_1069F._id_CDA6 ) )
        var_11 = var_2._id_1069F._id_CDA6;

    var_12 = var_1 - var_0;
    var_13 = length( var_12 );
    var_14 = var_12 / var_13;
    var_15 = vectornormalize( ( var_14[1], -1 * var_14[0], 0 ) );
    var_16 = 0;
    var_17 = undefined;
    var_18 = 60;
    var_19 = 5;
    var_20 = 0.33;
    var_21 = 1.5;
    var_22 = 300000;
    var_23 = 0.001;
    var_24 = undefined;
    var_25 = -9999;

    foreach ( var_27 in var_2._id_DE12 )
    {
        if ( distancesquared( var_27.origin, self.origin ) < var_9 )
            continue;

        if ( !_id_3142( var_27 ) )
            continue;

        if ( !istrue( var_6 ) && !_id_31E3( var_27 ) )
            continue;

        var_28 = var_27.origin - var_0;
        var_29 = vectordot( var_14, var_28 );

        if ( var_29 < var_4 )
            continue;

        if ( var_29 > var_13 + var_7 )
            continue;

        var_30 = abs( vectordot( var_15, var_28 ) );
        var_31 = _id_6D13( var_27 );

        if ( var_30 * var_30 > var_31 )
            continue;

        var_32 = var_11;

        if ( var_13 - var_30 < 60 )
            var_32 = var_32 * 0.5;

        if ( var_30 > var_32 )
            continue;

        if ( isdefined( var_3 ) && !_func_0119( var_27.origin, var_3 ) )
            continue;

        var_33 = _id_6D14( var_27._id_CE3B );
        var_34 = var_13 - var_4;
        var_35 = var_29 - var_4;
        var_36 = var_5 - var_4;

        if ( var_35 < var_36 )
            var_37 = var_19 + var_18 * ( 1 - ( var_36 - var_35 ) / var_36 );
        else
        {
            var_34 = var_13 - var_5 + var_7;
            var_35 = var_29 - var_5;
            var_37 = var_19 + var_18 * ( var_34 - var_35 ) / var_34;
        }

        if ( var_30 > var_10 )
        {
            var_38 = var_30 - var_10;
            var_37 = var_37 * ( var_20 + ( 1 - var_38 / ( var_32 - var_10 ) ) * ( 1 - var_20 ) );
        }

        if ( _id_897D( var_27 ) )
            var_37 = var_37 * var_21;

        var_39 = var_27 [[ var_33._id_5D6C ]]();

        if ( isdefined( var_39._id_5D6E ) )
            var_37 = var_37 * self [[ var_39._id_5D6E ]]( var_27 );

        if ( isdefined( var_27._id_90A7 ) )
        {
            if ( gettime() - var_27._id_90A7 < var_22 )
                var_37 = var_37 * var_23;
            else
                var_27._id_90A7 = undefined;
        }

        if ( var_37 > var_25 )
        {
            var_25 = var_37;
            var_24 = var_27;
        }
    }

    return var_24;
}

_id_6D13( var_0 )
{
    if ( isdefined( var_0._id_0333 ) )
        return var_0._id_0333 * var_0._id_0333;

    var_1 = anim._id_DE26[var_0._id_CE3B];
    var_2 = [[ var_1._id_5D6C ]]();

    if ( isdefined( var_2._id_0333 ) )
        return var_2._id_0333 * var_2._id_0333;

    return var_2._id_BF36;
}

_id_8A24( var_0, var_1, var_2 )
{
    if ( isdefined( var_1 ) )
        var_3 = var_1;
    else
        var_3 = self.origin;

    var_4 = distancesquared( var_3, var_0.origin );

    if ( isdefined( var_0._id_0333 ) )
    {
        if ( var_4 > _func_0214( var_0._id_0333 ) )
            return 0;
    }
    else
    {
        var_5 = anim._id_DE26[var_0._id_CE3B];
        var_6 = [[ var_5._id_5D6C ]]();

        if ( var_4 > var_6._id_BF36 )
            return 0;
    }

    if ( isdefined( var_2 ) && !_func_0119( var_0.origin, var_2 ) )
        return 0;

    return 1;
}

_id_D4EB( var_0 )
{
    var_1 = _id_6D14( var_0._id_CE3B );
    var_2 = [[ var_1._id_5D6C ]]();

    if ( !istrue( var_2._id_751F ) )
        return;

    self._id_1C08._id_4249._id_1BDA = var_0.angles;
    self._id_1C08._id_4249._id_1BE8 = var_2._id_18BD;
    self._id_1C08._id_4249._id_1BED = 1;
    self._id_1C08._id_4249._id_1BE2 = "arrival";
}

_id_D6C2( var_0 )
{
    var_1 = _id_0694::_id_239E();

    if ( isdefined( var_1 ) )
        _id_3957( var_1 );

    _id_37D1( var_0 );
    _id_0694::_id_23CE( var_0 );
}

_id_3957( var_0 )
{
    if ( isdefined( var_0 ) )
        _id_F933( var_0 );

    _id_0694::_id_238E();
}

_id_31E5( var_0 )
{
    if ( !isdefined( self._id_CE61 ) )
        return 0;

    if ( ![[ self._id_5D7C ]]() && ![[ self._id_5D79 ]]() )
        return 0;

    if ( isdefined( self._id_017D ) )
        return 0;

    return 1;
}

_id_31E4( var_0 )
{
    var_1 = anglestoforward( self.angles );
    var_2 = vectornormalize( var_0.origin - self.origin );

    if ( vectordot( var_1, var_2 ) >= cos( 60 ) )
        var_3 = 64;
    else
        var_3 = 100;

    if ( distancesquared( self.origin, var_0.origin ) <= var_3 * var_3 )
        return 0;

    var_1 = anglestoforward( var_0.angles );

    if ( vectordot( var_1, var_2 ) < cos( 45 ) )
        return 0;

    return 1;
}
