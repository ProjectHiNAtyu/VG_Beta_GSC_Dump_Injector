// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_E804()
{
    level._effect["steel_bib_bullet_impact"] = loadfx( "vfx/s4/killstreaks/vfx_imp_armor_ks.vfx" );
}

_id_E802( var_0 )
{
    self notify( "steel_bib_applied" );

    if ( 1 )
    {
        var_1 = makeweapon( "s4_ks_steel_bib_mp" );
        self _meth_8529( var_1 );
        _id_07C1::_id_D5D5( self, 150, 0 );
        level thread scripts\mp\battlechatter_mp::_id_F756( self, "use_armor" );
        var_2 = self _meth_876B( "ui_light_armor_state" );

        if ( var_2 != 1 )
        {
            self setclientomnvar( "ui_light_armor_state", 1 );
            thread _id_E803();
        }

        return 1;
    }

    return 0;
}

_id_E803()
{
    self endon( "steel_bib_applied" );
    self endon( "disconnect" );
    self endon( "death" );
    self waittill( "lightArmor_unset" );
    var_0 = self _meth_876B( "ui_light_armor_state" );

    if ( var_0 == 1 )
    {
        self setscriptablepartstate( "armor_break", "armor_break", 0 );
        self setclientomnvar( "ui_light_armor_state", 2 );
        self playlocalsound( "mp_fldupgrds_steel_bib_break" );
    }
}

steel_bib_clear_ui()
{
    var_0 = self _meth_876B( "ui_light_armor_state" );

    if ( var_0 == 1 )
    {
        self setscriptablepartstate( "armor_break", "armor_break", 0 );
        self setclientomnvar( "ui_light_armor_state", 2 );
    }
}
