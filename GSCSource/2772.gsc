// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_0271()
{
    self._id_18C0 = "none";
    _id_D71C();
    self._id_F21F = self._id_F21F + 2000;
    self._id_24D8 = 0;
    self _meth_82BD( self._id_02EA );
    self _meth_82C0( "face angle abs", self._id_0054 );
    self _meth_82B8( "anim deltas" );
    self _meth_82C1( "gravity" );
    _id_FD40();
}

_id_017C()
{
    if ( isdefined( self._id_BC59 ) )
    {
        self _meth_82BF( self._id_BC59 );
        self._id_BC59 = undefined;
    }
}

_id_FD40()
{
    self endon( "killanimscript" );
    self endon( "cancelidleloop" );

    for (;;)
    {
        var_0 = self._id_18C0;
        var_1 = _id_4891();

        if ( var_1 != self._id_18C0 )
            _id_54C6( var_1 );

        _id_FBFC();

        switch ( self._id_18C0 )
        {
            case "idle_combat":
                wait 0.2;
                break;
            case "idle_noncombat":
                if ( var_0 == "none" )
                {
                    if ( self._id_02B6 == "run" || self._id_02B6 == "sprint" )
                        self _meth_827D( _id_077B::_id_F07F( self._id_2504, "anml_wolf_pants_mp_fast", "anml_dog_pants_mp_fast" ) );
                    else
                        self _meth_827D( _id_077B::_id_F07F( self._id_2504, "anml_wolf_pants_mp_med", "anml_dog_pants_mp_med" ) );
                }
                else
                {

                }

                wait 0.5;
                break;
            default:
                wait 1;
                break;
        }
    }
}

_id_4891()
{
    if ( _id_DAFB() )
        return "idle_combat";
    else
        return "idle_noncombat";
}

_id_54C6( var_0 )
{
    _id_5772( self._id_18C0 );
    self._id_18C0 = var_0;
    _id_B83E();
}

_id_5772( var_0 )
{
    if ( isdefined( self._id_BC59 ) )
    {
        self _meth_82BF( self._id_BC59 );
        self._id_BC59 = undefined;
    }
}

_id_B83E()
{
    if ( self._id_18C0 == "idle_combat" )
        return;

    self _meth_82E5( "casual_idle" );
    return;
}

_id_FBFC()
{
    var_0 = undefined;

    if ( isdefined( self._id_017D ) && distancesquared( self._id_017D._id_02EA, self._id_02EA ) < 1048576 )
        var_0 = self._id_017D;
    else if ( isdefined( self._id_02F2 ) && distancesquared( self._id_02F2._id_02EA, self._id_02EA ) > 576 )
        var_0 = self._id_02F2;

    if ( isdefined( var_0 ) )
    {
        var_1 = var_0._id_02EA - self._id_02EA;
        var_2 = _func_025B( var_1 );

        if ( abs( _func_000B( var_2[1] - self._id_0054[1] ) ) > 1 )
            _id_F81B( var_2[1] );
    }
}

_id_DAFB()
{
    return isdefined( self._id_017D ) && _id_0A74::_id_89D3( self._id_017D ) && distancesquared( self._id_02EA, self._id_017D._id_02EA ) < 1000000;
}

_id_6DEB( var_0 )
{
    if ( _id_DAFB() )
    {
        if ( var_0 < -135 || var_0 > 135 )
            return "attack_turn_180";
        else if ( var_0 < 0 )
            return "attack_turn_right_90";
        else
            return "attack_turn_left_90";
    }
    else if ( var_0 < -135 || var_0 > 135 )
        return "casual_turn_180";
    else if ( var_0 < 0 )
        return "casual_turn_right_90";
    else
        return "casual_turn_left_90";
}

_id_F81B( var_0 )
{

}

_id_C919( var_0, var_1 )
{

}

_id_D71C()
{
    self._id_F21F = gettime() + 8000 + _func_01B8( 5000 );
}

_id_4CD1( var_0 )
{
    self._id_2570 = 1;
    self._id_03DF = 1;
    self._id_24D8 = 1;
    var_1 = _func_000B( var_0 - self._id_0054[1] );

    if ( var_1 > 0 )
        var_2 = 1;
    else
        var_2 = 0;

    self notify( "cancelidleloop" );
    self._id_2570 = 0;
    self._id_03DF = 0;
    self._id_24D8 = 0;
    self._id_18C0 = "none";
    thread _id_FD40();
}

_id_AA87( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 )
{
    if ( isdefined( self._id_24D8 ) && self._id_24D8 )
        return;

    var_10 = _func_025B( var_7 );
    var_11 = var_10[1] - 180;
    _id_4CD1( var_11 );
}

_id_AADD( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    if ( self._id_24D8 )
        return;

    _id_4CD1( self._id_0054[1] + 180 );
}
