// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_AB46()
{
    for (;;)
    {
        level waittill( "connected", var_0 );

        if ( !isdefined( var_0.pers["startedMapSelect"] ) )
            var_0.pers["startedMapSelect"] = 0;
    }
}

_id_3146( var_0, var_1 )
{
    if ( !scripts\cp_mp\utility\killstreak_utility::_id_8DAE( var_0._id_EA0F ) )
    {
        if ( isdefined( level._id_8DC9 ) && level._id_8DC9 > 0 )
        {
            if ( level._id_70F9 - level._id_7E95 < level._id_8DC9 )
            {
                var_2 = level._id_8DC9 - ( level._id_70F9 - level._id_7E95 );

                if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "hud", "showErrorMessage" ) )
                    self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "hud", "showErrorMessage" ) ]]( "KILLSTREAKS/UNAVAILABLE_FOR_N", var_2 );

                return 0;
            }
        }
    }

    if ( isdefined( var_1 ) )
    {
        var_3 = _id_3147( var_0, var_1 );

        if ( isdefined( var_3 ) )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "hud", "showErrorMessage" ) )
                self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "hud", "showErrorMessage" ) ]]( var_3 );

            return 0;
        }
    }

    return 1;
}

_id_AA9E( var_0 )
{
    var_0._id_87DE = 1;
    var_0.owner._id_87DE = 1;

    switch ( var_0._id_EA0F )
    {
        case "precision_airstrike":
        case "toma_strike":
            thread monitor_binoculars( var_0 );
            break;
    }

    var_0.owner scripts\common\utility::_id_1507( 0 );
}

monitor_binoculars( var_0 )
{
    self endon( "death_or_disconnect" );
    level endon( "game_ended" );
    self endon( "deploy_fired" );
    thread clear_binoculars_on_death();
    thread clear_binoculars_on_match_end();

    for (;;)
    {
        if ( issubstr( getcompleteweaponname( self getcurrentweapon() ), "binoculars" ) )
        {
            if ( self playerads() >= 0.3 )
            {
                if ( !self _meth_876B( "ui_binoculars" ) )
                    self setclientomnvar( "ui_binoculars", 1 );
            }
            else if ( self _meth_876B( "ui_binoculars" ) )
                self setclientomnvar( "ui_binoculars", 0 );
        }

        wait 0.1;
    }
}

clear_binoculars_on_death()
{
    level endon( "game_ended" );
    self endon( "deploy_fired" );
    self waittill( "death_or_disconnect" );
    self setclientomnvar( "ui_binoculars", 0 );
}

clear_binoculars_on_match_end()
{
    self endon( "death_or_disconnect" );
    self endon( "deploy_fired" );
    level waittill( "game_ended" );
    self setclientomnvar( "ui_binoculars", 0 );
}

_id_AA9D( var_0, var_1 )
{
    var_0._id_87DE = 0;
    var_0.owner._id_87DE = 0;

    switch ( var_0._id_EA0F )
    {
        case "precision_airstrike":
        case "toma_strike":
            self setclientomnvar( "ui_binoculars", 0 );
            break;
    }

    var_0.owner scripts\common\utility::_id_1507( 1 );
}

_id_E9FD()
{
    self notify( "cancel_all_killstreak_deployments" );
}

_id_E9FE( var_0, var_1 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );

    if ( !_id_3146( var_0, var_1 ) )
        return 0;

    _id_AA9E( var_0 );
    thread _id_10AF7( var_0, var_1 );
    var_2 = _id_EA03( var_1 );
    var_0 notify( "gesture_deploy_ended" );
    _id_AA9D( var_0, var_2 );
    return var_2;
}

_id_10AF7( var_0, var_1 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( "death" );
    var_0 endon( "gesture_deploy_ended" );
    self waittill( "cancel_all_killstreak_deployments" );
    self takeweapon( var_1 );
}

_id_EA01( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( !_id_3146( var_0, var_1 ) )
        return 0;

    _id_AA9E( var_0 );
    var_7 = scripts\engine\utility::ter_op( istrue( var_2 ), ::_id_1097C, undefined );
    var_8 = _id_EC34( var_1, var_0, var_7, var_3, var_4, var_5, var_6 );

    if ( !istrue( var_8 ) )
    {
        _id_AA9D( var_0, 0 );
        return 0;
    }

    _id_AA9D( var_0, var_8 );
    return 1;
}

_id_EA00( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( "death" );

    if ( !_id_3146( var_0, var_1 ) )
        return 0;

    _id_AA9E( var_0 );
    var_8 = _id_EC34( var_1, var_0, ::_id_1097C, var_3, var_4, var_6, var_7 );

    if ( !istrue( var_8 ) )
    {
        _id_AA9D( var_0, 0 );
        return 0;
    }

    scripts\common\utility::allow_equipment( 0 );
    var_9 = _id_10AC6( var_0, var_2, var_1, var_5 );
    scripts\common\utility::allow_equipment( 1 );
    _id_AA9D( var_0, var_9 );
    return istrue( var_9 );
}

_id_EA02( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    var_7 = "ks_remote_device_mp";

    if ( isdefined( var_5 ) )
        var_7 = var_5;

    var_8 = makeweapon( var_7 );
    var_9 = 1.6;

    if ( var_7 == "ks_remote_nuke_mp" )
        var_9 = 2.133;

    if ( !_id_3146( var_0, var_8 ) )
        return 0;

    _id_AA9E( var_0 );
    thread _id_EA04( var_0 );
    scripts\cp_mp\utility\killstreak_utility::_id_E727( var_0._id_EA0F, 0.75 );
    scripts\common\utility::_id_1531( 0 );
    scripts\common\utility::_id_1526( 0 );
    scripts\common\utility::_id_1562( 0 );
    scripts\common\utility::_id_152C( 0 );
    scripts\common\utility::allow_equipment( 0 );
    var_10 = _id_EC34( var_8, var_0, ::_id_1097C, var_1, var_2, var_3, var_4 );

    if ( isdefined( self ) && scripts\cp_mp\utility\player_utility::_id_0C14() )
    {
        scripts\common\utility::_id_1531( 1 );
        scripts\common\utility::_id_1526( 1 );
        scripts\common\utility::_id_1562( 1 );
        scripts\common\utility::_id_152C( 1 );
        scripts\common\utility::allow_equipment( 1 );
    }

    if ( !istrue( var_10 ) )
    {
        _id_AA9D( var_0, 0 );

        if ( isdefined( self ) )
            scripts\cp_mp\utility\killstreak_utility::_id_E93E( 0, 1 );

        return 0;
    }

    var_11 = _id_10AC4( var_0, var_9, var_6 );
    _id_AA9D( var_0, var_11 );
    return istrue( var_11 );
}

_id_EA04( var_0 )
{
    self endon( "death_or_disconnect" );
    level endon( "game_ended" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 0.5 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "sound", "playKillstreakDeployDialog" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "sound", "playKillstreakDeployDialog" ) ]]( self, var_0._id_EA0F );
}

_id_E9FF( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( "death" );
    var_7 = "throwback_marker_mp";

    if ( isdefined( var_1 ) )
        var_7 = var_1;

    var_0._id_47CD = makeweapon( var_7 );
    var_8 = var_0._id_47CD;

    if ( !_id_3146( var_0, var_8 ) )
        return 0;

    _id_AA9E( var_0 );
    var_9 = _id_EC34( var_8, var_0, ::_id_1097C, var_2, var_3, var_5, var_6 );

    if ( !istrue( var_9 ) )
    {
        _id_AA9D( var_0, 0 );
        return 0;
    }

    var_10 = _id_10AC6( var_0, "grenade_fire", var_8, var_4 );
    _id_AA9D( var_0, var_10 );
    return istrue( var_10 );
}

_id_EC34( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( "death" );

    if ( self hasweapon( var_0 ) )
        return 0;

    if ( getcompleteweaponname( self getcurrentweapon() ) == "iw8_lm_dblmg_mp" )
    {
        self notify( "switched_from_minigun" );

        while ( getcompleteweaponname( self getcurrentweapon() ) == "iw8_lm_dblmg_mp" )
            waitframe();
    }

    if ( !isdefined( var_7 ) )
        var_7 = 1;

    scripts\cp_mp\utility\inventory_utility::_giveweapon( var_0, 0, 0, var_7 );
    var_8 = _id_2FB7( var_1, var_3 );

    if ( !istrue( var_8 ) )
    {
        scripts\cp_mp\utility\inventory_utility::_takeweapon( var_0 );
        return 0;
    }

    thread _id_10AF8( var_1, var_0 );
    thread _id_10B25( var_1, var_0 );
    var_9 = scripts\cp_mp\utility\inventory_utility::_id_4D21( var_0 );
    var_1 notify( "deploy_weapon_switch_ended" );

    if ( isdefined( var_4 ) )
        self thread [[ var_4 ]]( var_1, var_9 );

    waitframe();

    if ( !var_9 )
        var_2 = undefined;

    if ( !scripts\cp_mp\utility\player_utility::_id_0C14() )
        return 0;

    thread _id_3859( var_9, var_1, var_0, var_2, var_5, var_6 );
    return var_9;
}

_id_2FB7( var_0, var_1 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( "death" );
    self endon( "cancel_all_killstreak_deployments" );

    if ( isdefined( var_1 ) )
        return self [[ var_1 ]]( var_0 );

    return 1;
}

_id_10AF8( var_0, var_1 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( "death" );
    var_0 endon( "deploy_weapon_switch_ended" );
    self waittill( "cancel_all_killstreak_deployments" );

    if ( scripts\cp_mp\utility\inventory_utility::_id_8A6D( var_1 ) )
        scripts\cp_mp\utility\inventory_utility::_id_0DE3( var_1 );
}

_id_10B25( var_0, var_1 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( "death" );
    var_0 endon( "deploy_weapon_switch_ended" );
    self waittill( "melee_swipe_start" );

    if ( scripts\cp_mp\utility\inventory_utility::_id_8A6D( var_1 ) )
        scripts\cp_mp\utility\inventory_utility::_id_0DE3( var_1 );
    else
    {
        scripts\cp_mp\utility\inventory_utility::_takeweapon( var_1 );
        thread scripts\cp_mp\utility\inventory_utility::_id_4D21( self._id_8FAB );
    }
}

_id_10AC6( var_0, var_1, var_2, var_3 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( "death" );
    self endon( "cancel_all_killstreak_deployments" );

    for (;;)
    {
        var_4 = undefined;
        var_5 = undefined;

        switch ( var_1 )
        {
            case "weapon_fired":
                self waittill( var_1, var_4 );
                break;
            case "offhand_fired":
                self waittill( var_1, var_4 );
                break;
            case "grenade_fire":
                self waittill( var_1, var_5, var_4 );
                break;
            default:
                self waittill( var_1 );
                break;
        }

        if ( var_4 == var_2 )
        {
            if ( isdefined( var_3 ) )
            {
                var_6 = [[ var_3 ]]( var_0, var_4, var_5 );

                if ( !isdefined( var_6 ) )
                    return 0;
                else if ( var_6 == "failure" )
                    return 0;
                else if ( var_6 == "continue" )
                    continue;
                else if ( var_6 == "success" )
                    return 1;
                else
                    return 0;
            }

            return 1;
        }
    }

    return 0;
}

_id_10AC4( var_0, var_1, var_2 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );

    if ( !isdefined( var_2 ) )
        var_2 = 1;

    scripts\cp_mp\utility\player_utility::_id_D8C9( var_0._id_EA0F );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "objectiveUnPinPlayer" ) && isdefined( self._id_B0D2 ) )
    {
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "objectiveUnPinPlayer" ) ]]( self._id_B0D2, self );
        self._id_C35E = 1;
    }

    scripts\cp_mp\utility\player_utility::_id_0BC4( 1 );
    thread _id_F942();

    if ( istrue( var_2 ) )
        thread _id_E73B( var_1 - 0.3 );

    thread _id_10C2F( var_0 );
    thread _id_10C2E();
    var_3 = scripts\engine\utility::_id_108A7( var_1, "death", "weapon_change", "cancel_all_killstreak_deployments" );
    self notify( "ks_freeze_end" );
    scripts\cp_mp\utility\player_utility::_id_0BC4( 0 );

    if ( !isdefined( var_3 ) || var_3 != "timeout" || !self isonground() || self isonladder() )
    {
        var_0 notify( "killstreak_finished_with_deploy_weapon" );
        self notify( "cancel_remote_sequence" );
        return 0;
    }

    self notify( "deploy_weapon_anim_successful" );
    return 1;
}

_id_F942()
{
    self endon( "disconnect" );
    self endon( "ks_freeze_end" );
    level waittill( "round_switch" );
    scripts\cp_mp\utility\player_utility::_id_0BC4( 0 );
}

_id_E73B( var_0 )
{
    self endon( "disconnect" );
    var_1 = scripts\engine\utility::_id_108A5( var_0, "cancel_remote_sequence" );

    if ( !isdefined( var_1 ) || var_1 == "cancel_remote_sequence" )
        return;

    if ( scripts\cp_mp\utility\player_utility::_id_0C14() )
    {
        level thread scripts\cp_mp\utility\game_utility::_id_58A7( self, 1, 0.3 );
        var_1 = scripts\engine\utility::_id_108A5( 0.7, "death" );
        level thread scripts\cp_mp\utility\game_utility::_id_58A7( self, 0, 0.3 );
    }
}

_id_10C2F( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    var_0 waittill( "killstreak_finished_with_deploy_weapon" );
    scripts\cp_mp\utility\killstreak_utility::_id_E93E( 0.325 );
    scripts\cp_mp\utility\player_utility::_id_396C();
}

_id_10C2E()
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( "deploy_weapon_anim_successful" );
    self endon( "cancel_remote_sequence" );

    for (;;)
    {
        if ( !self isonground() )
        {
            _id_E9FD();
            break;
        }

        waitframe();
    }
}

_id_1097C( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( "death" );
    scripts\engine\utility::_id_10886( var_0, "killstreak_finished_with_deploy_weapon", self, "cancel_all_killstreak_deployments", self, "weapon_change" );
}

_id_3859( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( "death" );

    if ( isdefined( var_3 ) )
        self [[ var_3 ]]( var_1 );

    if ( self hasweapon( var_2 ) )
    {
        var_6 = scripts\cp_mp\utility\killstreak_utility::_id_89E0( var_2.basename );
        var_7 = scripts\cp_mp\utility\killstreak_utility::_id_8904( var_1._id_EA0F );
        scripts\common\utility::_id_152C( 0 );
        scripts\common\utility::allow_equipment( 0 );

        if ( var_6 )
        {
            scripts\common\utility::_id_152B( 0 );
            scripts\common\utility::_id_1531( 0 );
            scripts\cp_mp\utility\player_utility::_id_0BC5( 1 );
        }
        else if ( istrue( var_7 ) )
            scripts\common\utility::_id_152B( 0 );

        if ( isdefined( var_4 ) )
            self [[ var_4 ]]( var_1, var_0, var_2 );
        else
            getrankforxp( var_2 );

        scripts\common\utility::_id_152C( 1 );
        scripts\common\utility::allow_equipment( 1 );

        if ( var_6 )
        {
            scripts\common\utility::_id_152B( 1 );
            scripts\common\utility::_id_1531( 1 );
            scripts\cp_mp\utility\player_utility::_id_0BC5( 0 );
        }
        else if ( istrue( var_7 ) )
            scripts\common\utility::_id_152B( 1 );
    }

    if ( isdefined( var_5 ) )
        self [[ var_5 ]]( var_1 );
}

getrankforxp( var_0 )
{
    scripts\cp_mp\utility\inventory_utility::_id_6CD8( var_0 );
    var_1 = self getcurrentweapon();

    if ( var_1.basename == "none" )
        scripts\cp_mp\utility\inventory_utility::_id_5EB7();
}

_id_3147( var_0, var_1 )
{
    if ( self hasweapon( var_1 ) )
        return "KILLSTREAKS/CANNOT_BE_USED";

    if ( self isonladder() )
        return "KILLSTREAKS/CANNOT_BE_USED";

    if ( self _meth_81CD() )
        return "KILLSTREAKS/CANNOT_BE_USED";

    if ( !scripts\common\utility::_id_870A() )
        return "KILLSTREAKS/CANNOT_BE_USED";

    if ( istrue( self._id_161E ) )
        return "KILLSTREAKS/CANNOT_BE_USED";

    if ( ( scripts\cp_mp\utility\killstreak_utility::_id_89EE( var_0._id_EA0F ) || scripts\cp_mp\utility\killstreak_utility::_id_8904( var_0._id_EA0F ) ) && !self isonground() )
        return "KILLSTREAKS/CANNOT_BE_USED";

    if ( scripts\cp_mp\utility\player_utility::_id_8AB5() )
        return "KILLSTREAKS/CANNOT_BE_USED";

    return;
}

_id_EA03( var_0 )
{
    self endon( "death" );
    self endon( "disconnect" );
    self _meth_8529( var_0 );

    if ( !self hasweapon( var_0 ) )
    {
        self notify( "giveAndFireOffhandReliableFailed", var_0 );
        return 0;
    }

    var_1 = spawnstruct();
    var_1 childthread _id_EA06( self, var_0 );
    var_1 childthread _id_EA05( self, var_0 );
    var_1 waittill( "race_start" );
    waittillframeend;
    var_1 notify( "race_end" );

    if ( istrue( var_1._id_EAC8 ) )
    {
        self notify( "giveAndFireOffhandReliableSucceeded", var_0 );
        return 1;
    }
    else if ( istrue( var_1._id_58C3 ) )
    {
        self notify( "giveAndFireOffhandReliableFailed", var_0 );
        return 0;
    }
}

_id_EA06( var_0, var_1 )
{
    self endon( "race_end" );
    var_0 waittillmatch( "offhand_fired", var_1 );
    self._id_EAC8 = 1;
    self notify( "race_start" );
}

_id_EA05( var_0, var_1 )
{
    self endon( "race_end" );

    while ( var_0 hasweapon( var_1 ) )
        waitframe();

    self._id_58C3 = 1;
    self notify( "race_start" );
}
