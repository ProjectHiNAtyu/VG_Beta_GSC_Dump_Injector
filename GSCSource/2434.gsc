// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "airstrike", "init" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "airstrike", "init" ) ]]();

    level._effect["airstrike_tracer"] = loadfx( "vfx/iw8_mp/killstreak/vfx_a10_tracer_sep.vfx" );
    level._effect["airstrike_death"] = loadfx( "vfx/s4/killstreaks/vfx_airstrike_death_exp_medium.vfx" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "airstrike", "airstrike_params" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "airstrike", "airstrike_params" ) ]]();

    _id_7EA0();
    _id_7EA2();
}

#using_animtree("script_model");

_id_7EA0()
{
    level._id_CC27["precision_airstrike"] = #animtree;
    level._id_CC24["precision_airstrike"]["airstrike_flyby"] = %s4_mp_killstreak_strafingrun;
    level._id_CC25["precision_airstrike"]["airstrike_flyby"] = "s4_mp_killstreak_strafingrun";
    level._id_CC27["multi_airstrike"] = #animtree;
    level._id_CC24["multi_airstrike"]["airstrike_flyby"] = %mp_alfa10_flyin;
    level._id_CC25["multi_airstrike"]["airstrike_flyby"] = "mp_alfa10_flyin";
    level._id_CC27["fuel_airstrike"] = #animtree;
    level._id_CC24["fuel_airstrike"]["airstrike_flyby"] = %mp_alfa10_flyin;
    level._id_CC25["fuel_airstrike"]["airstrike_flyby"] = "mp_alfa10_flyin";
    level._id_CC27["toma_strike"] = #animtree;
    level._id_CC24["toma_strike"]["airstrike_flyby"] = %mp_alfa10_flyin;
    level._id_CC25["toma_strike"]["airstrike_flyby"] = "mp_alfa10_flyin";
}

_id_7EA2()
{
    game["dialog"]["airspace_crowded"] = "mp_glob_kill_bchr_tafu";
    game["dialog"]["airstrike_good_hit"] = "mp_glob_kill_bchr_tghc";
    game["dialog"]["airstrike_bad_hit"] = "mp_glob_kill_bchr_tgmc";
}

_id_10D87( var_0 )
{
    var_1 = getdvarint( "scr_airstrike_type", 2 );

    if ( istrue( level._id_13B5 ) )
    {
        scripts\mp\hud_message::_id_DCBD( "KILLSTREAKS/AIR_SPACE_TOO_CROWDED" );
        _id_0A64::_id_9120( "airspace_crowded" );
        return 0;
    }

    if ( var_0._id_EA0F == "multi_airstrike" )
    {
        var_2 = 1;

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "airstrike", "startMapSelectSequence" ) )
            self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "airstrike", "startMapSelectSequence" ) ]]( 0, 1, var_2 );
    }
    else if ( var_0._id_EA0F == "fuel_airstrike" )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "airstrike", "startMapSelectSequence" ) )
            self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "airstrike", "startMapSelectSequence" ) ]]();
    }

    return 1;
}

_id_10DDD( var_0, var_1 )
{
    var_2 = getdvarint( "scr_airstrike_type", 2 );

    if ( istrue( var_1 ) )
    {
        thread _id_13B4( var_0 );

        if ( var_0._id_EA0F == "precision_airstrike" || var_0._id_EA0F == "toma_strike" )
        {
            if ( var_2 == 1 )
                self _meth_8202();
            else if ( var_2 == 2 )
                thread _id_13AE( var_0, level._id_13BB[var_0._id_EA0F]._id_10CCD );
        }
    }
}

_id_13B4( var_0 )
{
    self endon( "disconnect" );
    self notifyonplayercommand( "cancel_deploy", "+actionslot 3" );
    self notifyonplayercommand( "cancel_deploy", "+actionslot 4" );
    self notifyonplayercommand( "cancel_deploy", "+actionslot 5" );
    self notifyonplayercommand( "cancel_deploy", "+actionslot 6" );
    var_1 = scripts\engine\utility::_id_10895( "cancel_deploy", "weapon_switch_started" );

    if ( !isdefined( var_1 ) )
        return;

    var_0 notify( "killstreak_finished_with_deploy_weapon" );
}

_id_10D7E( var_0, var_1, var_2 )
{
    if ( !isdefined( var_0._id_EEEF ) )
    {
        var_3 = _id_139B( self );

        if ( !isdefined( var_3 ) )
        {
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "hud", "showErrorMessage" ) )
                self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "hud", "showErrorMessage" ) ]]( "KILLSTREAKS/INVALID_POINT" );

            return "continue";
        }
    }

    if ( _id_0764::_id_8599() )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "hud", "showErrorMessage" ) )
            self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "hud", "showErrorMessage" ) ]]( "KILLSTREAKS/CANNOT_BE_USED" );

        return "continue";
    }

    var_4 = undefined;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "sound", "playKillstreakDeployDialog" ) )
    {
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "sound", "playKillstreakDeployDialog" ) ]]( self, var_0._id_EA0F );
        var_4 = 2.0;
    }

    thread scripts\cp_mp\utility\killstreak_utility::_id_B85C( "use_" + var_0._id_EA0F, 1, var_4 );
    return "success";
}

_id_F766( var_0 )
{
    var_1 = scripts\cp_mp\utility\killstreak_utility::_id_4034( var_0, self );
    return _id_F767( var_1 );
}

_id_F767( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );

    if ( isdefined( level._id_8DD2 ) )
    {
        if ( !level [[ level._id_8DD2 ]]( var_0 ) )
            return 0;
    }

    var_1 = undefined;
    var_2 = level._id_13BB[var_0._id_EA0F]._id_47CD;

    switch ( var_0._id_EA0F )
    {
        case "precision_airstrike":
        case "toma_strike":
            if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "getGameType" ) )
            {
                var_3 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "getGameType" ) ]]();

                if ( var_3 == "br" && isdefined( self._id_8E3A ) )
                {
                    var_0._id_EEEF = self._id_8E3A;
                    self._id_8E3A = undefined;
                }
            }

            if ( isdefined( var_0._id_EEEF ) )
            {
                var_4 = _id_10D7E( var_0, undefined, undefined );
                var_1 = var_4 == "success";
            }
            else
                var_1 = _id_0990::_id_EA00( var_0, var_2, "weapon_fired", ::_id_10D87, ::_id_10DDD, ::_id_10D7E );

            break;
        case "fuel_airstrike":
        case "multi_airstrike":
            var_1 = _id_0990::_id_EA01( var_0, var_2, 1, ::_id_10D87, ::_id_10DDD );
            break;
    }

    if ( !istrue( var_1 ) )
        return 0;

    if ( isdefined( level._id_8DAD ) )
    {
        if ( !level [[ level._id_8DAD ]]( var_0 ) )
            return 0;
    }

    var_5 = _id_D043( var_0 );

    if ( !istrue( var_5 ) )
        return 0;

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "airstrike", "munitionUsed" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "airstrike", "munitionUsed" ) ]]();

    return 1;
}

_id_D043( var_0 )
{
    var_1 = ( 0, 0, 0 );
    var_2 = undefined;
    var_3 = undefined;
    var_4 = undefined;
    var_5 = spawn( "script_origin", self.origin );
    var_6 = "used_" + var_0._id_EA0F;

    if ( var_0._id_EA0F == "precision_airstrike" || var_0._id_EA0F == "toma_strike" )
    {
        if ( isdefined( var_0._id_EEEF ) )
            var_1 = var_0._id_EEEF;
        else
            var_1 = _id_139B( self, 1 );
    }
    else if ( var_0._id_EA0F == "multi_airstrike" )
    {
        var_7 = 3;
        var_4 = 1;
        scripts\common\utility::_id_156B( 0 );
        self _meth_867D( "mp_killstreak_overlay" );
        var_2 = undefined;

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "airstrike", "getSelectMapPoint" ) )
            var_2 = self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "airstrike", "getSelectMapPoint" ) ]]( var_0, var_7, 1 );

        scripts\common\utility::_id_156B( 1 );
    }
    else if ( var_0._id_EA0F == "fuel_airstrike" )
    {
        var_7 = 1;
        scripts\common\utility::_id_156B( 0 );
        self _meth_867D( "mp_killstreak_overlay" );
        var_2 = undefined;

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "airstrike", "getSelectMapPoint" ) )
            var_2 = self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "airstrike", "getSelectMapPoint" ) ]]( var_0, var_7 );

        scripts\common\utility::_id_156B( 1 );
    }

    if ( isdefined( var_2 ) )
    {
        if ( istrue( level._id_13B5 ) )
        {
            scripts\mp\hud_message::_id_DCBD( "KILLSTREAKS/AIR_SPACE_TOO_CROWDED" );
            _id_0A64::_id_9120( "airspace_crowded" );
            return 0;
        }

        thread _id_5AFA( var_2, var_4, var_1, var_3, var_0 );
        self _meth_867E( "mp_killstreak_overlay" );
    }
    else if ( !isdefined( var_2 ) && ( var_0._id_EA0F == "multi_airstrike" || var_0._id_EA0F == "fuel_airstrike" ) )
    {
        if ( isdefined( var_5 ) )
        {
            var_5 stoploopsound( "" );
            var_5 delete();
        }

        self _meth_867E( "mp_killstreak_overlay" );
        return 0;
    }
    else if ( var_0._id_EA0F == "precision_airstrike" || var_0._id_EA0F == "toma_strike" )
        thread _id_5AFE( var_1, var_3, var_0 );

    if ( isdefined( var_5 ) )
    {
        var_5 stoploopsound( "" );
        var_5 delete();
    }

    var_0 notify( "killstreak_finished_with_deploy_weapon" );
    self notify( "successful_fire" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "hud", "teamPlayerCardSplash" ) )
        thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "hud", "teamPlayerCardSplash" ) ]]( var_6, self );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "killstreak", "logKillstreakEvent" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "logKillstreakEvent" ) ]]( var_0._id_EA0F, var_1 );

    if ( level.gametype == "br" )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "killstreak", "dangerNotifyPlayersInRange" ) )
            self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "dangerNotifyPlayersInRange" ) ]]( var_1, 800, var_0._id_EA0F );
    }

    return 1;
}

_id_5AFA( var_0, var_1, var_2, var_3, var_4 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    var_5 = level._id_CC24[var_4._id_EA0F]["airstrike_flyby"];
    var_6 = 14;
    var_7 = scripts\engine\utility::_id_65D2( var_5, "attack" );
    thread _id_13B0( var_7, var_7 * 2, var_4 );

    foreach ( var_11, var_9 in var_0 )
    {
        var_2 = var_9._id_96B8;
        var_10 = self.angles[1];

        if ( istrue( var_1 ) )
            var_10 = var_9.angles;

        _id_5AF1( var_2, var_10, var_3, var_4, var_5 );

        if ( var_0.size > 1 && var_11 < var_0.size - 1 )
            wait( randomfloatrange( 0.8, 1.0 ) );
    }

    thread _id_13AF( var_4 );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_6 );

    if ( isdefined( level._id_8DBA ) )
        level thread [[ level._id_8DBA ]]( var_4 );

    _id_0A04::_id_F2D7( self, undefined );
    self notify( "airstrike_finished" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "player", "printGameAction" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "player", "printGameAction" ) ]]( "killstreak ended - " + var_4._id_EA0F, self );

    scripts\cp_mp\utility\killstreak_utility::_id_C13C( var_4 );
    self._id_13B6 = undefined;
}

_id_5AFE( var_0, var_1, var_2 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    var_3 = 14;
    var_4 = 6.5;
    thread _id_13B0( var_4, var_4 * 2, var_2 );
    _id_5AF1( var_0, undefined, var_1, var_2 );
    thread _id_13AF( var_2 );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_3 );

    if ( isdefined( level._id_8DBA ) )
        level thread [[ level._id_8DBA ]]( var_2 );

    _id_0A04::_id_F2D7( self, undefined );
    self notify( "airstrike_finished" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "player", "printGameAction" ) )
        self [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "player", "printGameAction" ) ]]( "killstreak ended - " + var_2._id_EA0F, self );

    scripts\cp_mp\utility\killstreak_utility::_id_C13C( var_2 );
    self._id_13B6 = undefined;
}

_id_5AF1( var_0, var_1, var_2, var_3 )
{
    self notify( "used" );
    self notify( "airstrike_used" );
    level thread _id_4C17( var_0, var_1, self, self.pers["team"], var_2, var_3 );
}

_id_4C17( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    _id_0A04::_id_F2D7( var_2, 1 );
    thread _id_10A87();
    _id_2FB0( var_2, var_0, var_1, var_4, var_5 );
}

_id_10A87()
{
    self endon( "airstrike_finished" );
    level endon( "game_ended" );
    self notify( "watching_airstike_owner" );
    self endon( "watching_airstike_owner" );
    scripts\engine\utility::waittill_any_2( "disconnect", "joined_team" );

    if ( istrue( level._id_13B5 ) )
        _id_0A04::_id_F2D7( self, undefined );
}

_id_2FB0( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = 0;
    var_6 = scripts\cp_mp\utility\killstreak_utility::_id_6ABC();
    var_7 = 24000;
    var_8 = 6500;
    var_9 = level._id_13BB[var_4._id_EA0F]._id_B17A;
    var_5 = 1500;
    var_10 = scripts\cp_mp\utility\game_utility::_id_6AF9();

    if ( isdefined( var_10 ) && var_10 == "locale_6" )
        var_9 = var_9 + 500;

    if ( level.mapname == "mp_br_mechanics" || level.mapname == "mp_donetsk" )
        var_9 = var_9 + 2500;

    var_5 = _id_6A02( var_9 );
    var_12 = undefined;
    var_13 = undefined;

    if ( isdefined( var_2 ) )
        var_12 = ( 0, var_2, 0 );
    else
    {
        var_12 = _id_2FB2( var_0, var_1, var_9 );
        var_13 = 1;
    }

    var_14 = _id_6A2F( var_1, var_12, var_7, var_6, var_9, var_8, var_5, var_4._id_EA0F, var_13 );

    if ( var_4._id_EA0F == "precision_airstrike" || var_4._id_EA0F == "toma_strike" )
    {
        var_15 = scripts\engine\utility::ter_op( var_4._id_EA0F == "precision_airstrike", 1, 3 );

        for ( var_16 = 0; var_16 < var_15; var_16++ )
        {
            var_9 = var_9 + randomintrange( 200, 300 );
            level thread _id_4E45( var_1, var_14["startPoint"], var_14["endPoint"], var_9, var_3, var_4, var_0 );
            wait 5.5;
        }
    }
    else
        level thread _id_4E45( var_1, var_14["startPoint"], var_14["endPoint"], var_9, var_3, var_4, var_0 );
}

_id_2FB2( var_0, var_1, var_2 )
{
    var_3 = anglestoforward( var_0 getplayerangles() );
    var_4 = scripts\engine\trace::_id_3ED4( 1 );
    var_5 = scripts\engine\trace::ray_trace( var_1 - var_3 * 30, var_1 + var_3 * 1000, undefined, var_4 );
    var_1 = var_5["position"] + var_5["normal"] * 20;
    var_6 = var_1;
    var_7 = var_2 * 3;
    var_8 = anglestoforward( var_0.angles );
    var_9 = anglestoright( var_0.angles );
    var_10 = 0;
    var_11 = [ var_6 + var_8 * 100, var_6 - var_8 * 100, var_6 + var_9 * 100, var_6 - var_9 * 100, var_6 + ( var_8 + var_9 ) * 100, var_6 + ( var_8 - var_9 ) * 100, var_6 + ( var_9 - var_8 ) * 100, var_6 + ( -1 * var_8 - var_9 ) * 100 ];
    var_12 = vectornormalize( var_11[0] - var_6 );
    var_13 = 0;

    foreach ( var_15 in var_11 )
    {
        var_16 = vectornormalize( var_15 - var_6 );
        var_17 = var_6 + ( 0, 0, var_7 ) - var_16 * 25000;
        var_18 = [ var_6, var_6 - var_16 * 512, var_6 - var_16 * 256, var_6 + var_16 * 256, var_6 + var_16 * 512 ];
        var_19 = 0;

        foreach ( var_21 in var_18 )
        {
            var_22 = scripts\engine\trace::ray_trace_passed( var_17, var_21, undefined, var_4 );

            if ( !istrue( var_22 ) )
            {
                wait 0.05;
                break;
            }

            var_19++;
            wait 0.05;
        }

        if ( var_19 > var_13 )
        {
            var_12 = var_16;
            var_13 = var_19;

            if ( var_19 >= 3 )
                break;
        }
    }

    return var_12;
}

_id_4E45( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    var_7 = level._id_13BB[var_5._id_EA0F];
    var_8 = 14;
    var_9 = 6.5;
    var_10 = var_0 + ( 0, 0, var_3 );
    var_11 = vectortoangles( var_2 - var_1 );
    var_10 = var_10 - anglestoforward( var_11 ) * 11000 / 2.0;
    var_12 = var_7._id_9FBD;

    if ( scripts\cp_mp\utility\player_utility::_id_6C48( var_6 ) && isdefined( var_7._id_9FBE ) )
        var_12 = var_7._id_9FBE;

    var_13 = spawn( "script_model", var_10 );
    var_13 setmodel( var_12 );
    var_13.angles = var_11;
    var_13._id_5CD2 = anglestoforward( var_11 );
    var_13._id_5CD3 = var_3;
    var_13.owner = var_6;
    var_13.team = var_6.team;
    var_13._id_9355 = var_5._id_9355;
    var_13.streakinfo = var_5;
    var_13 setotherent( var_6 );
    var_13 _meth_856C();
    var_13 _meth_85AD();
    var_13 _meth_856B();
    level notify( "airstrike_plane_spawned", var_13.angles );

    if ( var_5._id_EA0F == "precision_airstrike" )
    {
        var_13._id_F81C = spawn( "script_model", var_13 gettagorigin( "tag_turret" ) );
        var_13._id_F81C setmodel( "plane_wm_dalpha_turret_front" );
        var_13._id_F81C.angles = var_13.angles;
        var_13._id_F81C linkto( var_13, "tag_turret" );
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "killstreak", "addToActiveKillstreakList" ) )
        var_13 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "addToActiveKillstreakList" ) ]]( var_5._id_EA0F, "Killstreak_Air", var_6, 0, 1, 100 );

    var_14 = "icon_minimap_airstrike";

    if ( var_5._id_EA0F == "fuel_airstrike" )
        var_14 = "icon_minimap_fuelairstrike";

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "createObjective" ) )
        var_13._id_9F0F = var_13 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "createObjective" ) ]]( var_14, var_13.team, undefined, 1, 1 );

    var_15 = var_9 - 0.75;
    var_16 = var_9;
    var_17 = 8.596;

    if ( var_5._id_EA0F == "fuel_airstrike" )
        var_15 = var_9 + 1;

    if ( var_5._id_EA0F == "toma_strike" )
        var_15 = var_9 + 0.4;

    var_13._id_8725 = 1;
    var_13 thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "airstrike", "monitorDamage" ) ]]( 100, "hitequip", ::_id_7465, ::_id_7464, 1 );
    level thread _id_13A6( var_13, var_15, var_5 );
    level thread _id_13A4( var_13, var_1, anglestoforward( var_11 ), var_16, var_17, var_8, var_5 );
    var_13._id_2D0F = spawn( "script_model", var_13.origin );
    var_13._id_2D0F setmodel( "ks_airstrike_target_mp" );
    var_13._id_2D0F setentityowner( var_6 );
    var_13._id_2D0F._id_10D06 = "artillery_mp";
    var_13._id_2D0F.streakinfo = var_5;
    var_13._id_2D0F.angles = var_13.angles;
    var_13._id_2D0F dontinterpolate();
    var_13._id_1887 = var_5._id_EA0F;
    var_13 _id_069D::_id_D46E();
    var_13._id_CBC3 = spawn( "script_model", var_10 );
    var_13._id_CBC3.angles = var_13.angles;
    var_13._id_CBC3 setmodel( "tag_origin" );

    if ( var_5._id_EA0F == "precision_airstrike" || var_5._id_EA0F == "multi_airstrike" )
    {
        level thread _id_2FB6( var_13, var_15, var_8, var_0, var_6 );
        thread _id_0823::_id_13A1( var_13, var_10, var_13._id_5CD2, 11000, 14, var_5._id_EA0F );
    }
    else if ( var_5._id_EA0F == "fuel_airstrike" )
        level thread _id_2FB3( var_13, var_15, var_8, var_0, var_6 );
    else if ( var_5._id_EA0F == "toma_strike" )
    {
        level thread _id_2FB1( var_13, var_15, var_8, var_0, var_6, var_5 );
        thread _id_0823::_id_13A1( var_13, var_10, var_13._id_5CD2, 11000, 14, var_5._id_EA0F );
    }

    var_19 = var_10 + var_13._id_5CD2 * 11000;
    var_13._id_CBC3 _id_069D::_id_181D( var_13, "airstrike_flyby" );

    if ( isdefined( var_13._id_9F0F ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "returnObjectiveID" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "returnObjectiveID" ) ]]( var_13._id_9F0F );
    }

    var_13 notify( "delete" );

    if ( isdefined( var_13._id_F896 ) )
        var_13._id_F896 delete();

    if ( isdefined( var_13._id_2D0F ) )
    {
        var_13._id_2D0F delete();

        if ( isdefined( var_13._id_2D0F.killcament ) )
            var_13._id_2D0F.killcament delete();
    }

    if ( isdefined( var_13._id_CBC3 ) )
        var_13._id_CBC3 delete();

    if ( isdefined( var_13 ) )
        var_13 delete();
}

_id_7464( var_0 )
{
    return var_0.damage;
}

_id_7465( var_0 )
{
    var_1 = var_0.attacker;
    _id_483F();
}

_id_483F()
{
    var_0 = anglestoforward( self.angles );
    playfx( level._effect["airstrike_death"], self.origin, var_0 );
    self notify( "aud_plane_destruct_sequence" );
    thread _id_4765( 0 );
}

_id_4765( var_0 )
{
    self notify( "death" );
    self._id_87E1 = 1;
    wait( var_0 );
    self delete();
}

_id_13A6( var_0, var_1, var_2 )
{
    var_0 endon( "death" );
    level endon( "game_ended" );

    if ( var_2._id_EA0F == "fuel_airstrike" )
        return;

    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_1 );
    var_0 setscriptablepartstate( "fire", "on", 0 );
    var_0 waittill( "fire_finished" );
    var_0 setscriptablepartstate( "fire", "off", 0 );
}

_id_13A4( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    var_0 endon( "death" );
    level endon( "game_ended" );
    var_0 thread _id_1398( 0.05 );
    var_7 = spawn( "script_model", var_1 + var_2 * 2000 );
    var_7 setmodel( "ks_airstrike_mp" );
    var_7 dontinterpolate();
    var_7 thread _id_13A2();
    var_7 thread _id_13A3();
    var_7 thread _id_13A5( var_4 );
    var_7 thread _id_139C( var_5 );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_3 );
    var_7 thread _id_139F( var_0 );
    var_0 setscriptablepartstate( "flyby", "on", 0 );
}

_id_13A2()
{
    self endon( "death" );
    level endon( "game_ended" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 0.05 );
    self setscriptablepartstate( "approach", "on", 0 );
}

_id_13A3()
{
    self endon( "death" );
    level endon( "game_ended" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 6.397 );
    self setscriptablepartstate( "flyby", "on", 0 );
}

_id_13A5( var_0 )
{
    self endon( "death" );
    level endon( "game_ended" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_0 );
    self setscriptablepartstate( "flyout", "on", 0 );
}

_id_139C( var_0 )
{
    self endon( "death" );
    level endon( "game_ended" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_0 );
    self notify( "stop_update_fx_movement" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 10 );
    self delete();
}

_id_139F( var_0 )
{
    self endon( "death" );
    self endon( "stop_update_fx_movement" );
    level endon( "game_ended" );

    while ( isdefined( var_0 ) )
    {
        self.origin = var_0.origin;
        wait 0.05;
    }
}

_id_13B0( var_0, var_1, var_2 )
{
    self endon( "disconnect" );
    childthread _id_13B2( var_1, var_2 );
    childthread _id_13B1( var_2 );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_0 );
    self waittill( "finished_wait_killstreak_kills_" + var_2._id_EA0F );

    if ( isdefined( self._id_13B6 ) )
    {
        if ( self._id_13B6 >= 1 )
            _id_0A64::_id_9120( "airstrike_good_hit" );
        else
            _id_0A64::_id_9120( "airstrike_bad_hit" );
    }
}

_id_13B2( var_0, var_1 )
{
    self endon( "finished_wait_killstreak_kills_" + var_1._id_EA0F );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_0 );
    self notify( "finished_wait_killstreak_kills_" + var_1._id_EA0F );
}

_id_13B1( var_0 )
{
    self endon( "finished_wait_killstreak_kills_" + var_0._id_EA0F );
    self._id_13B6 = 0;

    for (;;)
    {
        self waittill( "update_rapid_kill_buffered", var_1, var_2 );

        if ( isdefined( var_2 ) && var_2 == "artillery_mp" )
            self._id_13B6++;
    }
}

_id_F0DE( var_0 )
{
    var_0 endon( "death" );

    for (;;)
        wait 0.05;
}

_id_2FB1( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_0 endon( "death" );
    var_6 = var_0._id_5CD2;
    var_7 = var_3 + ( 0, 0, var_0._id_5CD3 + 750 );
    var_8 = var_7 - var_6 * 15000;
    var_9 = var_7 - var_6 * 500;
    var_10 = var_7;
    var_11 = spawn( "script_model", var_8 );
    var_11 thread _id_139D( var_1 - 3, var_9, var_10 );
    var_0._id_2D0F.killcament = var_11;
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_1 );

    if ( !isdefined( var_4 ) )
        return;

    var_12 = undefined;

    for ( var_13 = 0; var_13 < 8; var_13++ )
    {
        var_14 = var_0.origin - ( 0, 0, 15 );
        var_15 = spawnstruct();
        var_16 = ( 0, 0, 0 );

        if ( var_13 % 2 == 0 )
            var_16 = anglestoright( var_0.angles ) * 50;
        else
            var_16 = anglestoleft( var_0.angles ) * 50;

        var_15._id_E06C = var_14 + var_16;
        var_15._id_01E7 = var_3 + var_6 * 5 + var_16;

        if ( !isdefined( var_12 ) )
            var_12 = vectornormalize( var_15._id_01E7 - var_15._id_E06C ) * 1000;

        var_15._id_829B = var_12;
        var_4 thread _id_0993::_id_F310( var_15, var_5, var_0 );
        wait 0.05;
    }
}

_id_2FB6( var_0, var_1, var_2, var_3, var_4 )
{
    var_0 endon( "death" );
    var_5 = var_0._id_5CD2;
    var_6 = var_3 + ( 0, 0, var_0._id_5CD3 + 750 );
    var_7 = var_6 - var_5 * 15000;
    var_8 = var_6 - var_5 * 500;
    var_9 = var_6;
    var_10 = spawn( "script_model", var_7 );
    var_10 thread _id_139D( var_1 - 3, var_8, var_9 );
    var_0._id_2D0F.killcament = var_10;
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_1 );

    if ( !isdefined( var_4 ) )
        return;

    var_11 = 5;
    var_12 = ( 0, 0, 0 );
    var_13 = var_12;
    var_0._id_2D0F setscriptablepartstate( "bullet_impact", "on", 0 );
    var_14 = 0;
    var_15 = 0;
    var_16 = [ var_3 - var_5 * 896, var_3 - var_5 * 768, var_3 - var_5 * 640, var_3 - var_5 * 512, var_3 - var_5 * 384, var_3 - var_5 * 256, var_3 - var_5 * 128, var_3, var_3 + var_5 * 128, var_3 + var_5 * 256, var_3 + var_5 * 512, var_3 + var_5 * 640 ];
    var_11 = var_16.size;

    foreach ( var_18 in var_16 )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "airstrike", "addSpawnDangerZone" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "airstrike", "addSpawnDangerZone" ) ]]( var_18, 512, 512, var_4.team, 5, var_4, 1 );
    }

    thread _id_0823::_id_E9F6( var_0, var_11 );
    var_24 = var_3[2] + var_0._id_5CD3 * 3;

    for ( var_25 = 0; var_25 < var_11; var_25++ )
    {
        if ( !isdefined( var_4 ) )
            break;

        var_26 = -50;
        var_27 = 150;

        while ( var_14 < var_15 + 2 )
        {
            var_28 = rotatevector( var_5, ( 0, 90, 0 ) );
            var_28 = var_28 * 50;
            var_29 = var_16[var_25] + scripts\engine\utility::ter_op( var_14 % 2 == 0, var_28, -1 * var_28 );
            var_30 = scripts\engine\utility::ter_op( var_14 % 2 == 0, "TAG_MUZZLE_FX_1", "TAG_MUZZLE_FX_2" );
            var_31 = var_0._id_F81C gettagorigin( var_30 ) * ( 1, 1, 0 ) + ( 0, 0, var_24 ) + var_5 * 1000;
            var_33 = vectornormalize( var_29 - var_31 );
            var_34 = var_29 + var_33 * 30000;
            var_35 = scripts\engine\trace::ray_trace( var_31, var_34, undefined, scripts\engine\trace::_id_3EC3( 0, 1, 0, 1, 0, 1, 0 ) );
            var_36 = var_35["position"];
            var_37 = var_35["normal"];
            var_38 = var_36 + var_37 * 10;
            var_39 = vectornormalize( var_36 - var_0._id_F81C gettagorigin( var_30 ) );
            var_40 = _func_0256( var_39, ( 0, 0, 1 ) );
            var_41 = _func_0256( var_40, var_39 );
            var_0 thread _id_2FB5( scripts\engine\utility::getfx( "airstrike_tracer" ), var_38, var_39, var_41 );
            var_0._id_2D0F thread _id_A20F( var_14 + 1, var_38 );
            var_13 = var_36;
            var_14++;
            var_0._id_2D0F.streakinfo._id_DA5E++;
            var_26 = var_26 + 20;
            var_27 = var_27 + 40;
            var_24 = var_24 - 200;

            if ( var_24 < var_0._id_5CD3 )
                var_24 = var_0._id_5CD3;

            wait 0.05;
        }

        var_15 = var_14;
    }

    var_0 notify( "fire_finished" );
    var_0._id_2D0F setscriptablepartstate( "bullet_impact", "off", 0 );
}

_id_2FB4( var_0, var_1, var_2, var_3 )
{
    var_3 = var_3 * ( 0, 1, 0 );
    var_4 = anglestoforward( var_3 );
    var_5 = anglestoright( var_3 );
    var_6 = randomintrange( var_0, var_1 );
    var_7 = randomint( 80 ) - 40;
    var_8 = var_4 * cos( var_7 ) * var_6;
    return var_2 + var_8 + var_5 * sin( var_7 ) * var_6;
}

_id_2FB5( var_0, var_1, var_2, var_3 )
{
    self endon( "death" );
    var_4 = 0;
    var_5 = 1;

    while ( var_4 < var_5 )
    {
        playfx( var_0, var_1, var_2, var_3 );
        var_4++;
        wait 0.05;
    }
}

_id_A20F( var_0, var_1 )
{
    self endon( "death" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 0.18 );
    self.origin = var_1;
    self setscriptablepartstate( "explode" + var_0, "active", 0 );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 5 );
    self setscriptablepartstate( "explode" + var_0, "neutral", 0 );
}

_id_2FB3( var_0, var_1, var_2, var_3, var_4 )
{
    var_0 endon( "death" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_1 );

    if ( !isdefined( var_4 ) )
        return;

    var_5 = var_0._id_5CD2;
    var_6 = [ var_3 - var_5 * 1200, var_3 - var_5 * 600, var_3, var_3 + var_5 * 600, var_3 + var_5 * 1200 ];

    foreach ( var_8 in var_6 )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "airstrike", "addSpawnDangerZone" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "airstrike", "addSpawnDangerZone" ) ]]( var_8, 650, 650, var_4.team, var_2, var_4, 1 );
    }

    foreach ( var_8 in var_6 )
    {
        var_12 = var_8 + ( 0, 0, 2500 );
        var_13 = var_8 - ( 0, 0, 10000 );
        var_14 = scripts\engine\trace::ray_trace( var_12, var_13, undefined, scripts\engine\trace::_id_3EC3( 0, 1, 0, 1, 0, 1, 0 ) );
        var_15 = var_14["position"];
        var_16 = var_14["normal"];
        var_17 = var_15 + var_16 * 10;
        var_18 = spawn( "script_model", var_17 + ( 0, 0, 400 ) );
        var_18 setmodel( "ks_fuelstrike_mp" );
        var_18 setscriptablepartstate( "release", "on", 0 );
        var_19 = spawn( "script_model", var_17 );
        var_19 setmodel( "ks_fuelstrike_mp" );
        var_19 setscriptablepartstate( "ignite", "on", 0 );
        var_19 setentityowner( var_4 );
        level thread _id_468A( var_18, var_19 );
        wait 0.25;
    }
}

_id_468A( var_0, var_1 )
{
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 10 );

    if ( isdefined( var_0 ) )
        var_0 delete();

    if ( isdefined( var_1 ) )
        var_1 delete();
}

_id_6A2F( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 )
{
    var_9 = undefined;

    if ( istrue( var_8 ) )
        var_9 = var_1;
    else
        var_9 = anglestoforward( var_1 );

    var_10 = var_0 + var_9 * ( -1 * var_2 );

    if ( isdefined( var_3 ) )
        var_10 = var_10 * ( 1, 1, 0 );

    var_10 = var_10 + ( 0, 0, var_4 );
    var_11 = var_0 + var_9 * var_2;

    if ( isdefined( var_3 ) )
        var_11 = var_11 * ( 1, 1, 0 );

    var_11 = var_11 + ( 0, 0, var_4 );
    var_12 = length( var_10 - var_11 );
    var_13 = var_12 / var_5;
    var_12 = abs( var_12 / 2 + var_6 );
    var_14 = var_12 / var_5;
    var_15["startPoint"] = var_10;
    var_15["endPoint"] = var_11;
    var_15["bombTime"] = var_14;
    var_15["flyTime"] = var_13;
    var_15["directionAngles"] = var_9;
    return var_15;
}

_id_6A02( var_0 )
{
    var_1 = 850;
    var_2 = 1500;
    var_3 = var_1 / var_0;
    var_4 = var_3 * var_2;
    return var_4;
}

_id_139B( var_0, var_1 )
{
    var_2 = [ "physicscontents_clipshot", "physicscontents_missileclip", "physicscontents_vehicleclip" ];
    var_3 = physics_createcontents( var_2 );
    var_4 = var_0 getvieworigin();
    var_5 = var_4 + anglestoforward( var_0 getplayerangles() ) * 50000;
    var_6 = var_0 scripts\cp_mp\utility\killstreak_utility::_id_B6EF();
    var_7 = scripts\engine\trace::ray_trace( var_4, var_5, var_6, var_3 );
    var_8 = var_7["position"];

    if ( var_7["hittype"] == "hittype_none" )
        var_8 = undefined;

    return var_8;
}

_id_13AE( var_0, var_1 )
{
    self endon( "death_or_disconnect" );
    self endon( "deploy_cancelled" );
    self endon( "deploy_fired" );
    var_2 = spawn( "script_model", self.origin );
    var_2 setmodel( "ks_airstrike_marker_mp" );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "requestObjectiveID" ) )
        var_2._id_A8F5 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "requestObjectiveID" ) ]]( 99 );

    var_2 setotherent( self );
    var_2 dontinterpolate();
    var_2 hide();
    var_3 = "icon_waypoint_airstrike";

    if ( isdefined( var_1 ) )
        var_3 = var_1;

    var_2 _id_13A8( var_2._id_A8F5, var_3, self, 50 );
    var_2 thread _id_13B3( self );
    var_2 thread _id_13AC( self );
    var_2 thread _id_13AD( self );
    var_2._id_FCB7 = 0;
    scripts\common\utility::_id_1516( 0 );

    for (;;)
    {
        if ( _id_0764::_id_8599() && istrue( var_2._id_FCB7 ) )
        {
            scripts\common\utility::_id_1516( 0 );
            var_2 hide();
            var_2 setscriptablepartstate( "marker_scope", "off", 0 );
            self notify( "stop_update_marker" );
            var_2._id_FCB7 = 0;
        }

        var_4 = self playerads();

        if ( var_4 == 1 && !istrue( var_2._id_FCB7 ) )
        {
            if ( !_id_0764::_id_8599() )
            {
                scripts\common\utility::_id_1516( 1 );
                var_2 show();
                var_2 setscriptablepartstate( "marker_scope", "on", 0 );
                var_2 thread _id_13AB( self );
                var_2._id_FCB7 = 1;
            }
        }
        else if ( var_4 < 1 && istrue( var_2._id_FCB7 ) )
        {
            scripts\common\utility::_id_1516( 0 );
            var_2 hide();
            var_2 setscriptablepartstate( "marker_scope", "off", 0 );
            self notify( "stop_update_marker" );
            var_2._id_FCB7 = 0;
        }

        waitframe();
    }
}

_id_13A8( var_0, var_1, var_2, var_3 )
{
    _func_015B( var_0, var_1 );
    _func_0187( var_0 );
    _func_0180( var_0, var_2 );
    _func_015C( var_0, self );
    _func_015D( var_0, var_3 );
    _func_016D( var_0, 0 );
    _func_016E( var_0, 0 );
    _func_0175( var_0, 1 );

    if ( level.teambased )
        _func_017D( var_0, var_2.team );
    else
        _func_017C( var_0, var_2 );

    _func_0166( var_0, "done" );
}

_id_13AB( var_0 )
{
    self endon( "death" );
    var_0 endon( "deploy_cancelled" );
    var_0 endon( "deploy_fired" );
    var_0 endon( "stop_update_marker" );
    var_0 endon( "death_or_disconnect" );
    var_1 = 0;
    var_0 setclientomnvar( "ui_spotter_scope_danger", 0 );

    for (;;)
    {
        var_2 = _id_139B( var_0 );
        var_3 = -1;
        var_4 = -1;
        var_5 = -1;

        if ( isdefined( var_2 ) )
        {
            self.origin = var_2;
            var_3 = int( self.origin[0] );
            var_4 = int( self.origin[1] );
            var_5 = int( self.origin[2] );
        }

        var_0 setclientomnvar( "ui_ac130_coord3_posx", var_3 );
        var_0 setclientomnvar( "ui_ac130_coord3_posy", var_4 );
        var_0 setclientomnvar( "ui_ac130_coord3_posz", var_5 );

        if ( isdefined( var_2 ) )
        {
            if ( !istrue( var_1 ) && distance2dsquared( var_0.origin, var_2 ) <= 1638400 )
            {
                var_0 setclientomnvar( "ui_spotter_scope_danger", 1 );
                var_1 = 1;
            }
            else if ( istrue( var_1 ) && distance2dsquared( var_0.origin, var_2 ) > 1638400 )
            {
                var_0 setclientomnvar( "ui_spotter_scope_danger", 0 );
                var_1 = 0;
            }
        }

        waitframe();
    }
}

_id_13B3( var_0 )
{
    self endon( "death" );
    level endon( "game_ended" );
    var_0 waittill( "death_or_disconnect" );
    _id_13A7();
}

_id_13AC( var_0 )
{
    var_0 endon( "death_or_disconnect" );
    self endon( "death" );
    level endon( "game_ended" );
    var_1 = var_0 scripts\engine\utility::_id_10895( "cancel_fire", "successful_fire" );

    if ( isdefined( var_1 ) && var_1 == "successful_fire" )
    {
        var_0 notify( "deploy_fired" );
        self setscriptablepartstate( "marker_scope", "off", 0 );
        var_2 = anglestoforward( var_0 getplayerangles() );
        var_3 = self.origin - var_2 * 500;
        var_4 = self.origin + var_2 * 20;
        var_5 = scripts\engine\trace::ray_trace( var_3, var_4, var_0 );
        var_6 = var_5["normal"];
        level waittill( "airstrike_plane_spawned", var_7 );
        self.angles = var_7;
        self.angles = _func_0311( var_6, self.angles );
        self setscriptablepartstate( "marker_placed", "on", 0 );
        _func_0166( self._id_A8F5, "current" );
        thread _id_13A7( 7 );
    }
    else
    {
        var_0 notify( "deploy_cancelled" );

        if ( !var_0 [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "player", "isPlayerADS" ) ]]() )
            var_0 scripts\common\utility::_id_1516( 1 );

        _id_13A7();
    }
}

_id_13AD( var_0 )
{
    var_0 endon( "death_or_disconnect" );
    self endon( "death" );
    level endon( "game_ended" );
    var_1 = var_0 getcurrentweapon();

    for (;;)
    {
        if ( var_0 getcurrentweapon() != var_1 )
            break;

        waitframe();
    }

    var_0 notify( "cancel_fire" );
}

_id_13A7( var_0 )
{
    if ( isdefined( var_0 ) )
    {
        self endon( "death" );
        level endon( "game_ended" );
        scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_0 );
    }

    if ( isdefined( self._id_A8F5 ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "game", "returnObjectiveID" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "game", "returnObjectiveID" ) ]]( self._id_A8F5 );
    }

    self delete();
}

_id_1398( var_0 )
{
    self endon( "death" );
    level endon( "game_ended" );
    wait( var_0 );
    self setscriptablepartstate( "bodyfx", "on", 0 );
}

_id_139D( var_0, var_1, var_2 )
{
    self endon( "death" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_0 );
    self moveto( var_1, 4 );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 3.95 );
    self moveto( var_2, 5 );
}

_id_13AF( var_0 )
{
    self endon( "airstrike_finished" );
    self endon( "disconnect" );
    level waittill( "game_ended" );
    scripts\cp_mp\utility\killstreak_utility::_id_C13C( var_0 );
}
