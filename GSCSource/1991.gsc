// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_021D()
{
    var_0 = _id_9BBC();

    if ( !_id_9BCF( var_0 ) )
        return;
    else
        level._id_9BCD = var_0;

    level._id_9BB5 = 0;
    level._id_9BB6 = [];
    level._id_9BC3 = ::_id_9BC3;
    level._id_9BC4 = ::_id_9BC4;
    level._id_9BC5 = ::_id_9BC5;
    level._id_9BB7 = ::_id_9BB7;
    level._id_9BBA = ::_id_9BBA;
    level._id_9BCE = ::_id_9BCE;

    if ( level._id_9BCD == 1 )
        _id_9BBD();
    else if ( level._id_9BCD == 3 )
        _id_9BC9( 1 );

    level thread _id_9BC2();
    level thread _id_9BC7();
    level thread _id_9BC6();
    level thread _id_9BD2( "matchrecording_ground_vehicle", "GROUND_VEHICLE" );
    level thread _id_9BD2( "matchrecording_small_ground_vehicle", "SMALL_GROUND_VEHICLE" );
    level thread _id_9BD2( "matchrecording_plane", "PLANE_VEHICLE" );
    level thread _id_9BD2( "matchrecording_chopper", "CHOPPER_VEHICLE" );
}

_id_9BBC()
{
    if ( _id_0A69::_id_98BC() && _id_0A69::_id_6A43() != "arm" )
        return 0;

    var_0 = getdvarint( "scr_match_recording", 0 );

    if ( var_0 == 0 && getdvarint( "#x383865159d17464e7", 0 ) == 1 )
        var_0 = 1;
    else if ( _func_038C() )
        var_0 = 1;

    return var_0;
}

_id_9BCF( var_0 )
{
    var_1 = 1;

    if ( var_0 == 0 )
        var_1 = 0;
    else if ( var_0 < 0 || var_0 > 4 )
        var_1 = 0;
    else if ( var_0 == 3 || var_0 == 4 )
    {
        var_2 = 0;

        if ( !var_2 )
            var_1 = 0;
    }
    else if ( var_0 == 1 || var_0 == 2 )
    {
        var_3 = getdvarint( "#x383865159d17464e7", 0 );
        var_4 = _func_038C();
        var_1 = var_3 == 1 || var_4 == 1;
    }

    return var_1;
}

_id_9BC1()
{
    return isdefined( level._id_9BCD ) && level._id_9BCD > 0;
}

_id_9BCC( var_0 )
{
    if ( isdefined( level._id_EF62 ) && !level._id_EF62 )
        var_1 = 2;
    else if ( !isdefined( var_0 ) || var_0 == "allies" )
        var_1 = 2;
    else
        var_1 = 3;

    return var_1;
}

_id_9BB8( var_0 )
{
    var_1 = undefined;

    switch ( var_0 )
    {
        case "PATH":
            var_1 = "p";
            break;
        case "SPAWN":
            var_1 = "s";
            break;
        case "DEATH":
            var_1 = "d";
            break;
        case "BULLET":
            var_1 = "b";
            break;
        case "EXPLOSION":
            var_1 = "e";
            break;
        case "ANCHOR":
            var_1 = "t";
            break;
        case "FRONT_LINE":
            var_1 = "l";
            break;
        case "FRONT_LINE_ALLIES":
            var_1 = "[";
            break;
        case "FRONT_LINE_AXIS":
            var_1 = "]";
            break;
        case "FLAG_A":
            var_1 = "A";
            break;
        case "FLAG_B":
            var_1 = "B";
            break;
        case "FLAG_C":
            var_1 = "C";
            break;
        case "FLAG_D":
            var_1 = "D";
            break;
        case "FLAG_E":
            var_1 = "E";
            break;
        case "FLAG_0":
            var_1 = "0";
            break;
        case "FLAG_1":
            var_1 = "1";
            break;
        case "FLAG_2":
            var_1 = "2";
            break;
        case "FLAG_3":
            var_1 = "3";
            break;
        case "FLAG_4":
            var_1 = "4";
            break;
        case "SPAWN_ENTITY":
            var_1 = "S";
            break;
        case "PORTAL":
            var_1 = "O";
            break;
        case "LOG_BAD_SPAWN":
            var_1 = "!";
            break;
        case "LOG_GENERIC_MESSAGE":
            var_1 = "m";
            break;
        case "LOG_USER_EVENT":
            var_1 = "u";
            break;
        case "LOG_STAT":
            var_1 = "?";
            break;
        case "PLAYER_NAME":
            var_1 = "n";
            break;
        case "BEST_SPAWN_ALLIES":
            var_1 = "+";
            break;
        case "BEST_SPAWN_AXIS":
            var_1 = "^";
            break;
        case "GROUND_VEHICLE":
            var_1 = "G";
            break;
        case "SMALL_GROUND_VEHICLE":
            var_1 = "g";
            break;
        case "PLANE_VEHICLE":
            var_1 = "V";
            break;
        case "CHOPPER_VEHICLE":
            var_1 = "H";
            break;
        default:
            break;
    }

    return var_1;
}

_id_9BBB()
{
    var_0 = [];
    var_0[var_0.size] = "<mrec_start> \n";
    var_0[var_0.size] = "<mrec_map> " + level._id_036A + "\n";
    var_0[var_0.size] = "<mrec_game_type> " + _id_0A69::_id_6A43() + "\n";
    var_0[var_0.size] = "<mrec_event_def> PATH p\n";
    var_0[var_0.size] = "<mrec_event_def> PATH_SPAWN s\n";
    var_0[var_0.size] = "<mrec_event_def> PATH_DEATH d\n";
    var_0[var_0.size] = "<mrec_event_def> PATH_BULLET b\n";
    var_0[var_0.size] = "<mrec_event_def> PATH_EXPLOSION e\n";
    var_0[var_0.size] = "<mrec_event_def> ANCHOR t\n";
    var_0[var_0.size] = "<mrec_event_def> GENERIC_LINE l 255,0,0,0\n";
    var_0[var_0.size] = "<mrec_event_def> GENERIC_LINE [ 255,255,127,0\n";
    var_0[var_0.size] = "<mrec_event_def> GENERIC_LINE ] 255,0,255,255\n";
    var_0[var_0.size] = "<mrec_event_def> GENERIC_IMAGE A flagA.tga flagAallies.tga flagAaxis.tga\n";
    var_0[var_0.size] = "<mrec_event_def> GENERIC_IMAGE B flagB.tga flagBallies.tga flagBaxis.tga\n";
    var_0[var_0.size] = "<mrec_event_def> GENERIC_IMAGE C flagC.tga flagCallies.tga flagCaxis.tga\n";
    var_0[var_0.size] = "<mrec_event_def> SPAWN_ENTITY S\n";
    var_0[var_0.size] = "<mrec_event_def> GENERIC_IMAGE O flagAallies.tga flagAaxis.tga\n";
    var_0[var_0.size] = "<mrec_event_def> LOG_MESSAGE ! \"No good spawns found. Using bad spawn.\" \n";
    var_0[var_0.size] = "<mrec_event_def> LOG_MESSAGE m \"MSG: \" \n";
    var_0[var_0.size] = "<mrec_event_def> LOG_MESSAGE u \"User Event From \" \n";
    var_0[var_0.size] = "<mrec_event_def> LOG_MESSAGE ? \"STAT: \" \n";
    var_0[var_0.size] = "<mrec_event_def> PLAYER_NAME n\n";
    var_0[var_0.size] = "<mrec_event_def> GENERIC_IMAGE + bestSpawnAllies.tga\n";
    var_0[var_0.size] = "<mrec_event_def> GENERIC_IMAGE ^ bestSpawnAxis.tga\n";
    var_0[var_0.size] = "<mrec_event_def> GENERIC_IMAGE G blank.tga groundVehicleAllies.tga groundVehicleAxis.tga\n";
    var_0[var_0.size] = "<mrec_event_def> GENERIC_IMAGE g blank.tga smallGroundVehicleAllies.tga smallGroundVehicleAxis.tga\n";
    var_0[var_0.size] = "<mrec_event_def> GENERIC_IMAGE H blank.tga chopperAllies.tga chopperAxis.tga\n";
    var_0[var_0.size] = "<mrec_event_def> GENERIC_IMAGE V blank.tga planeAllies.tga planeAxis.tga\n";
    return var_0;
}

_id_9BC3( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 )
{
    if ( !_id_9BC1() )
        return;

    _id_9BBF();
    var_9 = _id_9BCC( var_1 );
    var_10 = int( var_3 ) + "," + int( var_4 );
    var_11 = _id_9BB8( var_2 );

    if ( var_2 == "BULLET" || var_2 == "FRONT_LINE" || var_2 == "FRONT_LINE_ALLIES" || var_2 == "FRONT_LINE_AXIS" )
    {

    }

    var_12 = "";

    if ( isdefined( var_6 ) )
        var_12 = " s:" + var_6;

    var_13 = "";

    if ( isdefined( var_7 ) && isdefined( var_8 ) )
        var_13 = " " + int( var_7 ) + "," + int( var_8 );

    var_14 = "|" + var_0 + " " + var_9 + " " + var_11 + " " + var_10 + " " + var_5 + var_13 + var_12;
    level._id_9BB6[level._id_9BB6.size - 1] = level._id_9BB6[level._id_9BB6.size - 1] + var_14;
}

_id_9BC4( var_0, var_1, var_2 )
{
    if ( !_id_9BC1() )
        return;

    _id_9BBF();
    var_3 = _id_9BB8( var_0 );

    if ( var_2 != "" )
    {
        if ( !isdefined( var_2 ) )
            var_2 = "";
        else
            var_2 = " \"" + var_2 + "\"";
    }

    var_4 = "|0 0 " + var_3 + " " + var_1 + var_2;
    level._id_9BB6[level._id_9BB6.size - 1] = level._id_9BB6[level._id_9BB6.size - 1] + var_4;
}

_id_9BC5( var_0, var_1, var_2 )
{
    if ( !_id_9BC1() )
        return;

    _id_9BBF();
    var_3 = _id_9BCC( var_1 );
    var_4 = _id_9BB8( "PLAYER_NAME" );
    var_5 = "|" + var_0 + " " + var_3 + " " + var_4 + " " + "\"" + var_2 + "\"";
    level._id_9BB6[level._id_9BB6.size - 1] = level._id_9BB6[level._id_9BB6.size - 1] + var_5;
}

_id_9BBF()
{
    level._id_9BB5++;

    if ( level._id_9BB6.size == 0 )
    {
        level._id_9BB6[level._id_9BB6.size] = "<mrec_events> ";
        level._id_9BB5 = 0;
    }
    else if ( level._id_9BB5 > 30 || level._id_9BB6[level._id_9BB6.size - 1].size > 800 )
    {
        if ( level._id_9BCD == 1 || level._id_9BCD == 3 )
            _id_9BB7();

        level._id_9BB6[level._id_9BB6.size] = "<mrec_events> ";
        level._id_9BB5 = 0;
    }
}

_id_9BB7()
{
    if ( !_id_9BC1() )
        return;

    if ( !isdefined( level._id_9BB6 ) || level._id_9BB6.size == 0 )
        return;

    switch ( level._id_9BCD )
    {
        case 2:
        case 1:
            _id_9BBE();
            break;
        case 4:
        case 3:
            _id_9BC8();
            break;
        default:
            break;
    }
}

_id_9BBE()
{
    if ( level._id_9BCD == 2 )
        _id_9BBD();

    foreach ( var_1 in level._id_9BB6 )
    {
        _func_013E( var_1 + "\n" );

        if ( _func_038C() )
            _func_038A( var_1 + "\n" );
    }

    level._id_9BB6 = [];
}

_id_9BBD()
{
    var_0 = _id_9BBB();

    foreach ( var_2 in var_0 )
    {
        _func_013E( var_2 );

        if ( _func_038C() )
            _func_038A( var_2 );
    }
}

matchmakingmatch()
{

}

matchmakinggame()
{

}

_id_9BC9( var_0 )
{

}

_id_9BC8()
{

}

_id_9BC2()
{
    if ( !_id_9BC1() )
        return;

    level endon( "game_ended" );
    _id_07A8::_id_60A3( "prematch_done" );

    for (;;)
    {
        var_0 = gettime();
        var_1 = level._id_B758;

        foreach ( var_3 in var_1 )
        {
            var_4 = gettime();

            if ( isdefined( var_3 ) && _id_0A74::_id_89D3( var_3 ) )
            {
                _id_9BC3( var_3._id_3979, var_3._id_045B, "PATH", var_3._id_02EA[0], var_3._id_02EA[1], var_4 );
                waitframe();
            }
        }

        wait( _func_0147( level._id_5F1B, 1.5 - ( gettime() - var_0 ) / 1000 ) );
    }
}

_id_9BC7()
{
    for (;;)
    {
        level waittill( "connected", var_0 );
        var_0 thread _id_9BCE();
    }
}

_id_9BC6()
{
    level waittill( "game_ended" );
    var_0 = 0;
    var_1 = 0;
    var_2 = 0.0;
    var_3 = 0;
    var_4 = 0.0;

    foreach ( var_6 in level._id_B758 )
    {
        if ( isdefined( var_6._id_DD17 ) )
            var_0 = var_6._id_DD17;

        if ( isdefined( var_6._id_5435 ) )
            var_3 = var_6._id_5435;

        if ( isdefined( var_6._id_5437 ) )
            var_4 = var_6._id_5437;
    }

    if ( var_3 > 0 )
    {
        _id_9BC4( "LOG_STAT", gettime(), "Shot in the back percent: " + var_0 / var_3 * 100.0 + "%" );
        _id_9BC4( "LOG_STAT", gettime(), "Avg. Engagement Length: " + var_4 / var_3 / 1000.0 + "s" );
    }

    if ( isdefined( level._id_5FC0 ) && isdefined( level._id_5FC0._id_FDAA ) && isdefined( level._id_5FC0._id_4E9B ) )
    {
        var_8 = level._id_5FC0._id_FDAA + level._id_5FC0._id_4E9B;

        if ( var_8 > 0.0 )
            _id_9BC4( "LOG_STAT", gettime(), "Frontline Uptime: " + level._id_5FC0._id_FDAA / var_8 * 100.0 + "%" );
    }
}

_id_9BCE()
{
    self endon( "disconnect" );
    level endon( "game_ended" );

    if ( _func_0104( self ) )
        return;

    self _meth_824A( "log_user_event_start", "+actionslot 3" );
    self _meth_824A( "log_user_event_end", "-actionslot 3" );
    self _meth_824A( "log_user_event_generic_event", "+gostand" );

    for (;;)
    {
        self waittill( "log_user_event_start" );
        var_0 = _id_077B::_id_1089D( "log_user_event_end", "log_user_event_generic_event" );

        if ( var_0 == "log_user_event_generic_event" )
        {
            self iprintlnbold( "Event Logged" );
            _id_9BC4( "LOG_USER_EVENT", gettime(), self._id_02BA );
        }
    }
}

_id_9BBA()
{
    if ( !isdefined( game["matchRecording_nextID"] ) )
        game["matchRecording_nextID"] = 100;

    var_0 = game["matchRecording_nextID"];
    game["matchRecording_nextID"]++;
    return var_0;
}

_id_9BD2( var_0, var_1 )
{
    level endon( "game_ended" );

    for (;;)
    {
        level waittill( var_0, var_2 );
        var_2 _id_9BD1( var_1 );
    }
}

_id_9BD1( var_0 )
{
    level endon( "game_ended" );
    self endon( "death" );
    var_1 = _id_9BBA();

    if ( !isdefined( self._id_045B ) )
    {
        iprintln( "MatchRecording - Can't log vehicle, because it has no team" );
        return;
    }

    if ( !isdefined( self._id_02EA ) )
    {
        iprintln( "MatchRecording - Can't log vehicle, because it has no origin" );
        return;
    }

    thread _id_9BD0( var_1, var_0 );

    for (;;)
    {
        var_2 = _id_077B::_id_F07F( self._id_045B == "allies", 1, 2 );
        _id_9BC3( var_1, self._id_045B, var_0, self._id_02EA[0], self._id_02EA[1], gettime(), var_2 );
        wait 0.25;
    }
}

_id_9BD0( var_0, var_1 )
{
    level endon( "game_ended" );
    self waittill( "death" );
    _id_9BC3( var_0, "allies", var_1, 0, 0, gettime(), 0 );
}
