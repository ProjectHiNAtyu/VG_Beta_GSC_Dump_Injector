// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_C26E()
{
    anim._id_A63C["anim_movement = \"stop\""] = ::_id_A62B;
    anim._id_A63C["anim_movement = \"walk\""] = ::_id_A62C;
    anim._id_A63C["anim_movement = \"run\""] = ::_id_A62A;
    anim._id_A63C["anim_movement = stop"] = ::_id_A62B;
    anim._id_A63C["anim_movement = walk"] = ::_id_A62C;
    anim._id_A63C["anim_movement = run"] = ::_id_A62A;
    anim._id_A63C["anim_movement_gun_pose_override = run_gun_down"] = ::_id_A629;
    anim._id_A63C["anim_coverpose = cover_left"] = ::_id_A600;
    anim._id_A63C["anim_coverpose = cover_right"] = ::_id_A600;
    anim._id_A63C["anim_coverpose = cover_crouch"] = ::_id_A600;
    anim._id_A63C["anim_coverpose = cover_stand"] = ::_id_A600;
    anim._id_A63C["anim_coverpose = cover_left_crouch"] = ::_id_A600;
    anim._id_A63C["anim_coverpose = cover_right_crouch"] = ::_id_A600;
    anim._id_A63C["anim_coverpose = exposed"] = ::_id_A600;
    anim._id_A63C["anim_coverpose = exposed_crouch"] = ::_id_A600;
    anim._id_A63C["anim_coverpose = prone"] = ::_id_A600;
    anim._id_A63C["anim_aiming = 1"] = ::_id_A5FB;
    anim._id_A63C["anim_aiming = 0"] = ::_id_A5FC;
    anim._id_A63C["anim_alertness = causal"] = ::_id_A5FD;
    anim._id_A63C["anim_alertness = alert"] = ::_id_A5FC;
    anim._id_A63C["anim_alertness = aiming"] = ::_id_A5FB;
    anim._id_A63C["gravity on"] = ::_id_A617;
    anim._id_A63C["gravity off"] = ::_id_A617;
    anim._id_A63C["bodyfall large"] = ::_id_A5FE;
    anim._id_A63C["bodyfall small"] = ::_id_A5FE;
    anim._id_A63C["code_move"] = ::_id_A5FF;
    anim._id_A63C["face_enemy"] = ::_id_A604;
    anim._id_A63C["pistol_rechamber"] = ::_id_A62F;
    anim._id_A63C["load_shell"] = ::_id_A625;
    anim._id_A63C["fire"] = ::_id_A613;
    anim._id_A63C["fire_spray"] = ::_id_A614;
    anim._id_A63C["gun_2_chest"] = ::_id_A61B;
    anim._id_A63C["gun_2_back"] = ::_id_A61A;
    anim._id_A63C["gun_2_right"] = ::_id_A61C;
    anim._id_A63C["pistol_pickup"] = ::_id_A62D;
    anim._id_A63C["pistol_putaway"] = ::_id_A62E;
    anim._id_A63C["refill clip"] = ::_id_A63A;
    anim._id_A63C["reload done"] = ::_id_A63A;
    anim._id_A63C["ht_on"] = ::_id_A621;
    anim._id_A63C["ht_on_0"] = ::_id_A621;
    anim._id_A63C["ht_on_1"] = ::_id_A622;
    anim._id_A63C["ht_off"] = ::_id_A620;

    if ( isdefined( level._id_0C45 ) )
    {
        var_0 = getarraykeys( level._id_0C45 );

        foreach ( var_2 in var_0 )
            anim._id_A63C[var_2] = ::_id_4257;
    }
}

_id_A63F( var_0, var_1 )
{

}

_id_A600( var_0, var_1 )
{
    var_2 = strtok( var_0, " = " )[1];

    switch ( var_2 )
    {
        case "cover_left_crouch":
        case "cover_stand":
        case "cover_crouch":
        case "exposed_crouch":
        case "cover_right_crouch":
        case "cover_right":
        case "cover_left":
        case "exposed":
        case "prone":
            self._id_0DB6._id_3DC8 = var_2;
            break;
        default:
    }
}

_id_A62B( var_0, var_1 )
{
    self._id_0DB6._id_A222 = "stop";
}

_id_A62C( var_0, var_1 )
{
    self._id_0DB6._id_A222 = "walk";
}

_id_A62A( var_0, var_1 )
{
    self._id_0DB6._id_A222 = "run";
}

_id_A629( var_0, var_1 )
{
    self._id_1C08._id_A227 = "run_gun_down";
}

_id_A5FB( var_0, var_1 )
{

}

_id_A5FD( var_0, var_1 )
{

}

_id_A5FC( var_0, var_1 )
{

}

_id_A625( var_0, var_1 )
{

}

_id_A62F( var_0, var_1 )
{

}

_id_A617( var_0, var_1 )
{
    if ( issubstr( var_0, "on" ) )
        self _meth_8018( "gravity" );
    else if ( issubstr( var_0, "off" ) )
        self _meth_8018( "nogravity" );
}

_id_4257( var_0, var_1 )
{
    if ( isdefined( self._id_01F3 ) )
        var_2 = self._id_01F3;
    else
        var_2 = "dirt";

    var_3 = undefined;

    if ( isdefined( level._id_0C45[var_0][var_2] ) )
        var_3 = level._id_0C45[var_0][var_2];
    else if ( isdefined( level._id_0C45[var_0]["all"] ) )
        var_3 = level._id_0C45[var_0]["all"];

    if ( !isdefined( var_3 ) )
        return;

    if ( isai( self ) && isdefined( var_3._id_603C ) )
        playfxontag( var_3._id_603C, self, var_3._id_0400 );

    if ( !isdefined( var_3._id_E057 ) && !isdefined( var_3._id_E058 ) )
        return;

    var_4 = "" + var_3._id_E057 + var_2 + var_3._id_E058;

    if ( _func_0200( var_4 ) )
        self playsound( var_4 );
}

_id_A5FF( var_0, var_1 )
{
    return "code_move";
}

_id_A604( var_0, var_1 )
{
    self _meth_8250( "face enemy" );
}

_id_A5FE( var_0, var_1 )
{
    var_2 = "_small";

    if ( issubstr( var_0, "large" ) )
        var_2 = "_large";

    if ( isdefined( self._id_01F3 ) )
        var_3 = self._id_01F3;
    else
        var_3 = "dirt";

    if ( var_2 == "_large" )
        self playsoundtoteam( "bodyfall_torso", var_3 );
    else
        self playsoundtoteam( "bodyfall_limb_small", var_3 );
}

_id_4D42( var_0, var_1, var_2 )
{
    var_3 = undefined;

    for (;;)
    {
        self waittill( var_0, var_4 );

        if ( !isdefined( var_4 ) )
            var_4 = [ "undefined" ];

        if ( !_func_0106( var_4 ) )
            var_4 = [ var_4 ];

        _id_06B3::_id_FF4B( var_0, var_4 );

        foreach ( var_6 in var_4 )
        {
            var_7 = _id_745A( var_6, var_0, var_1 );

            if ( isdefined( var_7 ) )
                var_3 = var_7;
        }

        if ( isdefined( var_3 ) )
            return var_3;
    }
}

_id_745A( var_0, var_1, var_2, var_3 )
{
    if ( isdefined( self._id_5D3D ) )
        return [[ self._id_5D3D ]]( var_0, var_1, var_2, var_3 );
    else if ( isdefined( level._id_0B89 ) )
        return [[ level._id_0B89 ]]( var_0, var_1, var_2, var_3 );
    else
    {

    }
}

_id_7534( var_0 )
{
    var_1 = anim._id_A63C[var_0];

    if ( isdefined( var_1 ) )
        return 1;

    if ( isdefined( self._id_4258 ) )
        return 1;

    return 0;
}

_id_7412( var_0, var_1, var_2, var_3 )
{
    var_4 = anim._id_A63C[var_0];

    if ( isdefined( var_4 ) )
        return [[ var_4 ]]( var_0, var_1 );
    else if ( isdefined( self._id_4258 ) )
    {
        if ( isdefined( var_3 ) )
            return [[ self._id_4258 ]]( var_0, var_1, var_2, var_3 );
        else
            return [[ self._id_4258 ]]( var_0, var_1, var_2 );
    }
}

_id_7410( var_0, var_1, var_2, var_3 )
{
    switch ( var_0 )
    {
        case "finish":
        case "end":
        case "undefined":
            return var_0;
        case "finish early":
            if ( isdefined( self._id_017D ) )
                return var_0;

            break;
        case "swish small":
            var_4 = self gettagorigin( "TAG_WEAPON_RIGHT", 1 );

            if ( isdefined( var_4 ) )
                thread scripts\engine\utility::_id_B2C7( "melee_swing_small", var_4 );

            break;
        case "swish large":
            var_4 = self gettagorigin( "TAG_WEAPON_RIGHT", 1 );

            if ( isdefined( var_4 ) )
                thread scripts\engine\utility::_id_B2C7( "melee_swing_large", var_4 );

            break;
        case "no death":
            self._id_0DB6._id_A554 = 1;
            break;
        case "no pain":
            self._id_0042 = 0;
            break;
        case "allow pain":
            self._id_0042 = 1;
            break;
        case "anim_melee = right":
        case "anim_melee = \"right\"":
            self._id_0DB6._id_9D8E = "right";
            break;
        case "anim_melee = left":
        case "anim_melee = \"left\"":
            self._id_0DB6._id_9D8E = "left";
            break;
        case "swap taghelmet to tagleft":
            if ( isdefined( self._id_75AA ) )
            {
                if ( isdefined( self._id_77F4 ) )
                {
                    self detach( self._id_77F4, "TAG_HELMETSIDE" );
                    self._id_77F4 = undefined;
                }

                self detach( self._id_75AA, "" );
                self attach( self._id_75AA, "TAG_WEAPON_LEFT" );
                self._id_75AA = undefined;
            }

            break;
        case "break glass":
            level notify( "glass_break", self );
            break;
        case "break_glass":
            level notify( "glass_break", self );
            break;
        case "start_drift":
            if ( !self._id_01AD )
                self _meth_8018( "physics_drift" );

            break;
        default:
            return "__unhandled";
    }
}

_id_4D4C( var_0, var_1, var_2 )
{
    for (;;)
    {
        self waittill( var_0, var_3 );

        if ( !isdefined( var_3 ) )
            var_3 = [ "undefined" ];

        if ( !_func_0106( var_3 ) )
            var_3 = [ var_3 ];

        _id_06B3::_id_FF4B( var_0, var_3 );
        var_4 = [[ var_1 ]]( var_3 );

        if ( isdefined( var_4 ) && var_4 )
            continue;

        var_5 = undefined;

        foreach ( var_7 in var_3 )
        {
            var_8 = _id_745A( var_7, var_0 );

            if ( isdefined( var_8 ) )
            {
                var_5 = var_8;
                break;
            }
        }

        if ( isdefined( var_5 ) )
            return var_5;
    }
}

_id_4D4D( var_0, var_1 )
{
    for (;;)
    {
        self waittill( var_0, var_2 );

        if ( !isdefined( var_2 ) )
            var_2 = [ "undefined" ];

        if ( !_func_0106( var_2 ) )
            var_2 = [ var_2 ];

        _id_06B3::_id_FF4B( var_0, var_2 );
        var_3 = undefined;

        foreach ( var_5 in var_2 )
        {
            var_6 = _id_745A( var_5, var_0 );

            if ( isdefined( var_6 ) )
            {
                var_3 = var_6;
                break;
            }
        }

        [[ var_1 ]]( var_2 );

        if ( isdefined( var_3 ) )
            return var_3;
    }
}

_id_4D4A( var_0, var_1, var_2, var_3 )
{
    _id_4D42( var_0, var_2, var_3 );
}

_id_4D44( var_0, var_1, var_2, var_3 )
{
    _id_4D46( ::_id_4D42, var_0, var_1, var_2, var_3 );
}

_id_4D45( var_0, var_1, var_2, var_3 )
{
    _id_4D46( ::_id_4D4C, var_0, var_1, var_2, var_3 );
}

_id_4D46( var_0, var_1, var_2, var_3, var_4 )
{
    if ( isdefined( var_2 ) )
        self endon( var_2 );

    self endon( "killanimscript" );

    if ( !isdefined( var_4 ) )
        var_4 = "undefined";

    for (;;)
    {
        var_5 = gettime();
        var_6 = [[ var_0 ]]( var_1, var_3, var_4 );
        var_7 = gettime() - var_5;

        if ( var_7 < 0.05 )
        {
            var_5 = gettime();
            var_6 = [[ var_0 ]]( var_1, var_3, var_4 );
            var_7 = gettime() - var_5;

            if ( var_7 < 0.05 )
                wait( 0.05 - var_7 );
        }
    }
}

_id_4D4E( var_0, var_1, var_2, var_3 )
{
    var_4 = spawnstruct();
    var_4 thread _id_4D48( var_1 );
    _id_4D4B( ::_id_4D4A, var_0, var_2, var_3, var_4 );
}

_id_4D47( var_0, var_1, var_2, var_3 )
{
    var_4 = spawnstruct();
    var_4 thread _id_4D48( var_0 );
    _id_4D4B( ::_id_4D44, var_1, var_2, var_3, var_4 );
}

_id_4D49( var_0, var_1, var_2, var_3 )
{
    var_4 = spawnstruct();
    var_4 thread _id_4D48( var_0 );
    _id_4D4B( ::_id_4D45, var_1, var_2, var_3, var_4 );
}

_id_4D4B( var_0, var_1, var_2, var_3, var_4 )
{
    var_4 endon( "stop_notetracks" );
    [[ var_0 ]]( var_1, undefined, var_2, var_3 );
}

_id_4D48( var_0 )
{
    wait( var_0 );
    self notify( "stop_notetracks" );
}

_id_A5F1( var_0 )
{
    return [[ level._id_5D8C ]]( var_0 );
}

_id_A5F2( var_0 )
{
    var_1 = _func_00D6( var_0, 0, 4 );

    if ( var_1 == "fsf_" )
    {
        var_2 = strtok( var_0, "_" );
        var_3 = float( var_2[1] );
        var_4 = float( var_2[2] );
        level.player _meth_8208( var_3, var_4 );
        return 1;
    }

    return 0;
}

_id_DA27()
{
    waittillframeend;

    if ( isdefined( self ) && gettime() > self._id_0DB6._id_902A )
    {
        if ( istrue( self._id_0B3E._id_03A7 ) )
            var_0 = self._id_0B3E._id_03A3 == 1;
        else
            var_0 = 1;

        scripts\anim\utility_common::_id_DA1D( var_0 );
        _id_08C8::_id_4534();

        if ( weaponclass( self._id_04CE ) == "rocketlauncher" )
            self._id_0355--;
    }
}

_id_A613( var_0, var_1 )
{
    if ( isdefined( self._id_036A ) && isdefined( anim._id_5B26[self._id_036A] ) )
        thread [[ anim._id_5B26[self._id_036A] ]]();
    else
        thread _id_DA27();
}

_id_A614( var_0, var_1 )
{
    if ( !isalive( self ) && self _meth_81B9() )
    {
        if ( isdefined( self._id_33B4 ) )
            return;

        self._id_33B4 = 1;
        var_2["axis"] = "team3";
        var_2["team3"] = "axis";
        self.team = var_2[self.team];
    }

    if ( !_func_011C( self ) )
    {
        self notify( "fire" );
        return;
    }

    if ( _func_0371( self._id_0DB6._id_10DBF["right"] ) )
        return;

    var_3 = self _meth_815C();
    var_4 = anglestoforward( self _meth_815B() );
    var_5 = 10;

    if ( isdefined( self._id_89C0 ) )
        var_5 = 20;

    var_6 = 0;

    if ( isalive( self._id_017D ) && _func_011C( self._id_017D ) && self _meth_8068() )
    {
        var_7 = vectornormalize( self._id_017D geteye() - var_3 );

        if ( vectordot( var_4, var_7 ) > cos( var_5 ) )
            var_6 = 1;
    }

    if ( var_6 )
        scripts\anim\utility_common::_id_DA1D();
    else
    {
        var_4 = var_4 + ( ( randomfloat( 2 ) - 1 ) * 0.1, ( randomfloat( 2 ) - 1 ) * 0.1, ( randomfloat( 2 ) - 1 ) * 0.1 );
        var_8 = var_3 + var_4 * 1000;
        self [[ anim._id_DA2F ]]( var_8 );
    }

    _id_08C8::_id_4534();
}

_id_A63A( var_0, var_1 )
{
    scripts\anim\weaponlist::_id_C186();
    self._id_0DB6._id_A3FE = 0;
}

_id_6C66()
{
    if ( isdefined( self._id_109C5 ) && self._id_109C5 )
    {
        if ( scripts\anim\utility_common::_id_8A14( self._id_0326 ) )
            return self._id_0326;
        else if ( scripts\anim\utility_common::_id_8A14( self._id_038F ) )
            return self._id_038F;
    }

    return self._id_0326;
}

_id_A61B( var_0, var_1 )
{
    if ( isdefined( self._id_5D8F ) )
        self [[ self._id_5D8F ]]( self._id_04CE, "chest" );
}

_id_A61A( var_0, var_1 )
{
    if ( isdefined( self._id_5D8F ) )
        self [[ self._id_5D8F ]]( self._id_04CE, "back" );

    self._id_04CE = _id_6C66();
    self._id_00C4 = weaponclipsize( self._id_04CE );
}

_id_A62D( var_0, var_1 )
{
    if ( isdefined( self._id_5D8F ) )
        self [[ self._id_5D8F ]]( self._id_03AF, "right" );

    self._id_00C4 = weaponclipsize( self._id_04CE );
    self notify( "weapon_switch_done" );
}

_id_A62E( var_0, var_1 )
{
    if ( isdefined( self._id_5D8F ) )
    {
        if ( isdefined( self._id_E9CE ) )
            self [[ self._id_5D8F ]]( self._id_04CE, self._id_E9CE );
        else
            self [[ self._id_5D8F ]]( self._id_04CE, "none" );
    }

    self._id_04CE = _id_6C66();
    self._id_00C4 = weaponclipsize( self._id_04CE );
}

_id_A61C( var_0, var_1 )
{
    if ( isdefined( self._id_5D8F ) )
        self [[ self._id_5D8F ]]( self._id_04CE, "right" );

    self._id_00C4 = weaponclipsize( self._id_04CE );
}

_id_A621( var_0, var_1 )
{
    if ( !self _meth_81C6() )
        self _meth_870A( 1, 0 );
}

_id_A622( var_0, var_1 )
{
    if ( !self _meth_81C6() )
        self _meth_870A( 1, 1 );
}

_id_A620( var_0, var_1 )
{
    if ( !self _meth_81C6() )
        self _meth_870A( 0 );
}
