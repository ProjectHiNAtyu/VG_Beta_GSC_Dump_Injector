// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_B65B()
{
    return !isdefined( self._id_2BB2 );
}

_id_EDC4( var_0 )
{
    var_1 = level._id_2A6F._id_2A1C[var_0._id_CF15];
    self._id_2BB2 = var_1;
    _id_B6F0( var_1 );
    _id_B6AB();
    thread _id_B6BA( var_1 );
}

_id_B6F0( var_0 )
{
    self._id_2BB4 = scripts\mp\hud_util::createfontstring( "default", 0.75 );
    self._id_2BB4 scripts\mp\hud_util::setpoint( "CENTER", "BOTTOM LEFT", 270, -70 );
    self._id_2BB4._id_024D = &"MP_BR_ACTIVATE_KILLSTREAK";
    var_1 = game["killstreakTable"]._id_EC71[var_0]["hudIcon"];
    self._id_2BB3 = scripts\mp\hud_util::_id_3FD6( var_1, 30, 30 );
    self._id_2BB3 scripts\mp\hud_util::setpoint( "CENTER", "BOTTOM LEFT", 270, -45 );
}

_id_B6AB()
{
    self giveweapon( "super_default_mp" );
    self setweaponammoclip( "super_default_mp", 1 );
    self _meth_84E8( "super_default_mp" );
}

_id_B6BA( var_0 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );

    for (;;)
    {
        self waittill( "special_weapon_fired", var_1 );
        var_2 = _id_B7F1();

        if ( var_2 )
        {
            _id_B74F();
            return;
        }
        else
            self setweaponammoclip( "super_default_mp", 1 );
    }
}

_id_B7F1()
{
    if ( !isalive( self ) )
        return 0;

    var_0 = scripts\mp\killstreaks\killstreaks::_id_4035( self._id_2BB2 );
    var_1 = scripts\mp\killstreaks\killstreaks::_id_F627( var_0 );
    return istrue( var_1 );
}

_id_B74F()
{
    self takeweapon( "super_default_mp" );
    self._id_2BB2 = undefined;

    if ( isdefined( self._id_2BB4 ) )
        self._id_2BB4 destroy();

    if ( isdefined( self._id_2BB3 ) )
        self._id_2BB3 destroy();
}

_id_4323( var_0, var_1, var_2, var_3 )
{
    var_4 = scripts\common\utility::_id_B7A3( var_0, var_1 );

    if ( !isdefined( var_3 ) )
        var_3 = 1;

    foreach ( var_6 in var_4 )
    {
        if ( isdefined( var_6 ) && scripts\mp\utility\player::isreallyalive( var_6 ) && var_6.team != self.team )
            _id_4322( var_6, var_2, var_3 );
    }
}

_id_4322( var_0, var_1, var_2, var_3 )
{
    if ( istrue( var_2 ) && _id_0A6F::_id_6AC2( var_1 ) )
    {
        var_4 = scripts\mp\gametypes\br_public::_id_2B95( self );
        var_5 = var_4 + "_enemy_" + var_1 + "_inbound";
        var_0 _id_0A64::_id_9120( var_5, "killstreak_used" );
    }

    switch ( var_1 )
    {
        case "toma_strike":
            var_1 = 1;
            break;
        case "precision_airstrike":
            var_1 = 2;
            break;
        case "gulag_closed":
            var_1 = 3;
            break;
        default:
            var_1 = 0;
            break;
    }

    if ( var_1 > 0 )
    {
        var_0 setclientomnvar( "ui_br_danger_warning", var_1 );
        _id_4324( var_0, var_3 );
    }
}

_id_4324( var_0, var_1 )
{
    var_2 = var_0 getxuid();

    if ( !isdefined( var_1 ) )
        var_1 = 4;

    level notify( "danger_notify_start_" + var_2 );
    level thread _id_10ABF( var_0, var_2, "death_or_disconnect" );
    level thread _id_10ABF( var_0, var_2, undefined, var_1 );
}

_id_10ABF( var_0, var_1, var_2, var_3 )
{
    level endon( "danger_notify_start_" + var_1 );
    level endon( "danger_notify_finished_" + var_1 );
    level endon( "game_ended" );

    if ( isdefined( var_2 ) )
        var_0 waittill( var_2 );
    else if ( isdefined( var_3 ) )
        wait( var_3 );

    if ( isdefined( var_0 ) )
        var_0 setclientomnvar( "ui_br_danger_warning", 0 );

    level notify( "danger_notify_finished_" + var_1 );
}
