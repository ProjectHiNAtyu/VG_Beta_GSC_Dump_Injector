// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_2B8D()
{
    var_0 = getdvarint( "scr_br_events", 0 );

    if ( !var_0 )
        return;

    if ( var_0 & 1 )
        thread _id_2B85();

    if ( var_0 & 2 )
        thread _id_2B88();

    if ( var_0 & 4 )
        thread _id_2B89();

    if ( var_0 & 8 )
        thread _id_2B8A();
}

_id_2B8C( var_0 )
{
    var_1 = self _meth_876B( "ui_br_events" );
    self setclientomnvar( "ui_br_events", var_1 | var_0 );
}

_id_2B8B( var_0 )
{
    var_1 = self _meth_876B( "ui_br_events" );
    self setclientomnvar( "ui_br_events", var_1 & ~var_0 );
}

_id_2B85()
{
    if ( scripts\mp\gametypes\br_public::_id_873E() )
        return;

    var_0 = getdvarfloat( "scr_br_event1_chance", 0.04 );

    if ( var_0 <= randomfloat( 1.0 ) )
        return;

    _id_07A8::_id_60A3( "prematch_done" );
    var_1 = getdvarfloat( "scr_br_event1_start_time_min", 180 );
    var_2 = getdvarfloat( "scr_br_event1_start_time_max", 300 );
    var_3 = randomfloat( var_2 - var_1 ) + var_1;
    wait( var_3 );

    if ( scripts\mp\utility\game::_id_6D80() == "dmz" || !isdefined( level._id_29F5._id_370B ) || level._id_29F5._id_370B < 0 )
    {
        var_4 = level._id_2A4D._id_2A54;
        var_5 = level._id_2A4D._id_2A55[0] * getdvarfloat( "scr_br_event1_start_radius_scale", 0.5 );
    }
    else
    {
        var_4 = level._id_2A4D._id_29F9[level._id_29F5._id_370B];
        var_5 = level._id_2A4D._id_29FF[level._id_29F5._id_370B] * getdvarfloat( "scr_br_event1_start_radius_scale", 1.0 );
    }

    var_6 = getdvarint( "scr_br_event1_path_height", 18000 );
    var_4 = ( var_4[0], var_4[1], var_6 );
    var_7 = scripts\mp\gametypes\br_circle::_id_6CA8( var_4, var_5, 0.0, 1.0, 0, 0 );
    var_8 = ( 0, randomfloat( 360.0 ), 0 );
    var_9 = anglestoforward( var_8 );
    var_10 = getdvarfloat( "scr_br_event1_path_scale", 2.0 );
    var_11 = level._id_2A4D._id_2A55[0] * var_10;
    var_12 = var_7 - var_9 * var_11;
    var_13 = var_7 + var_9 * var_11;
    var_14 = spawn( "script_model", var_12 );
    var_14 setmodel( "x1_u2_plane" );
    var_14.angles = var_8;
    var_15 = distance( var_12, var_13 );
    var_16 = getdvarint( "scr_br_event1_speed", 8800 );
    var_17 = var_15 / var_16;
    var_18 = getdvarfloat( "scr_br_event1_player_event_time", 2.0 );
    var_19 = anglestoright( var_8 );

    foreach ( var_21 in level.players )
    {
        if ( !_id_2B87( var_21 ) )
            continue;

        var_22 = distance2d( var_14.origin, var_21.origin );
        var_3 = var_22 / var_16;
        var_21 thread _id_2B86( var_3, var_18 );
    }

    var_14 moveto( var_13, var_17 );
    wait( var_17 );
    var_14 delete();
}

_id_2B87( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    if ( istrue( var_0._id_2A3D ) || !isalive( var_0 ) || istrue( var_0._id_7245 ) )
        return 0;

    return 1;
}

_id_2B86( var_0, var_1 )
{
    self endon( "death_or_disconnect" );
    wait( var_0 );

    if ( !_id_2B87( self ) )
        return;

    _id_2B8C( 1 );
    self setclientomnvar( "ui_br_bink_overlay_state", 8 );
    wait( var_1 );
    _id_2B8B( 1 );
    self setclientomnvar( "ui_br_bink_overlay_state", 0 );
}

_id_2B88()
{

}

_id_2B89()
{

}

_id_2B8A()
{

}
