// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_021D()
{
    var_0 = getentarray( "destructable", "targetname" );

    if ( getdvar( "scr_destructables" ) == "0" )
    {
        for ( var_1 = 0; var_1 < var_0.size; var_1++ )
            var_0[var_1] _meth_809A();
    }
    else
    {
        for ( var_1 = 0; var_1 < var_0.size; var_1++ )
            var_0[var_1] thread _id_484A();
    }
}

_id_484A()
{
    var_0 = 40;
    var_1 = 0;

    if ( isdefined( self._id_CC7E ) )
        var_0 = self._id_CC7E;

    if ( isdefined( self._id_CE75 ) )
        var_1 = self._id_CE75;

    if ( isdefined( self._id_CCF9 ) )
    {
        var_2 = _func_021A( self._id_CCF9, " " );

        for ( var_3 = 0; var_3 < var_2.size; var_3++ )
            _id_2565( var_2[var_3] );
    }

    if ( isdefined( self._id_CD58 ) )
        self._id_603C = _func_0139( self._id_CD58 );

    var_4 = 0;
    self _meth_82F0( 1 );

    for (;;)
    {
        self waittill( "damage", var_5, var_6 );

        if ( var_5 >= var_1 )
        {
            var_4 = var_4 + var_5;

            if ( var_4 >= var_0 )
            {
                thread _id_4849();
                return;
            }
        }
    }
}

_id_4849()
{
    var_0 = self;

    if ( isdefined( self._id_CCF9 ) )
    {
        var_1 = _func_021A( self._id_CCF9, " " );

        for ( var_2 = 0; var_2 < var_1.size; var_2++ )
            _id_F92F( var_1[var_2] );
    }

    if ( isdefined( var_0._id_603C ) )
        _func_0196( var_0._id_603C, var_0._id_02EA + ( 0, 0, 6 ) );

    var_0 _meth_809A();
}

_id_2565( var_0 )
{

}

_id_256A( var_0, var_1 )
{

}

_id_F92F( var_0 )
{

}

_id_F930( var_0, var_1 )
{

}
