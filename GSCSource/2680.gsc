// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_1096A( var_0 )
{
    if ( level._id_9030 == gettime() )
    {
        if ( isdefined( var_0 ) && var_0 )
        {
            while ( level._id_9030 == gettime() )
                wait 0.05;
        }
        else
        {
            wait 0.05;

            if ( level._id_9030 == gettime() )
            {
                wait 0.05;

                if ( level._id_9030 == gettime() )
                {
                    wait 0.05;

                    if ( level._id_9030 == gettime() )
                        wait 0.05;
                }
            }
        }
    }

    level._id_9030 = gettime();
}

_id_BEBF( var_0 )
{
    if ( !isdefined( level._id_BEC8 ) )
        level._id_BEC8 = [];

    level._id_BEC8[var_0] = [];
}

_id_BEB9( var_0, var_1 )
{
    level._id_BEC8[var_0][level._id_BEC8[var_0].size] = var_1;
}

_id_BEC7( var_0 )
{
    var_1 = undefined;
    var_2 = [];

    foreach ( var_4 in level._id_BEC8[var_0] )
    {
        if ( !isdefined( var_4 ) )
            continue;

        if ( !isdefined( var_1 ) )
        {
            var_1 = var_4;
            continue;
        }

        var_2[var_2.size] = var_4;
    }

    level._id_BEC8[var_0] = var_2;
    return var_1;
}

_id_BEE9( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = ::_id_4545;

    var_2 = 0;
    var_3 = var_0.size - 1;
    var_4 = [ var_2, var_3 ];
    var_5 = 1;

    while ( var_5 >= 0 )
    {
        var_3 = var_4[var_5];
        var_5--;
        var_2 = var_4[var_5];
        var_5--;

        if ( var_3 - var_2 <= 9 )
        {
            for ( var_3++; var_2 < var_3; var_2 = var_2 + 1 )
            {
                var_6 = var_0[var_2];

                for ( var_7 = var_2 - 1; var_7 >= 0 && [[ var_1 ]]( var_6, var_0[var_7] ); var_7 = var_7 - 1 )
                    var_0[var_7 + 1] = var_0[var_7];

                var_0[var_7 + 1] = var_6;
            }

            continue;
        }

        var_6 = var_0[var_3];
        var_8 = var_2 - 1;

        for ( var_7 = var_2; var_7 <= var_3 - 1; var_7++ )
        {
            if ( [[ var_1 ]]( var_0[var_7], var_6 ) )
            {
                var_8++;
                var_9 = var_0[var_8];
                var_0[var_8] = var_0[var_7];
                var_0[var_7] = var_9;
            }
        }

        var_8++;
        var_9 = var_0[var_8];
        var_0[var_8] = var_0[var_3];
        var_0[var_3] = var_9;

        if ( var_8 - 1 > var_2 )
        {
            var_5++;
            var_4[var_5] = var_2;
            var_5++;
            var_4[var_5] = var_8 - 1;
        }

        if ( var_8 + 1 < var_3 )
        {
            var_5++;
            var_4[var_5] = var_8 + 1;
            var_5++;
            var_4[var_5] = var_3;
        }
    }

    return var_0;
}

_id_4545( var_0, var_1 )
{
    return var_0 <= var_1;
}

_id_94BF( var_0, var_1 )
{
    var_2 = 1;

    for ( var_3 = 0; var_3 < var_1; var_3++ )
        var_2 = var_2 * 10;

    var_4 = var_0 * var_2;
    var_4 = int( var_4 );
    var_4 = var_4 / var_2;
    return var_4;
}

_id_C92E( var_0, var_1, var_2 )
{
    if ( !isdefined( var_2 ) )
        var_2 = "nearest";

    var_3 = 1;

    for ( var_4 = 0; var_4 < var_1; var_4++ )
        var_3 = var_3 * 10;

    var_5 = var_0 * var_3;

    if ( var_2 == "up" )
        var_6 = _func_0037( var_5 );
    else if ( var_2 == "down" )
        var_6 = floor( var_5 );
    else
        var_6 = var_5 + 0.5;

    var_5 = int( var_6 );
    var_5 = var_5 / var_3;
    return var_5;
}

_id_EA5C( var_0 )
{
    var_1 = _func_021A( var_0, "." );
    var_2 = int( var_1[0] );

    if ( isdefined( var_1[1] ) )
    {
        var_3 = 1;

        for ( var_4 = 0; var_4 < var_1[1].size; var_4++ )
            var_3 = var_3 * 0.1;

        var_2 = var_2 + int( var_1[1] ) * var_3;
    }

    return var_2;
}

_id_8A4E( var_0, var_1 )
{
    return _func_00D6( var_0, 0, var_1.size ) == var_1;
}

_id_1B9D( var_0, var_1 )
{
    var_2 = [];

    foreach ( var_5, var_4 in var_0 )
    {
        if ( var_4 != var_1 )
            var_2[var_5] = var_4;
    }

    return var_2;
}

_id_46A6( var_0 )
{
    self endon( "death" );
    wait( var_0 );

    if ( isdefined( self ) )
        self _meth_809A();
}

_id_C940( var_0 )
{
    if ( var_0 - int( var_0 ) >= 0.5 )
        return int( var_0 + 1 );
    else
        return int( var_0 );
}

_id_2C79( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 )
{
    thread _id_2C7A( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 );
}

_id_2C7A( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    var_9 = "bufferedNotify_" + var_0;
    self notify( var_9 );
    self endon( var_9 );

    if ( !isdefined( self._id_2C78 ) )
        self._id_2C78 = [];

    if ( !isdefined( self._id_2C78[var_0] ) )
        self._id_2C78[var_0] = [];

    var_10 = _func_020F();
    var_10._id_AE2D = var_1;
    var_10._id_AE2E = var_2;
    var_10._id_AE2F = var_3;
    var_10._id_AE30 = var_4;
    var_10._id_AE31 = var_5;
    var_10._id_AE32 = var_6;
    var_10._id_AE33 = var_7;
    var_10._id_AE34 = var_8;
    self._id_2C78[var_0][self._id_2C78[var_0].size] = var_10;
    waittillframeend;

    while ( self._id_2C78[var_0].size > 0 )
    {
        var_10 = self._id_2C78[var_0][0];
        self notify( var_0, var_10._id_AE2D, var_10._id_AE2E, var_10._id_AE2F, var_10._id_AE30, var_10._id_AE31, var_10._id_AE32, var_10._id_AE33, var_10._id_AE34 );
        self._id_2C78[var_0] = _id_077B::_id_1B9C( self._id_2C78[var_0], 0 );
        waitframe();
    }
}

_id_A682( var_0, var_1 )
{
    self waittill( var_0 );
    waittillframeend;
    self notify( var_1 );
}

_id_46BA( var_0, var_1, var_2 )
{
    self endon( "disconnect" );
    wait( var_0 );
    self _meth_82F6( var_1, var_2 );
}

_id_EA60( var_0, var_1 )
{
    if ( var_0.size <= var_1.size )
        return var_0;

    if ( _func_00D6( var_0, var_0.size - var_1.size, var_0.size ) == var_1 )
        return _func_00D6( var_0, 0, var_0.size - var_1.size );

    return var_0;
}

_id_88EF( var_0, var_1, var_2 )
{
    var_3 = ( var_0[0], var_0[1], 0 );
    var_4 = ( var_2[0], var_2[1], 0 );
    var_5 = var_4 - var_3;
    var_6 = ( var_1[0], var_1[1], 0 );
    return var_5[0] * var_6[1] - var_5[1] * var_6[0] < 0;
}

_id_FFE1( var_0, var_1 )
{
    var_2 = _func_0256( var_0, var_1 );
    var_1 = _func_0256( var_2, var_0 );
    var_3 = _func_0017( var_0, var_2, var_1 );
    return var_3;
}

_id_7634( var_0 )
{
    var_1 = _func_020F();
    var_1._id_A78C = 0;
    var_1._id_FF66 = [];

    if ( var_0 == "max" )
        var_1._id_EBF3 = ::_id_0BFA;
    else if ( var_0 == "min" )
        var_1._id_EBF3 = ::_id_0BF7;

    return var_1;
}

_id_7638()
{
    return self._id_A78C;
}

_id_7636()
{
    return self._id_FF66[1];
}

_id_7637()
{
    if ( self._id_A78C == 0 )
        return undefined;
    else if ( self._id_A78C == 1 )
    {
        var_0 = self._id_FF66[1];
        self._id_FF66[1] = undefined;
        self._id_A78C = 0;
        return var_0;
    }
    else
    {
        var_0 = self._id_FF66[1];
        self._id_FF66[1] = self._id_FF66[self._id_A78C];
        self._id_FF66[self._id_A78C] = undefined;
        _id_0BF8( 1 );
        self._id_A78C = self._id_A78C - 1;
        return var_0;
    }
}

_id_7635( var_0 )
{
    self._id_FF66[self._id_A78C + 1] = var_0;
    var_1 = self._id_A78C + 1;
    var_2 = _id_0BFB( var_1 );

    while ( isdefined( var_2 ) )
    {
        if ( [[ self._id_EBF3 ]]( var_2, var_1 ) )
        {
            var_3 = self._id_FF66[var_2];
            self._id_FF66[var_2] = self._id_FF66[var_1];
            self._id_FF66[var_1] = var_3;
            var_1 = var_2;
            var_2 = _id_0BFB( var_1 );
            continue;
        }

        break;
    }

    self._id_A78C = self._id_A78C + 1;
}

_id_BD08()
{
    var_0 = [];
    var_1 = self._id_A78C;

    for ( var_2 = 0; var_2 < var_1; var_2++ )
        var_0[var_2] = _id_7637();

    for ( var_2 = 0; var_2 < var_0.size; var_2++ )
        _id_7635( var_0[var_2] );

    for ( var_2 = 0; var_2 < var_0.size; var_2++ )
    {

    }
}

_id_0BF7( var_0, var_1 )
{
    return self._id_FF66[var_0] > self._id_FF66[var_1];
}

_id_0BFA( var_0, var_1 )
{
    return self._id_FF66[var_0] < self._id_FF66[var_1];
}

_id_0BF8( var_0 )
{
    var_1 = _id_0BF9( var_0 );
    var_2 = _id_0BFC( var_0 );
    var_3 = undefined;
    var_4 = 0;

    if ( isdefined( var_1 ) )
        var_4 = self [[ self._id_EBF3 ]]( var_0, var_1 );

    var_5 = 0;

    if ( isdefined( var_2 ) )
        var_5 = self [[ self._id_EBF3 ]]( var_0, var_2 );

    if ( !var_4 && !var_5 )
        return;
    else if ( var_4 && !var_5 )
        var_3 = var_1;
    else if ( !var_4 && var_5 )
        var_3 = var_2;
    else if ( self [[ self._id_EBF3 ]]( var_1, var_2 ) )
        var_3 = var_2;
    else
        var_3 = var_1;

    var_6 = self._id_FF66[var_0];
    self._id_FF66[var_0] = self._id_FF66[var_3];
    self._id_FF66[var_3] = var_6;
    _id_0BF8( var_3 );
}

_id_0BF9( var_0 )
{
    if ( !isdefined( self._id_FF66[2 * var_0] ) )
        return undefined;

    return 2 * var_0;
}

_id_0BFC( var_0 )
{
    if ( !isdefined( self._id_FF66[2 * var_0 + 1] ) )
        return undefined;

    return 2 * var_0 + 1;
}

_id_0BFB( var_0 )
{
    if ( var_0 == 1 )
        return undefined;

    return int( floor( var_0 / 2 ) );
}

_id_893C( var_0, var_1 )
{
    return var_0 > 0 && var_0 % var_1 == 0;
}

_id_479A( var_0 )
{
    var_1 = var_0 == undefined;
}
