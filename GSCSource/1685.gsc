// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_1C4F( var_0, var_1 )
{
    self._id_1C08 = _func_020F();
    self._id_1C08._id_188F = [];
    self._id_1C08._id_5F20 = 0;
    self._id_1C90 = var_0;
    self._id_1C08._id_1A0D = var_1;
    self _meth_85DE( var_1 );
    self._id_5D3E = ::_id_1C4F;

    if ( self _meth_85EA() )
        self._id_5D43 = ::_id_1C7F;
    else
        self._id_5D43 = ::_id_1C80;

    self._id_5D3D = scripts\anim\notetracks_mp::_id_745A;
    self._id_5D40 = ::_id_1C5D;
    self._id_5D41 = ::_id_1C67;
    self._id_5D59 = ::_id_4E27;
    self._id_5D56 = ::_id_4E18;
    self._id_5D58 = ::_id_4E24;
    self._id_5D69 = ::_id_69D0;
    self._id_5D55 = ::_id_4E0E;
    level._id_5D37 = ::_id_1855;
    level._id_5D38 = ::_id_1854;
    level._id_5D36 = ::_id_1854;
    _id_733B();
    var_2 = var_0;

    if ( isdefined( self._id_1C8E ) )
        var_2 = self._id_1C8E;

    _func_033F( var_2, _id_0009::_id_1C2D );
    self _meth_85C9( var_2 );
}

_id_733B()
{
    if ( isdefined( self._id_0DB6 ) )
        return;

    self._id_0DB6 = _func_020F();
    self._id_0120 = "stand";
    self._id_0DB6._id_A222 = "stop";
    self._id_0DB6._id_E3B4 = "none";
    self._id_0DB6._id_7293 = "none";
    self._id_0DB6._id_A3FE = 0;
    self._id_0DB6._id_3A8A = gettime();
    self._id_0DB6._id_8FB7 = gettime();
    self._id_0DB6._id_EBAC = 0;
    self._id_0DB6._id_4AA3 = !self _meth_81B9();
    self._id_0DB6._id_ADE7 = 0;
    self._id_0DB6._id_902A = 0;
    self._id_0DB6._id_A491 = 0;
    self._id_0DB6._id_C08C = 0.8;
    self._id_0DB6._id_9F8C = 0;
    self._id_0DB6._id_A554 = 0;
    self._id_0DB6._id_9F8C = 0;
    self._id_0DB6._id_9F8E = 0;
    self._id_0DB6._id_4AB7 = 0;
    self._id_0DB6._id_8EE9 = 0;
}

_id_1855( var_0, var_1, var_2, var_3 )
{
    var_4 = _func_0205( "script_model", var_2 );
    var_4._id_0054 = var_3;
    var_4 setmode( level._id_CC35[var_0] );
    self._id_1851 = var_4;
}

_id_1854( var_0, var_1 )
{
    var_2 = level._id_CC24[var_0][var_1];
    self._id_1851 _meth_82CB( var_2 );
}

_id_CA5C()
{
    if ( isdefined( self._id_5DA3 ) )
    {
        if ( ![[ self._id_5DA3 ]]() )
            return;
    }
    else if ( !_id_DBA4() )
        return;

    if ( isdefined( self._id_013E ) )
    {
        var_0 = getweaponbasename( self._id_013E );

        if ( var_0 == "s4_molotov_mp" )
        {
            self._id_0B3E._id_877C = 1;

            if ( self._id_013F > 0 )
                self._id_2D64 = "right";
            else
                self._id_2D64 = "left";
        }
    }

    if ( self _meth_85CE( self._id_1C90 ) )
        self _meth_85CD( self._id_1C90 );
}

_id_F4E6()
{
    self endon( "death" );
    self endon( "terminate_ai_threads" );

    for (;;)
    {
        self waittill( "traverse_begin", var_0, var_1 );

        if ( !self _meth_85C7( self._id_1C90, var_0 ) )
            var_0 = "traverse_external";

        self _meth_85C8( self._id_1C90, var_0 );
    }
}

_id_DBA4()
{
    var_0 = 64;

    if ( self._id_0DB6._id_4AB7 )
        return 0;

    if ( isdefined( self._id_0042 ) && self._id_0042 == 0 )
        return 0;

    if ( isdefined( self._id_0303 ) && self _meth_8472( 1 ) < var_0 )
        return 0;

    if ( isdefined( self._id_013E ) )
    {
        var_1 = getweaponbasename( self._id_013E );
        var_2 = _func_0121( var_1, "thermite" ) || isdefined( self._id_013E._id_026F ) && _func_0121( self._id_013E._id_026F, "boltfire" );

        if ( var_2 && isdefined( self._id_0DB6._id_900D ) && gettime() - self._id_0DB6._id_900D < 2000 )
            return 0;
    }

    return 1;
}

_id_1C49( var_0, var_1, var_2, var_3 )
{
    _id_0009::_id_1C2B( self._id_1C90, var_0 );
}

_id_1C60( var_0, var_1, var_2, var_3 )
{
    _id_1C61( var_0, var_1, var_2, var_3, "end" );
}

_id_1C61( var_0, var_1, var_2, var_3, var_4 )
{
    self endon( var_1 + "_finished" );
    var_5 = _id_0009::_id_1C42( var_0, var_1 );

    if ( isdefined( var_3 ) )
        _id_0017::_id_B340( var_1, var_2, var_3, var_1, var_4, var_5 );
    else
        _id_0017::_id_B343( var_1, var_2, var_1, var_4, var_5 );
}

_id_1C62( var_0, var_1, var_2, var_3, var_4 )
{
    self endon( var_1 + "_finished" );
    var_5 = _id_0009::_id_1C42( var_0, var_1 );

    if ( isdefined( var_3 ) )
        _id_0017::_id_B341( var_1, var_2, var_3, var_1, var_4, var_5 );
    else
        _id_0017::_id_B344( var_1, var_2, var_1, var_4, var_5 );
}

_id_1C64( var_0, var_1, var_2 )
{
    self endon( var_1 + "_finished" );
    var_3 = _id_1C35( var_0, var_1 );
    var_4 = _id_0009::_id_1C42( var_0, var_1 );
    _id_0017::_id_B343( var_1, var_3, var_1, var_2, var_4 );
}

_id_1C84( var_0, var_1 )
{

}

_id_1C80( var_0 )
{
    switch ( var_0 )
    {
        case "face node":
            var_1 = 1024.0;

            if ( _id_077B::_id_0F4F() )
            {
                var_2 = self._id_0054;

                if ( isdefined( self._id_02CD ) && distancesquared( self._id_02EA, self._id_02CD._id_02EA ) < var_1 )
                    var_2 = _id_08C8::_id_6B7D( self._id_02CD );

                self _meth_8250( "face angle 3d", var_2 );
            }
            else
            {
                var_3 = self._id_0054[1];

                if ( isdefined( self._id_02CD ) && distancesquared( self._id_02EA, self._id_02CD._id_02EA ) < var_1 )
                    var_3 = _id_08C8::_id_6B7E( self._id_02CD );

                self _meth_8250( "face angle", var_3 );
            }

            break;
        default:
            self _meth_8250( var_0 );
            break;
    }
}

_id_1C7F( var_0 )
{
    switch ( var_0 )
    {
        case "face goal":
            var_1 = self._id_0303;

            if ( isdefined( var_1 ) )
            {
                var_2 = var_1 - self._id_02EA;
                var_3 = _func_025A( var_2 );
                var_4 = _func_025B( var_3 );
                self _meth_8250( "face angle", var_4[1] );
                break;
            }
        case "face current":
            self _meth_8250( "face current" );
            break;
        case "face enemy":
        case "face motion":
            self _meth_8250( var_0 );
            break;
        case "face node":
            var_5 = self._id_0054[1];
            var_6 = 1024.0;

            if ( isdefined( self._id_02CD ) && distancesquared( self._id_02EA, self._id_02CD._id_02EA ) < var_6 )
                var_5 = _id_08C8::_id_6B7E( self._id_02CD );

            self _meth_8250( "face angle", var_5 );
            break;
        default:
            break;
    }
}

_id_1C35( var_0, var_1, var_2 )
{
    return self _meth_85C6( var_0, var_1, var_2 );
}

_id_1C5D( var_0, var_1, var_2 )
{

}

_id_4E27( var_0, var_1 )
{
    if ( distance2dsquared( self._id_02EA, var_0._id_02EA ) < 16 )
    {

    }

    var_0 _meth_8739( "away", self._id_02EA );

    if ( var_0 _meth_8728() )
    {
        var_2 = _func_03BB( undefined, undefined, var_0._id_02EA, 64 );

        foreach ( var_4 in var_2 )
        {
            if ( var_4 _meth_8728() )
                var_4 _meth_8739( "away", self._id_02EA );
        }
    }
}

_id_4E18( var_0 )
{
    var_0 _meth_873A();
}

_id_4E24( var_0 )
{
    var_1 = var_0 _meth_8574( "door", 1 );

    if ( !isdefined( var_1 ) || var_1 == "closed" || var_1 == "setup" )
        return 0;

    var_2 = self._id_02EA - var_0._id_02EA;
    var_3 = vectordot( var_2 );
    var_4 = _func_000B( var_3 - var_0._id_39B2[1] );
    var_5 = _func_000B( var_0._id_0054[1] - var_0._id_39B2[1] );
    return var_4 * var_5 > 0;
}

_id_69D0( var_0 )
{
    return self._id_0B3E._id_4E2A;
}

_id_4E0E( var_0 )
{
    return abs( var_0 _meth_872D() ) > 60;
}

_id_1C0D( var_0 )
{
    if ( !_func_0330( var_0 ) )
        return 0;

    return _func_0011( var_0, "facial_override" );
}

_id_1C67( var_0, var_1, var_2 )
{
    self _meth_87BE( var_0, var_1, var_2 );
}

_id_1C6B( var_0, var_1 )
{
    if ( !_id_08C8::_id_882E( "asm" ) )
        return;

    if ( isdefined( var_0 ) && _id_1C0D( var_0 ) )
        return;

    var_2 = _id_0009::_id_1C56( "knobs", "head" );

    if ( !isdefined( var_2 ) )
        return;

    if ( !isdefined( self._id_1C08._id_586C ) )
        self._id_1C08._id_586C = "";

    _id_08C8::_id_D549( "asm" );

    if ( _func_0104( self ) )
        self _meth_86D5( var_1 );
}

_id_1C74()
{
    self _meth_8018( "noclip" );
    self _meth_8250( "face angle", self._id_0054[1] );
    _id_0009::_id_1C17();
    _id_0694::_id_23D8();
    self _meth_85C8( self._id_1C90, "animscripted" );
}
