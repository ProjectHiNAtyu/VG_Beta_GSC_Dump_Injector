// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_00FE( var_0, var_1 )
{
    corpsemovedcallback( var_0, var_1 );
}

_id_00FD( var_0, var_1, var_2 )
{
    corpsesettledcallback( var_0, var_1, var_2 );
}

corpsemovedcallback( var_0, var_1 )
{
    var_2 = _func_00E0( "#x34be45591d96df8bf", 0 );

    if ( var_2 == 0 )
        return;

    if ( isdefined( level.bloodtriggers ) && isdefined( level.bloodtriggers[var_0] ) && isdefined( level.bloodtriggers[var_0][var_1] ) )
    {
        level.bloodtriggers[var_0][var_1] notify( "death" );
        level.bloodtriggers[var_0][var_1] _meth_8001();
        level.bloodtriggers[var_0][var_1] = undefined;
    }
}

corpsesettledcallback( var_0, var_1, var_2 )
{
    var_3 = _func_00E0( "#x34be45591d96df8bf", 0 );

    if ( var_3 == 0 )
        return;

    var_4 = _func_0044( var_0, var_2, "trigger_radius", 30, 10 );
    var_4 thread listentotriggernotify( var_0 );

    if ( !isdefined( level.bloodtriggers ) )
        level.bloodtriggers = [];

    if ( !isdefined( level.bloodtriggers[var_0] ) )
        level.bloodtriggers[var_0] = [];

    if ( isdefined( level.bloodtriggers[var_0][var_1] ) )
    {
        level.bloodtriggers[var_0][var_1] notify( "death" );
        level.bloodtriggers[var_0][var_1] _meth_8001();
        level.bloodtriggers[var_0][var_1] = undefined;
    }

    level.bloodtriggers[var_0][var_1] = var_4;
}

listentotriggernotify( var_0 )
{
    self endon( "death" );

    for (;;)
    {
        self waittill( "trigger", var_1 );

        if ( !isdefined( var_1 ) )
            continue;

        if ( !_func_0094( var_1 ) )
            continue;

        _func_00D7( var_0, var_1, self._id_02EA );
    }
}
