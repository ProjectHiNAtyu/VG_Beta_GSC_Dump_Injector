// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_27A4( var_0, var_1, var_2, var_3 )
{
    var_4 = _func_00B4( self.origin, var_1, var_0 );
    var_5 = [];
    var_6 = self _meth_815E();
    var_7 = anglestoforward( self getplayerangles() );
    var_8 = vectornormalize( var_7 * ( 1, 1, 0 ) );

    foreach ( var_10 in var_4 )
    {
        var_11 = vectornormalize( ( var_10.origin - self.origin ) * ( 1, 1, 0 ) );
        var_12 = vectordot( var_11, var_8 );

        if ( var_12 > var_2 )
        {
            if ( !var_3 || isdefined( var_6 ) && _func_0156( var_10, var_6, 1 ) )
                var_5[var_5.size] = var_10;
        }
    }

    return var_5;
}

_id_27B7( var_0, var_1 )
{
    if ( var_0 == "none" )
        return var_1 == "none";
    else if ( var_0 == "hunt" )
        return var_1 == "hunt" || var_1 == "none";
    else if ( var_0 == "guard" )
        return var_1 == "guard" || var_1 == "hunt" || var_1 == "none";
    else if ( var_0 == "objective" )
        return var_1 == "objective" || var_1 == "guard" || var_1 == "hunt" || var_1 == "none";
    else if ( var_0 == "critical" )
        return var_1 == "critical" || var_1 == "objective" || var_1 == "guard" || var_1 == "hunt" || var_1 == "none";
    else if ( var_0 == "tactical" )
        return 1;
}

_id_28A2( var_0 )
{
    self _meth_8055( var_0 );
    _id_09CE::_id_26DB();
    self _meth_802A();
}

_id_289E( var_0, var_1 )
{
    if ( var_0 == "default" )
        var_0 = _id_270C();

    var_3 = self _meth_802E();
    self _meth_8051( var_0 );

    if ( isplayer( self ) && var_3 != var_0 )
    {
        self.pers["rankxp"] = _id_66CD();
        scripts\mp\rank::_id_B7F7();
    }
}

_id_270C()
{
    if ( !isdefined( level._id_274D ) )
    {
        level._id_274D = [];

        if ( level._id_C016 )
        {
            level._id_274D[level._id_274D.size] = "normal";
            level._id_274D[level._id_274D.size] = "hard";
        }
        else
        {
            level._id_274D[level._id_274D.size] = "easy";
            level._id_274D[level._id_274D.size] = "normal";
            level._id_274D[level._id_274D.size] = "hard";
        }
    }

    if ( !isdefined( level._id_283D ) )
        level._id_283D = [];

    if ( !isdefined( level._id_283D["allies"] ) )
        level._id_283D["allies"] = 0;

    if ( !isdefined( level._id_283D["axis"] ) )
        level._id_283D["axis"] = 0;

    if ( !isdefined( level._id_283D["all"] ) )
        level._id_283D["all"] = 0;

    if ( !isdefined( self.pers["bot_chosen_difficulty"] ) )
    {
        var_0 = undefined;

        if ( level.teambased && level.gametype != "arena_evo" )
        {
            var_1 = self.team;

            if ( !isdefined( var_1 ) )
                var_1 = self._id_28D1;

            if ( !isdefined( var_1 ) )
                var_1 = self.pers["team"];
        }
        else
            var_1 = "all";

        var_0 = level._id_283D[var_1];
        var_2 = level._id_274D[var_0];
        self.pers["bot_chosen_difficulty"] = _id_642C( var_2 );
        level._id_283D[var_1] = ( level._id_283D[var_1] + 1 ) % level._id_274D.size;
    }

    return self.pers["bot_chosen_difficulty"];
}

_id_642C( var_0 )
{
    if ( var_0 == "easy" )
        return "recruit";
    else if ( var_0 == "normal" )
        return "regular";
    else if ( var_0 == "hard" )
        return scripts\engine\utility::random( [ "hardened", "veteran" ] );
    else
    {

    }
}

_id_27DB()
{
    if ( _id_27DF() )
    {
        if ( self._id_2749 == "capture" || self._id_2749 == "capture_zone" )
            return 1;
    }

    return 0;
}

_id_27E4()
{
    if ( _id_27DF() )
    {
        if ( self._id_2749 == "patrol" )
            return 1;
    }

    return 0;
}

_id_27E5()
{
    if ( _id_27DF() )
    {
        if ( self._id_2749 == "protect" || self._id_2749 == "protect_zone" )
            return 1;
    }

    return 0;
}

_id_27DA()
{
    if ( _id_27DF() )
    {
        if ( self._id_2749 == "bodyguard" )
            return 1;
    }

    return 0;
}

_id_27DF()
{
    return isdefined( self._id_2743 );
}

_id_27E0( var_0 )
{
    if ( _id_27DF() )
    {
        if ( _id_28F0( self._id_2744, var_0 ) )
            return 1;
    }

    return 0;
}

_id_27E1( var_0 )
{
    if ( _id_27DA() && self._id_273E == var_0 )
        return 1;

    return 0;
}

_id_5500( var_0, var_1, var_2 )
{
    var_3 = ( 0, 0, 11 );
    var_4 = ( 0, 0, 40 );
    var_5 = undefined;

    if ( var_2 == "stand" )
        return 1;
    else if ( var_2 == "crouch" )
        var_5 = var_4;
    else if ( var_2 == "prone" )
        var_5 = var_3;

    return _func_01FD( var_1 + var_5, var_0 + var_5, 0, undefined );
}

_id_6478( var_0, var_1 )
{
    var_2 = _id_5FFF( var_0, var_1 );

    if ( isdefined( var_2 ) )
    {
        var_2 = _id_C3A1( var_2 );
        var_2 = _id_630D( var_2 );
    }

    return var_2;
}

_id_6000( var_0, var_1 )
{
    return _func_00C4( var_0, var_1 );
}

_id_5FFF( var_0, var_1 )
{
    return _func_00B7( var_0, var_1 );
}

_id_5FFA( var_0, var_1, var_2 )
{
    return _func_0020( var_0, var_1, var_2 );
}

_id_A54A( var_0, var_1 )
{
    if ( !isdefined( self._id_AA48 ) )
        return 0;

    if ( isdefined( self._id_AA48[var_0] ) && isdefined( self._id_AA48[var_0][var_1] ) && self._id_AA48[var_0][var_1] )
        return 1;

    if ( isdefined( self._id_AA48[var_1] ) && isdefined( self._id_AA48[var_1][var_0] ) && self._id_AA48[var_1][var_0] )
        return 1;

    return 0;
}

_id_630D( var_0 )
{
    var_1 = var_0;

    for ( var_2 = 0; var_2 < var_0.size; var_2++ )
    {
        var_3 = _func_00A6( var_0[var_2] );

        for ( var_4 = 0; var_4 < var_3.size; var_4++ )
        {
            if ( !scripts\engine\utility::array_contains( var_1, var_3[var_4] ) )
                var_1 = scripts\engine\utility::array_add( var_1, var_3[var_4] );
        }
    }

    return var_1;
}

_id_6800( var_0, var_1 )
{
    var_2 = [];

    foreach ( var_4 in var_0 )
    {
        if ( _func_0156( var_4, var_1, 1 ) )
            var_2 = scripts\engine\utility::array_add( var_2, var_4 );
    }

    return var_2;
}

_id_C3A1( var_0 )
{
    var_0[var_0.size - 1] = undefined;
    var_0[0] = undefined;
    return scripts\engine\utility::_id_1BA9( var_0 );
}

_id_28F5( var_0 )
{
    while ( !_id_26E5( var_0 ) )
        wait 0.5;
}

_id_26E5( var_0 )
{
    if ( _func_001D() != "off" )
        return 1;

    if ( _id_291C( var_0 ) )
        return 1;

    return 0;
}

_id_28F7( var_0 )
{
    var_1 = gettime();

    for (;;)
    {
        if ( isdefined( var_0 ) )
        {
            if ( gettime() > var_1 + var_0 )
                return;
        }

        if ( !isdefined( self._id_017D ) )
            return;
        else if ( !_id_27D1() )
            return;

        wait 0.05;
    }
}

_id_27D1( var_0 )
{
    if ( self._id_8F05 == 0 )
        return 0;

    var_1 = gettime() - self._id_8F05;
    var_2 = level._id_2852;

    if ( isdefined( var_0 ) )
        var_2 = var_0;

    return var_1 < var_2;
}

_id_28F6( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( var_1 ) && isdefined( var_2 ) )
    {

    }

    if ( ( !isdefined( var_1 ) || !isdefined( var_2 ) ) && isdefined( var_3 ) )
    {

    }

    var_4 = [ "goal", "bad_path", "no_path", "node_relinquished", "script_goal_changed" ];

    if ( isdefined( var_1 ) )
        var_4[var_4.size] = var_1;

    if ( isdefined( var_2 ) )
        var_4[var_4.size] = var_2;

    if ( isdefined( var_3 ) )
        var_4[var_4.size] = var_3;

    if ( isdefined( var_0 ) )
        var_5 = scripts\engine\utility::_id_1088E( var_4, var_0 );
    else
        var_5 = scripts\engine\utility::_id_10890( var_4 );

    return var_5;
}

_id_28E8( var_0, var_1, var_2 )
{
    level endon( "game_ended" );
    childthread _id_FDC4();
    var_3 = scripts\engine\utility::_id_108A8( var_0, var_1, var_2, "use_button_no_longer_pressed", "finished_use" );
    self notify( "stop_usebutton_watcher" );
    return var_3;
}

_id_FDC4( var_0, var_1 )
{
    self endon( "stop_usebutton_watcher" );
    wait 0.05;

    while ( self usebuttonpressed() )
        wait 0.05;

    self notify( "use_button_no_longer_pressed" );
}

_id_291C( var_0 )
{
    foreach ( var_2 in level._id_AE69 )
    {
        if ( isai( var_2 ) )
        {
            if ( isdefined( var_0 ) && var_0 )
            {
                if ( !_id_0A67::_id_8A7B( var_2 ) )
                    continue;
            }

            return 1;
        }
    }

    return 0;
}

_id_2797( var_0, var_1, var_2 )
{
    if ( !isdefined( level._id_54FE ) )
        return undefined;

    if ( _func_0106( var_1 ) )
    {
        if ( isdefined( var_2 ) && var_2 )
        {
            var_3 = undefined;
            var_4 = 999999999;

            foreach ( var_6 in var_1 )
            {
                var_7 = scripts\engine\utility::_id_1B83( level._id_54FA, var_6 );
                var_8 = level._id_54FC[var_7];
                var_9 = distancesquared( self.origin, var_8 );

                if ( var_9 < var_4 )
                {
                    var_3 = var_6;
                    var_4 = var_9;
                }
            }

            var_1 = var_3;
        }
        else
            var_1 = scripts\engine\utility::random( var_1 );
    }

    var_11 = level._id_54FD[var_1];

    if ( !isdefined( var_0 ) || var_0 == "stand" )
        return var_11;
    else if ( var_0 == "crouch" )
    {
        var_12 = [];

        foreach ( var_14 in var_11 )
        {
            if ( var_14._id_407F[var_1] )
                var_12 = scripts\engine\utility::array_add( var_12, var_14 );
        }

        return var_12;
    }
    else if ( var_0 == "prone" )
    {
        var_12 = [];

        foreach ( var_14 in var_11 )
        {
            if ( var_14._id_BD9E[var_1] )
                var_12 = scripts\engine\utility::array_add( var_12, var_14 );
        }

        return var_12;
    }

    return undefined;
}

_id_276D( var_0, var_1, var_2 )
{
    var_3 = undefined;
    var_4 = self._id_273E getvelocity();

    if ( _func_0133( var_4 ) > 100 )
    {
        var_5 = _func_00B4( var_0, var_1 * 1.75, var_1 * 0.5, 500 );
        var_6 = [];
        var_7 = vectornormalize( var_4 );

        for ( var_8 = 0; var_8 < var_5.size; var_8++ )
        {
            var_9 = vectornormalize( var_5[var_8].origin - self._id_273E.origin );

            if ( vectordot( var_9, var_7 ) > 0.1 )
                var_6[var_6.size] = var_5[var_8];
        }
    }
    else
        var_6 = _func_00B4( var_0, var_1, 0, 500 );

    if ( isdefined( var_2 ) && var_2 )
    {
        var_10 = vectornormalize( self._id_273E.origin - self.origin );
        var_11 = var_6;
        var_6 = [];

        foreach ( var_13 in var_11 )
        {
            var_9 = vectornormalize( var_13.origin - self._id_273E.origin );

            if ( vectordot( var_10, var_9 ) > 0.2 )
                var_6[var_6.size] = var_13;
        }
    }

    var_15 = [];
    var_16 = [];
    var_17 = [];

    for ( var_8 = 0; var_8 < var_6.size; var_8++ )
    {
        var_18 = distancesquared( var_6[var_8].origin, var_0 ) > 10000;
        var_19 = abs( var_6[var_8].origin[2] - self._id_273E.origin[2] ) < 50;

        if ( var_18 )
            var_15[var_15.size] = var_6[var_8];

        if ( var_19 )
            var_16[var_16.size] = var_6[var_8];

        if ( var_18 && var_19 )
            var_17[var_17.size] = var_6[var_8];

        if ( var_8 % 100 == 99 )
            wait 0.05;
    }

    if ( var_17.size > 0 )
        var_3 = self _meth_8048( var_17, var_17.size * 0.15, "node_capture", var_0, undefined, self._id_4607 );

    if ( !isdefined( var_3 ) )
    {
        wait 0.05;

        if ( var_16.size > 0 )
            var_3 = self _meth_8048( var_16, var_16.size * 0.15, "node_capture", var_0, undefined, self._id_4607 );

        if ( !isdefined( var_3 ) && var_15.size > 0 )
        {
            wait 0.05;
            var_3 = self _meth_8048( var_15, var_15.size * 0.15, "node_capture", var_0, undefined, self._id_4607 );
        }
    }

    return var_3;
}

_id_276B( var_0, var_1, var_2 )
{
    var_3 = undefined;
    var_4 = _func_00B4( var_0, var_1, 0, 500 );

    if ( var_4.size > 0 )
        var_3 = self _meth_8048( var_4, var_4.size * 0.15, "node_capture", var_0, var_2, self._id_4607 );

    return var_3;
}

_id_276C( var_0, var_1 )
{
    var_2 = undefined;

    if ( var_0.size > 0 )
        var_2 = self _meth_8048( var_0, var_0.size * 0.15, "node_capture", undefined, var_1, self._id_4607 );

    return var_2;
}

_id_276E( var_0, var_1 )
{
    var_2 = undefined;

    if ( var_0.size > 0 )
        var_2 = self _meth_8048( var_0, var_0.size * 0.25, "node_capture", var_1, undefined, self._id_4607 );

    return var_2;
}

_id_276A( var_0, var_1 )
{
    var_2 = undefined;
    var_3 = _func_00B4( var_0, var_1, 0, 500 );

    if ( var_3.size > 0 )
        var_2 = self _meth_8048( var_3, var_3.size * 0.15, "node_protect", var_0, self._id_4607 );

    return var_2;
}

_id_2865( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = undefined;
    var_6 = _func_00B4( var_0, var_1, 0, 500 );

    if ( isdefined( var_6 ) && var_6.size >= 2 )
        var_5 = _id_276F( var_6, var_2 );

    if ( !isdefined( var_5 ) )
    {
        if ( !isdefined( var_3 ) )
            var_3 = 0;

        if ( !isdefined( var_4 ) )
            var_4 = 1;

        var_7 = randomfloatrange( self._id_2747 * var_3, self._id_2747 * var_4 );
        var_8 = anglestoforward( ( 0, randomint( 360 ), 0 ) );
        var_5 = var_0 + var_8 * var_7;
    }

    return var_5;
}

_id_2864( var_0, var_1, var_2 )
{
    var_3 = undefined;

    if ( var_1.size >= 2 )
        var_3 = _id_276F( var_1, var_2 );

    if ( !isdefined( var_3 ) )
    {
        var_4 = scripts\engine\utility::random( var_1 );
        var_5 = var_4.origin - var_0;
        var_3 = var_0 + vectornormalize( var_5 ) * length( var_5 ) * randomfloat( 1.0 );
    }

    return var_3;
}

_id_276F( var_0, var_1 )
{
    var_2 = undefined;
    var_3 = scripts\engine\utility::_id_1B94( var_0 );

    for ( var_4 = 0; var_4 < var_3.size; var_4++ )
    {
        for ( var_5 = var_4 + 1; var_5 < var_3.size; var_5++ )
        {
            var_6 = var_3[var_4];
            var_7 = var_3[var_5];

            if ( _func_0156( var_6, var_7, 1 ) )
            {
                var_2 = ( ( var_6.origin[0] + var_7.origin[0] ) * 0.5, ( var_6.origin[1] + var_7.origin[1] ) * 0.5, ( var_6.origin[2] + var_7.origin[2] ) * 0.5 );

                if ( isdefined( var_1 ) && self [[ var_1 ]]( var_2 ) == 1 )
                    return var_2;
            }
        }
    }

    return var_2;
}

_id_45C2()
{
    if ( isdefined( self._id_2746 ) )
        return self._id_2746.origin;
    else if ( isdefined( self._id_2744 ) )
        return self._id_2744;

    return undefined;
}

_id_26D6()
{
    if ( !istrue( level._id_1595 ) )
        return 0;

    if ( scripts\mp\utility\game::_id_88D4() )
        return 0;

    if ( _id_27E9() )
        return 0;

    if ( self _meth_81F3() )
        return 0;

    if ( isdefined( level._id_A724 ) )
        return 0;

    if ( isdefined( self._id_F93E ) && self._id_F93E )
        return 0;

    if ( isdefined( self._id_3C45 ) && self._id_3C45 )
        return 0;

    if ( self _meth_81D6() )
        return 0;

    if ( scripts\mp\utility\game::_id_6A46() > 0 )
    {
        var_0 = 1;

        foreach ( var_2 in level._id_AE69 )
        {
            if ( isalive( var_2 ) && !_func_03D4( self, var_2 ) )
                var_0 = 0;
        }

        if ( var_0 )
            return 0;
    }

    if ( istrue( self._id_2907 ) )
        return 0;

    if ( !_id_27D1( 500 ) )
        return 1;

    if ( !isalive( self._id_017D ) )
        return 1;

    return 0;
}

_id_287E()
{
    var_0 = undefined;
    var_1 = _func_0027( "investigated", "killer_died" );
    var_2 = _func_0027( "investigated" );
    var_3 = scripts\engine\utility::random( _func_0021( 0, gettime() - 10000, 1, "death", var_1, self ) );

    if ( isdefined( var_3 ) )
    {
        var_0 = var_3;
        self._id_2831 = 10000;
    }
    else
    {
        var_4 = undefined;

        if ( self _meth_803D() != "none" )
            var_4 = self _meth_803A();

        var_5 = _func_0021( 0, gettime() - 45000, 1, "kill", var_2, self );
        var_6 = _func_0021( 0, gettime() - 45000, 1, "death", var_1, self );
        var_3 = scripts\engine\utility::random( scripts\engine\utility::_id_1B72( var_5, var_6 ) );

        if ( isdefined( var_3 ) > 0 && ( !isdefined( var_4 ) || distancesquared( var_4, var_3 ) > 1000000 ) )
        {
            var_0 = var_3;
            self._id_2831 = 45000;
        }
    }

    if ( isdefined( var_0 ) )
    {
        var_7 = _func_00F5( var_0 );
        var_8 = _func_00F5( self.origin );

        if ( isdefined( var_7 ) && isdefined( var_8 ) && var_8 != var_7 )
        {
            var_9 = _func_0029( var_7, self.team, "ally" ) + _func_0029( var_7, self.team, "path_ally" );

            if ( var_9 > 1 )
                var_0 = undefined;
        }
    }

    if ( isdefined( var_0 ) )
        self._id_2830 = var_0;

    return var_0;
}

_id_2759( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 )
{

}

_id_275A( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 )
{

}

_id_2758( var_0, var_1, var_2, var_3, var_4 )
{

}

_id_27B1()
{
    var_0 = 0;
    var_1 = undefined;

    if ( isdefined( self._id_10DA7 ) && self._id_10DA7.size > 0 )
        var_1 = self._id_10DA7;
    else
        var_1 = self getweaponslistprimaries();

    foreach ( var_3 in var_1 )
    {
        var_0 = var_0 + self getweaponammoclip( var_3 );
        var_0 = var_0 + self getweaponammostock( var_3 );
    }

    return var_0;
}

_id_2851()
{
    var_0 = undefined;

    if ( isdefined( self._id_10DA7 ) && self._id_10DA7.size > 0 )
        var_0 = self._id_10DA7;
    else
        var_0 = self getweaponslistprimaries();

    foreach ( var_2 in var_0 )
    {
        if ( self getweaponammoclip( var_2 ) > 0 )
            return 0;

        if ( self getweaponammostock( var_2 ) > 0 )
            return 0;
    }

    return 1;
}

_id_2798()
{
    var_0 = 0;
    var_1 = self _meth_8195();

    foreach ( var_3 in var_1 )
        var_0 = var_0 + self getweaponammostock( var_3 );

    return var_0;
}

_id_27EC( var_0, var_1 )
{
    switch ( var_0 )
    {
        case "trap_directional":
            switch ( var_1.basename )
            {
                case "claymore_mp":
                    return 1;
            }

            break;
        case "trap":
            switch ( var_1.basename )
            {
                case "at_mine_mp":
                case "motion_sensor_mp":
                case "proximity_explosive_mp":
                case "trophy_mp":
                    return 1;
            }

            break;
        case "trap_follower":
            switch ( var_1.basename )
            {
                case "tracking_drone_mp":
                    return 1;
            }

            break;
        case "c4":
            switch ( var_1.basename )
            {
                case "s4_c4_mp":
                    return 1;
            }

            break;
        case "tacticalinsertion":
            switch ( var_1.basename )
            {
                case "s4_hand_flare_mp":
                    return 1;
            }

            break;
    }

    return 0;
}

_id_28FF( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    self notify( "bot_watch_nodes" );
    self endon( "bot_watch_nodes" );
    self endon( "bot_watch_nodes_stop" );
    self endon( "using_remote" );
    self endon( "death_or_disconnect" );

    if ( isdefined( var_4 ) )
        self endon( var_4 );

    if ( isdefined( var_5 ) )
        self endon( var_5 );

    if ( isdefined( var_6 ) )
        self endon( var_6 );

    if ( isdefined( var_7 ) )
        self endon( var_7 );

    wait 0.5;
    var_8 = 1;

    if ( self _meth_81F3() )
        var_8 = 0;

    var_9 = _func_0214( self _meth_803C() );

    while ( var_8 )
    {
        if ( self _meth_8041() && self _meth_804E() )
        {
            if ( distancesquared( self _meth_803A(), self.origin ) < var_9 )
            {
                if ( length( self getvelocity() ) <= 1 )
                    var_8 = 0;
            }
        }

        if ( var_8 )
            wait 0.05;
    }

    var_10 = self.origin;
    var_11 = ( 0, 0, self _meth_8172() );

    if ( isdefined( var_0 ) )
    {
        self._id_10A75 = [];

        foreach ( var_13 in var_0 )
        {
            var_14 = 0;

            if ( distance2dsquared( self.origin, var_13.origin ) <= 40 )
                var_14 = 1;

            var_15 = self geteye();
            var_16 = vectordot( ( 0, 0, 1 ), vectornormalize( var_13.origin + var_11 - var_15 ) );

            if ( abs( var_16 ) > 0.92 )
                var_14 = 1;

            if ( !var_14 )
                self._id_10A75[self._id_10A75.size] = var_13;
        }
    }

    if ( !isdefined( self._id_10A75 ) )
        return;

    thread _id_10A76();
    self._id_10A75 = scripts\engine\utility::_id_1B94( self._id_10A75 );

    foreach ( var_13 in self._id_10A75 )
    {
        var_13._id_10A73[self._id_54E1] = 1.0;
        var_13._id_10A72[self._id_54E1] = 1.0;
    }

    var_20 = [];

    for ( var_21 = 0; var_21 < self._id_10A75.size; var_21++ )
    {
        var_20[var_21] = [];
        var_22 = vectornormalize( self._id_10A75[var_21].origin - self.origin );

        for ( var_23 = 0; var_23 < self._id_10A75.size; var_23++ )
        {
            if ( var_21 == var_23 )
                continue;

            var_24 = vectornormalize( self._id_10A75[var_23].origin - self.origin );
            var_25 = vectordot( var_22, var_24 );

            if ( var_25 > 0.94 )
                var_20[var_21] = scripts\engine\utility::array_add( var_20[var_21], var_23 );
        }
    }

    for (;;)
    {
        var_26 = -1;
        var_27 = 0;

        for ( var_21 = 0; var_21 < self._id_10A75.size; var_21++ )
        {
            if ( var_20[var_21].size > var_27 )
            {
                var_26 = var_21;
                var_27 = var_20[var_21].size;
            }
        }

        if ( var_26 == -1 )
            break;

        self._id_10A75[var_26]._id_10A73[self._id_54E1] = 0.5;
        self._id_10A75[var_26]._id_10A72[self._id_54E1] = 0.5;
        var_20[var_26] = [];

        for ( var_21 = 0; var_21 < var_20.size; var_21++ )
        {
            if ( scripts\engine\utility::array_contains( var_20[var_21], var_26 ) )
                var_20[var_21] = scripts\engine\utility::array_remove( var_20[var_21], var_26 );
        }
    }

    var_28 = gettime();
    var_29 = var_28;
    var_30 = [];
    var_31 = undefined;

    if ( isdefined( var_1 ) )
        var_31 = ( 0, var_1, 0 );

    var_32 = isdefined( var_31 ) && isdefined( var_2 );
    var_33 = undefined;
    var_34 = undefined;
    wait 0.1;

    for (;;)
    {
        var_35 = gettime();
        self notify( "still_watching_nodes" );
        var_36 = self _meth_8031();

        if ( isdefined( var_3 ) && var_35 >= var_3 )
            return;

        if ( _id_09D0::_id_27C7() )
        {
            self _meth_8044( undefined );
            wait 0.2;
            continue;
        }

        if ( !self _meth_8041() || !self _meth_804E() )
        {
            wait 0.2;
            continue;
        }

        if ( isdefined( var_34 ) && var_34._id_10A73[self._id_54E1] == 0.0 )
            var_29 = var_35;

        if ( self._id_10A75.size > 0 )
        {
            var_37 = 0;

            if ( isdefined( self._id_017D ) )
            {
                var_38 = self _meth_8203( self._id_017D );
                var_39 = self _meth_8204( self._id_017D );

                if ( var_39 && var_35 - var_39 < 5000 )
                {
                    var_40 = vectornormalize( var_38 - self.origin );
                    var_41 = 0;

                    for ( var_21 = 0; var_21 < self._id_10A75.size; var_21++ )
                    {
                        var_42 = vectornormalize( self._id_10A75[var_21].origin - self.origin );
                        var_25 = vectordot( var_40, var_42 );

                        if ( var_25 > var_41 )
                        {
                            var_41 = var_25;
                            var_34 = self._id_10A75[var_21];
                            var_37 = 1;
                        }
                    }
                }
            }

            if ( !var_37 && var_35 >= var_29 )
            {
                var_43 = [];

                for ( var_21 = 0; var_21 < self._id_10A75.size; var_21++ )
                {
                    var_13 = self._id_10A75[var_21];
                    var_44 = var_13 _meth_8162();

                    if ( var_32 && !scripts\engine\utility::_id_10E74( self.origin, var_31, var_13.origin, var_2 ) )
                        continue;

                    if ( distance2dsquared( self.origin, var_13.origin ) <= 10 )
                        continue;

                    if ( !isdefined( var_30[var_44] ) )
                        var_30[var_44] = 0;

                    if ( scripts\engine\utility::_id_10E74( self.origin, self getplayerangles(), var_13.origin, var_36 ) )
                        var_30[var_44] = var_35;

                    for ( var_45 = 0; var_45 < var_43.size; var_45++ )
                    {
                        if ( var_30[var_43[var_45] _meth_8162()] > var_30[var_44] )
                            break;
                    }

                    var_43 = scripts\engine\utility::_id_1B8B( var_43, var_13, var_45 );
                }

                var_33 = var_34;
                var_34 = undefined;

                if ( var_43.size == 1 )
                    var_34 = var_43[0];
                else if ( var_43.size > 1 )
                {
                    var_46 = [];
                    var_47 = 0;

                    for ( var_21 = 0; var_21 < var_43.size; var_21++ )
                    {
                        var_48 = 1.0 - var_21 / ( var_43.size - 1 ) * 0.5;
                        var_49 = [ var_43[var_21], var_43[var_21]._id_10A73[self._id_54E1] * var_48 ];
                        var_46[var_46.size] = var_49;
                        var_47 = var_47 + var_49[1];
                    }

                    var_50 = randomfloat( var_47 );

                    for ( var_21 = 0; var_21 < var_46.size; var_21++ )
                    {
                        if ( var_50 < var_46[var_21][1] )
                        {
                            var_34 = var_46[var_21][0];
                            break;
                        }

                        var_50 = var_50 - var_46[var_21][1];
                    }
                }

                if ( isdefined( var_34 ) )
                {
                    var_29 = var_35 + randomintrange( 3000, 5000 );
                    var_51 = !isdefined( var_33 ) || var_33 != var_34;

                    if ( var_51 && istrue( self._id_26F4 ) )
                        childthread _id_27C2( var_34 );
                }
            }

            if ( isdefined( var_34 ) )
            {
                var_52 = var_34.origin + var_11;

                if ( distance2dsquared( self.origin, var_52 ) <= 10 )
                {
                    self _meth_8044( undefined );
                    var_34 = undefined;
                    var_29 = 0;
                }
                else
                    self _meth_8044( var_52, 0.4, "script_search" );
            }
        }

        wait 0.2;
    }
}

_id_27C2( var_0 )
{
    if ( isdefined( self._id_410C ) )
    {
        var_1 = self._id_410C;

        if ( var_1 == "prone" && self getstance() == "prone" )
        {
            self _meth_805A( "crouch" );
            wait 1.0;
        }

        if ( var_1 == "prone" )
        {
            if ( _id_10A79( self _meth_815E(), var_0 ) )
                self _meth_805A( "prone" );
            else
                var_1 = "crouch";
        }

        if ( var_1 == "crouch" )
        {
            if ( _id_10A78( self _meth_815E(), var_0 ) )
                self _meth_805A( "crouch" );
            else
                var_1 = "stand";
        }

        if ( var_1 == "stand" )
            self _meth_805A( "stand" );
    }
}

_id_10A79( var_0, var_1 )
{
    var_2 = var_1 _meth_8162();

    if ( !isdefined( var_0._id_BDA3 ) || !isdefined( var_0._id_BDA3[var_2] ) )
    {
        var_3 = _func_01FD( var_0.origin + ( 0, 0, 11 ), var_1.origin + ( 0, 0, 11 ), 0, undefined );
        var_0._id_BDA3[var_2] = var_3;
    }

    return var_0._id_BDA3[var_2];
}

_id_10A78( var_0, var_1 )
{
    var_2 = var_1 _meth_8162();

    if ( !isdefined( var_0._id_BDA3 ) || !isdefined( var_0._id_BDA3[var_2] ) )
    {
        var_3 = _func_01FD( var_0.origin + ( 0, 0, 40 ), var_1.origin + ( 0, 0, 11 ), 0, undefined );
        var_0._id_BDA3[var_2] = var_3;
    }

    return var_0._id_BDA3[var_2];
}

_id_10A77()
{
    self notify( "bot_watch_nodes_stop" );

    if ( isdefined( self._id_10A75 ) )
    {
        foreach ( var_1 in self._id_10A75 )
            _id_10A74( var_1 );
    }

    self._id_10A75 = undefined;
}

_id_10A74( var_0 )
{
    var_0._id_10A73[self._id_54E1] = undefined;
    var_0._id_10A72[self._id_54E1] = undefined;
}

_id_10A76()
{
    self notify( "watch_nodes_aborted" );
    self endon( "watch_nodes_aborted" );
    self endon( "bot_watch_nodes_stop" );
    self endon( "disconnect" );

    for (;;)
    {
        var_0 = scripts\engine\utility::_id_108A5( 0.5, "still_watching_nodes" );

        if ( !isdefined( var_0 ) || var_0 != "still_watching_nodes" )
        {
            thread _id_10A77();
            return;
        }
    }
}

_id_280C( var_0, var_1 )
{
    if ( isdefined( var_1 ) && var_1 != ( 0, 0, 0 ) )
    {
        if ( !scripts\engine\utility::_id_10E74( self.origin, self getplayerangles(), var_1, self _meth_8031() ) )
        {
            var_2 = self _meth_804C( var_1 );

            if ( isdefined( var_2 ) )
                self _meth_8044( var_2 + ( 0, 0, 40 ), 1.0, "script_seek" );
        }

        self _meth_8045( "known_enemy", undefined, var_1 );
    }
}

_id_279F( var_0, var_1 )
{
    if ( isdefined( var_1 ) && isdefined( var_1.classname ) )
    {
        if ( var_1.classname == "grenade" )
        {
            if ( isdefined( var_0 ) && var_0.classname == "worldspawn" )
                return undefined;

            if ( !_id_2761( var_1 ) )
                return var_0;
        }
        else if ( var_1.classname == "rocket" )
        {
            if ( isdefined( var_1._id_100A7 ) )
                return var_1._id_100A7;

            if ( isdefined( var_1._id_048F ) && var_1._id_048F == "remote" )
                return var_1;

            if ( isdefined( var_1.owner ) )
                return var_1.owner;
        }
        else if ( var_1.classname == "worldspawn" || var_1.classname == "trigger_hurt" )
            return undefined;

        return var_1;
    }

    return var_0;
}

_id_2761( var_0 )
{
    var_1 = var_0._id_10D06;

    if ( !isdefined( var_1 ) )
        var_1 = var_0._id_04D6;

    if ( !isdefined( var_1 ) )
        return 0;

    if ( issubstr( var_1, "s4_c4_mp" ) )
        return 1;

    if ( issubstr( var_1, "claymore_mp" ) )
        return 1;

    if ( issubstr( var_1, "mine_mp" ) )
        return 1;

    if ( issubstr( var_1, "proximity_explosive_mp" ) )
        return 1;

    return 0;
}

_id_28F0( var_0, var_1 )
{
    return var_0[0] == var_1[0] && var_0[1] == var_1[1] && var_0[2] == var_1[2];
}

_id_26CF( var_0 )
{
    var_0._id_790A = [];

    if ( var_0._id_27D8 == "use" )
        _id_26D0( var_0 );
    else if ( var_0._id_27D8 == "damage" )
        _id_26CE( var_0 );
    else
    {

    }
}

_id_2880( var_0 )
{
    var_0._id_161A = 1;
    level._id_9329 = scripts\engine\utility::array_remove( level._id_9329, var_0 );
}

_id_26D0( var_0 )
{
    if ( !issubstr( var_0._id_00E1, "trigger_use" ) )
        return;

    if ( !isdefined( var_0.target ) )
        return;

    if ( isdefined( var_0._id_28CE ) )
        return;

    if ( !isdefined( var_0._id_FE10 ) )
        return;

    var_1 = _func_00B3( var_0.target, "targetname" );

    if ( var_1.size != 1 )
        return;

    var_0._id_28CE = var_1[0];

    if ( !isdefined( level._id_9329 ) )
        level._id_9329 = [];

    level._id_9329 = scripts\engine\utility::array_add( level._id_9329, var_0 );
}

_id_26CE( var_0 )
{
    if ( !issubstr( var_0._id_00E1, "trigger_damage" ) )
        return;

    var_1 = _func_00B3( var_0.target, "targetname" );

    if ( var_1.size != 2 )
        return;

    var_0._id_28D0 = var_1;

    if ( !isdefined( level._id_9329 ) )
        level._id_9329 = [];

    level._id_9329 = scripts\engine\utility::array_add( level._id_9329, var_0 );
}

_id_27AB( var_0, var_1 )
{
    var_2 = 0;

    foreach ( var_5, var_4 in var_0 )
    {
        if ( var_2 == var_1 )
            return var_5;

        var_2++;
    }

    return undefined;
}

_id_27B3( var_0, var_1 )
{
    for ( var_2 = 0; var_2 < level._id_110DF; var_2++ )
    {
        var_3 = _func_00F6( var_2 );
        var_3._id_10424 = 0;
    }

    var_4 = _func_00F6( var_0 );
    return _id_27B4( var_4, var_1 );
}

_id_27B4( var_0, var_1 )
{
    var_2 = [];
    var_2[0] = _func_00B8( var_0 );
    var_0._id_10424 = 1;
    var_3 = _func_00A6( var_0 );

    foreach ( var_5 in var_3 )
    {
        if ( !var_5._id_10424 )
        {
            var_6 = distance( var_0.origin, var_5.origin );

            if ( var_6 < var_1 )
            {
                var_7 = _id_27B4( var_5, var_1 - var_6 );
                var_2 = scripts\engine\utility::_id_1B72( var_7, var_2 );
            }
        }
    }

    return var_2;
}

_id_27A3( var_0 )
{
    return level._id_282E[var_0];
}

_id_27AC()
{
    return int( _id_2794() / 2 );
}

_id_2794()
{
    var_0 = getdvarint( "#x312f16e8838a7e035", 0 );
    var_0 = max( var_0, getdvarint( "#x3d7f1b411cb19c79e", 0 ) );

    if ( var_0 > level._id_9C46 )
        return level._id_9C46;

    return var_0;
}

_id_2876()
{
    self notify( "bot_queued_process_level_thread" );
    self endon( "bot_queued_process_level_thread" );
    wait 0.05;

    for (;;)
    {
        if ( isdefined( level._id_2878 ) && level._id_2878.size > 0 )
        {
            var_0 = level._id_2878[0];

            if ( isdefined( var_0 ) && isdefined( var_0.owner ) )
            {
                var_1 = undefined;

                if ( isdefined( var_0._id_AE52 ) )
                    var_1 = var_0.owner [[ var_0._id_5FF7 ]]( var_0._id_AE4F, var_0._id_AE50, var_0._id_AE51, var_0._id_AE52 );
                else if ( isdefined( var_0._id_AE51 ) )
                    var_1 = var_0.owner [[ var_0._id_5FF7 ]]( var_0._id_AE4F, var_0._id_AE50, var_0._id_AE51 );
                else if ( isdefined( var_0._id_AE50 ) )
                    var_1 = var_0.owner [[ var_0._id_5FF7 ]]( var_0._id_AE4F, var_0._id_AE50 );
                else if ( isdefined( var_0._id_AE4F ) )
                    var_1 = var_0.owner [[ var_0._id_5FF7 ]]( var_0._id_AE4F );
                else
                    var_1 = var_0.owner [[ var_0._id_5FF7 ]]();

                var_0.owner notify( var_0._id_A3B5, var_1 );
            }

            var_2 = [];

            for ( var_3 = 1; var_3 < level._id_2878.size; var_3++ )
                var_2[var_3 - 1] = level._id_2878[var_3];

            level._id_2878 = var_2;
        }

        wait 0.05;
    }
}

_id_2875( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    if ( !isdefined( level._id_2878 ) )
        level._id_2878 = [];

    foreach ( var_8, var_7 in level._id_2878 )
    {
        if ( var_7.owner == self && var_7.name == var_0 )
        {
            self notify( var_7.name );
            level._id_2878[var_8] = undefined;
        }
    }

    var_7 = spawnstruct();
    var_7.owner = self;
    var_7.name = var_0;
    var_7._id_A3B5 = var_7.name + "_done";
    var_7._id_5FF7 = var_1;
    var_7._id_AE4F = var_2;
    var_7._id_AE50 = var_3;
    var_7._id_AE51 = var_4;
    var_7._id_AE52 = var_5;
    level._id_2878[level._id_2878.size] = var_7;

    if ( !isdefined( level._id_2877 ) )
    {
        level._id_2877 = 1;
        level thread _id_2876();
    }

    self waittill( var_7._id_A3B5, var_9 );
    return var_9;
}

_id_27E9()
{
    return scripts\mp\utility\player::_id_8AB5() || self _meth_81CB();
}

_id_27A2( var_0 )
{
    var_1 = undefined;

    if ( isdefined( self._id_10DA7 ) && self._id_10DA7.size > 0 )
        var_1 = self._id_10DA7;
    else
        var_1 = self getweaponslistprimaries();

    foreach ( var_3 in var_1 )
    {
        var_4 = weaponclipsize( var_3 );
        var_5 = self getweaponammostock( var_3 );

        if ( var_5 <= var_4 )
            return 1;

        if ( self _meth_8135( var_3 ) <= var_0 )
            return 1;
    }

    return 0;
}

_id_27A1( var_0 )
{
    var_1 = undefined;

    if ( isdefined( self._id_10DA7 ) && self._id_10DA7.size > 0 )
        var_1 = self._id_10DA7;
    else
        var_1 = self getweaponslistprimaries();

    var_2 = 0;
    var_3 = 0;

    foreach ( var_5 in var_1 )
    {
        var_6 = weaponclipsize( var_5 );
        var_7 = self getweaponammostock( var_5 );

        if ( var_7 <= var_6 || self _meth_8135( var_5 ) <= var_0 )
            var_3++;
    }

    if ( var_3 == var_1.size )
        var_2 = 1;

    return var_2;
}

_id_286B( var_0, var_1, var_2 )
{
    if ( !isdefined( var_1 ) )
        var_1 = 256;

    if ( !isdefined( var_2 ) )
        var_2 = 72;

    var_3 = _func_02A6( var_0 );
    var_4 = var_3 - var_0;

    if ( _func_0132( var_4 ) > var_1 * var_1 )
        return 0;

    if ( abs( var_4[2] ) > var_2 )
        return 0;

    return 1;
}

_id_2834( var_0 )
{
    level endon( "game_ended" );
    self notify( "bot_monitor_enemy_camp_spots" );
    self endon( "bot_monitor_enemy_camp_spots" );
    level._id_536C = [];
    level._id_536B = [];
    level._id_536A = [];

    for (;;)
    {
        wait 1.0;
        var_1 = [];

        if ( !isdefined( var_0 ) )
            continue;

        foreach ( var_3 in level._id_AE69 )
        {
            if ( !isdefined( var_3.team ) )
                continue;

            if ( var_3 [[ var_0 ]]() && !isdefined( var_1[var_3.team] ) )
            {
                level._id_536A[var_3.team] = undefined;
                level._id_536C[var_3.team] = var_3 _meth_804B( 1 );

                if ( isdefined( level._id_536C[var_3.team] ) )
                {
                    if ( !isdefined( level._id_536B[var_3.team] ) || !scripts\engine\utility::array_contains( level._id_536C[var_3.team], level._id_536B[var_3.team] ) )
                        level._id_536B[var_3.team] = scripts\engine\utility::random( level._id_536C[var_3.team] );

                    if ( isdefined( level._id_536B[var_3.team] ) )
                    {
                        var_4 = [];

                        foreach ( var_6 in level._id_AE69 )
                        {
                            if ( !isdefined( var_6.team ) )
                                continue;

                            if ( var_6 [[ var_0 ]]() && var_6.team == var_3.team )
                                var_4[var_4.size] = var_6;
                        }

                        var_4 = _func_01FF( var_4, level._id_536B[var_3.team] );

                        if ( var_4.size > 0 )
                            level._id_536A[var_3.team] = var_4[0];
                    }
                }

                var_1[var_3.team] = 1;
            }
        }
    }
}

_id_28E9()
{
    if ( !isdefined( self ) )
        return 0;

    if ( !isai( self ) )
        return 0;

    if ( !isdefined( self.team ) )
        return 0;

    if ( self.team == "spectator" )
        return 0;

    if ( !isalive( self ) )
        return 0;

    if ( !_id_0A67::_id_872A( self ) )
        return 0;

    if ( !isdefined( self._id_B010 ) || self._id_B010 == "camper" )
        return 0;

    return 1;
}

_id_28E6()
{
    if ( !isdefined( level._id_536A ) )
        return;

    if ( !isdefined( level._id_536A[self.team] ) )
        return;

    if ( level._id_536A[self.team] == self )
    {
        _id_09D0::_id_2740();
        self _meth_8057( level._id_536B[self.team], 128, "objective", undefined, 256 );
        _id_28F6();
    }
}

_id_2775( var_0, var_1 )
{
    self notify( "bot_force_stance_for_time" );
    self endon( "bot_force_stance_for_time" );
    self endon( "death_or_disconnect" );
    level endon( "game_ended" );
    self _meth_805A( var_0 );
    wait( var_1 );
    self _meth_805A( "none" );
}

_id_D23C( var_0 )
{
    if ( !( isdefined( self._id_790A ) && scripts\engine\utility::array_contains( self._id_790A, var_0 ) ) )
    {
        self._id_790A = scripts\engine\utility::array_add( self._id_790A, var_0 );
        var_0 notify( "calculate_new_level_targets" );
    }
}

_id_1009( var_0, var_1 )
{
    if ( isdefined( level._id_2777 ) && isdefined( level._id_2777["bots_add_to_level_targets"] ) )
    {
        var_0._id_FE10 = var_1;
        var_0._id_27D8 = "use";
        [[ level._id_2777["bots_add_to_level_targets"] ]]( var_0 );
    }
}

_id_C3B6( var_0 )
{
    if ( isdefined( level._id_2777 ) && isdefined( level._id_2777["bots_remove_from_level_targets"] ) )
        [[ level._id_2777["bots_remove_from_level_targets"] ]]( var_0 );
}

_id_1008( var_0 )
{
    if ( isdefined( level._id_2777 ) && isdefined( level._id_2777["bots_add_to_level_targets"] ) )
    {
        var_0._id_27D8 = "damage";
        [[ level._id_2777["bots_add_to_level_targets"] ]]( var_0 );
    }
}

_id_C3B5( var_0 )
{
    if ( isdefined( level._id_2777 ) && isdefined( level._id_2777["bots_remove_from_level_targets"] ) )
        [[ level._id_2777["bots_remove_from_level_targets"] ]]( var_0 );
}

_id_A65A( var_0 )
{
    if ( isdefined( level._id_2777 ) && isdefined( level._id_2777["notify_enemy_bots_bomb_used"] ) )
        self [[ level._id_2777["notify_enemy_bots_bomb_used"] ]]( var_0 );
}

_id_66CD()
{
    if ( isdefined( level._id_2777 ) && isdefined( level._id_2777["bot_get_rank_xp"] ) )
        return self [[ level._id_2777["bot_get_rank_xp"] ]]();
}

_id_27EB()
{
    return self _meth_8042();
}

_id_3977( var_0 )
{
    if ( !isbot( var_0 ) )
        return 0;

    if ( !_id_48B9() )
        return 0;

    return 1;
}

_id_48B9()
{
    return 0;
}

_id_274E( var_0 )
{
    self notify( "bot_disable_movement_for_time" );
    self endon( "bot_disable_movement_for_time" );
    self endon( "death_or_disconnect" );
    level endon( "game_ended" );
    self _meth_8053( "disable_movement", 1 );
    wait( var_0 );
    self _meth_8053( "disable_movement", 0 );
}

_id_6003( var_0 )
{
    var_1 = tablelookupgetnumrows( var_0 );
    var_2 = spawnstruct();
    var_2._id_D71E = [];
    var_2._id_D71E["recruit"] = [];
    var_2._id_D71E["regular"] = [];
    var_2._id_D71E["hardened"] = [];
    var_2._id_D71E["veteran"] = [];

    for ( var_3 = 0; var_3 < var_1; var_3++ )
    {
        var_4 = tablelookupbyrow( var_0, var_3, 0 );
        var_2._id_D71E["recruit"][var_4] = spawnstruct();
        var_2._id_D71E["regular"][var_4] = spawnstruct();
        var_2._id_D71E["hardened"][var_4] = spawnstruct();
        var_2._id_D71E["veteran"][var_4] = spawnstruct();
        var_5 = tablelookupbyrow( var_0, var_3, 1 );
        var_2._id_D71E["recruit"][var_4] = var_5;
        var_6 = tablelookupbyrow( var_0, var_3, 2 );
        var_2._id_D71E["regular"][var_4] = var_6;
        var_7 = tablelookupbyrow( var_0, var_3, 3 );
        var_2._id_D71E["hardened"][var_4] = var_7;
        var_8 = tablelookupbyrow( var_0, var_3, 4 );
        var_2._id_D71E["veteran"][var_4] = var_8;
    }

    return var_2;
}

_id_28E7( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = level._id_496B;

    var_2 = var_1._id_D71E[var_0];
    var_3 = getarraykeys( var_2 );

    foreach ( var_5 in var_3 )
    {
        if ( var_5 == "burstFireType" )
            var_6 = var_1._id_D71E[var_0][var_5];
        else
            var_6 = float( var_1._id_D71E[var_0][var_5] );

        self _meth_8052( var_5, var_6 );
    }
}

_id_289F( var_0, var_1, var_2 )
{
    if ( !isdefined( var_2 ) )
        var_2 = level._id_496B;

    var_3 = var_2._id_D71E[var_0];
    var_4 = getarraykeys( var_3 );

    foreach ( var_6 in var_4 )
    {
        if ( var_6 != var_1 )
            continue;

        if ( var_6 == "burstFireType" )
            var_7 = var_2._id_D71E[var_0][var_6];
        else
            var_7 = float( var_2._id_D71E[var_0][var_6] );

        self _meth_8052( var_6, var_7 );
        return;
    }
}
