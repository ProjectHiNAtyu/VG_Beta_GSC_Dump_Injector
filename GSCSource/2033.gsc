// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    foreach ( var_1 in level._id_EF86 )
        level._id_E3DF[var_1] = spawnstruct();

    _id_0A71::_id_C279( ::_id_5F2E );
    _id_0A6E::_id_C27C( ::_id_AAF2 );

    if ( getdvarint( "cg_mlg_static_cameras", 0 ) != 0 )
        level thread _id_6AE3();
}

_id_3FF3( var_0, var_1 )
{
    _func_01AD( var_0 );
    var_2 = spawn( "script_model", ( 0, 0, 0 ) );
    var_2 setmodel( "tag_origin" );
    var_2.angles = ( 0, 0, 0 );
    return var_2;
}

_id_D5CF( var_0, var_1 )
{
    var_2 = var_0;

    if ( var_2 >= 4 )
        var_2 = var_2 - 4;

    var_3 = tolower( getdvar( "#x32ea5e908954bfea7" ) );
    var_4 = _func_021D( var_1, 0, var_3, var_2 * 2 + 1 );

    if ( var_4 != "" )
    {
        var_5 = var_0 + 1;

        if ( var_0 >= 5 )
            var_5 = var_5 - 4;

        level._id_3072[var_0] = _id_3FF3( "compass_icon_codcaster_cam", 1 );
        level._id_A760[var_0] = _id_3FF3( "compass_icon_codcaster_num" + var_5, 0 );
        var_6 = _func_021D( var_1, 0, var_3, var_2 * 2 + 2 );
        level._id_3079[var_0] = _id_6926( var_4 );
        level._id_305D[var_0] = _id_6926( var_6 );
        level._id_3069 = var_0;
    }
}

_id_6AE3()
{
    while ( !isdefined( level._id_A8C9 ) )
        waitframe();

    var_0 = "mp/CameraPositions";
    var_1 = var_0 + "_" + scripts\mp\utility\game::getgametype() + ".csv";
    var_0 = var_0 + ".csv";
    level._id_3072 = [];
    level._id_A760 = [];

    for ( var_2 = 0; var_2 < 4; var_2++ )
        _id_D5CF( var_2, var_0 );

    for ( var_2 = 4; var_2 < 8; var_2++ )
        _id_D5CF( var_2, var_1 );
}

_id_6926( var_0 )
{
    var_1 = strtok( var_0, " " );
    var_2 = ( 0, 0, 0 );

    if ( isdefined( var_1[0] ) && isdefined( var_1[1] ) && isdefined( var_1[2] ) )
        var_2 = ( int( var_1[0] ), int( var_1[1] ), int( var_1[2] ) );

    return var_2;
}

_id_AAF2( var_0 )
{
    var_0 _id_D6D7();
}

_id_AAF1( var_0 )
{
    if ( !isdefined( var_0 ) )
        return;

    var_0 thread _id_AB96();
    var_0 thread _id_AB97();
    var_0 _id_D6D7();
    var_0 setclientomnvar( "ui_callout_area_id", -1 );

    if ( var_0 _meth_81D2() || isdefined( var_0.pers["codcaster"] ) && var_0.pers["codcaster"] )
    {
        var_0 _meth_834E( 1 );
        var_0 _meth_8605( 0 );
        var_0 thread _id_FC2D();
        var_0 thread _id_1EF8();
        var_0 thread _id_CB42();
    }
}

_id_AB96()
{
    self endon( "disconnect" );
    self endon( "joined_team" );

    for (;;)
    {
        self waittill( "spectating_cycle" );
        var_0 = self getspectatingplayer();

        if ( isdefined( var_0 ) )
        {
            if ( isdefined( var_0._id_2F53 ) )
            {
                var_1 = level._id_2F56._id_1A29[var_0._id_2F53];
                self setclientomnvar( "ui_callout_area_id", var_1 );
            }

            if ( scripts\mp\utility\game::getgametype() == "ball" )
                scripts\mp\gametypes\ball::_id_2103( self );
        }
    }
}

_id_AB97()
{
    self endon( "disconnect" );
    self endon( "joined_team" );

    for (;;)
    {
        self waittill( "spectating_mlg_camera" );
        var_0 = self _meth_85A7();

        if ( self _meth_81D2() || isdefined( self.pers["codcaster"] ) && self.pers["codcaster"] )
        {
            if ( isdefined( var_0 ) )
            {
                self setclientomnvar( "ui_callout_area_id", -1 );
                continue;
            }
        }
    }
}

_id_5F2E( var_0, var_1 )
{
    if ( var_0 == "mlg_view_change" )
        scripts\mp\playerlogic::_id_C642();
}

_id_FD33()
{
    level endon( "game_ended" );

    for ( var_0 = 0; var_0 < level.players.size; var_0++ )
        level.players[var_0] _id_D6D7();
}

_id_94E2( var_0 )
{
    self endon( "disconnect" );
    self endon( "joined_team" );
    self endon( "joined_spectators" );

    for (;;)
    {
        if ( !isdefined( self._id_39F5 ) )
            break;

        if ( self _meth_8603() )
        {
            waitframe();
            continue;
        }

        self _meth_805E( self._id_39F5, "tag_origin", 1 );
        var_1 = level._id_39F4.origin;
        var_2 = ( 0, 0, 30 );
        var_2 = var_2 + -80 * var_0;
        var_3 = var_1 + var_2;
        self._id_39F5 moveto( var_3, 10.5, 5.2, 5.2 );
        self._id_39F5.angles = vectortoangles( var_0 );
        break;
    }
}

_id_1EF8()
{
    self endon( "disconnect" );
    self endon( "game_ended" );
    self endon( "spectating_mlg_camera" );
    level scripts\engine\utility::_id_1087F( "prematch_done", "start_mode_setup", "infil_started" );
    level._id_903A = game["lastSpectatedPlayer"];

    for (;;)
    {
        var_0 = undefined;

        if ( !self _meth_81D2() || self _meth_8603() || self _meth_874A() || self _meth_876F() )
            break;

        if ( level.players.size > 1 )
        {
            if ( level._id_41C9 > 1 && isdefined( level._id_903A ) && self.team != "follower" )
                var_0 = level._id_903A;
            else if ( self.team == "follower" )
            {
                var_1 = self _meth_8777();
                var_2 = 0;

                foreach ( var_4 in level.players )
                {
                    if ( var_4 scripts\cp_mp\utility\player_utility::_id_0C14() )
                    {
                        if ( var_4 getentitynumber() == var_1 )
                        {
                            if ( var_4.team == "spectator" || var_4.team == "follower" )
                                var_2 = 1;
                            else
                                var_0 = var_1;

                            break;
                        }
                    }
                }

                if ( var_2 )
                    break;
            }
            else
            {
                foreach ( var_7 in level._id_EF86 )
                {
                    var_8 = scripts\mp\utility\teams::_id_6A3A( var_7, 1 );

                    if ( var_8.size > 0 )
                        var_0 = scripts\mp\utility\player::_id_6B0A( var_8, 1 );
                }
            }

            if ( isdefined( var_0 ) )
            {
                self _meth_8604( var_0 );
                break;
            }
        }

        wait 1.0;
    }
}

_id_FC2D()
{
    self endon( "joined_team" );
    self endon( "disconnect" );
    self._id_8AE9 = 0;
    self._id_39F5 = undefined;
    self._id_E3E4 = undefined;

    for (;;)
    {
        if ( self _meth_81D2() && self _meth_8603() )
        {
            var_0 = self getspectatingplayer();

            if ( isdefined( var_0 ) )
                level._id_903A = var_0._id_3979;
        }

        var_1 = isdefined( level._id_39F4 );

        if ( !var_1 || !self _meth_8606() )
        {
            if ( self._id_8AE9 )
            {
                self._id_8AE9 = 0;
                self._id_39F5 unlink();
                self._id_39F5 delete();
                self._id_39F5 = undefined;

                if ( !self _meth_8603() && isdefined( self._id_E3E4 ) )
                    self _meth_8604( self._id_E3E4 getentitynumber() );
                else
                    self cameralinkto();

                self._id_E3E4 = undefined;
            }
        }
        else if ( !self._id_8AE9 )
        {
            if ( self _meth_8606() )
            {
                var_0 = self getspectatingplayer();

                if ( isdefined( var_0 ) && isdefined( level._id_39F7 ) && var_0 == level._id_39F7 )
                {
                    self._id_8AE9 = 1;
                    self._id_E3E4 = var_0;
                    var_2 = vectornormalize( level._id_39F6 );
                    var_3 = var_0 getvieworigin();
                    self._id_39F5 = spawn( "script_model", var_3 );
                    self._id_39F5.angles = vectortoangles( var_2 );
                    self._id_39F5 setmodel( "tag_origin" );
                    _func_0341( self getentitynumber() );
                    self cameralinkto();
                    thread _id_94E2( var_2 );
                }
            }
        }
        else if ( isdefined( self._id_39F5 ) )
        {
            var_4 = level._id_39F4.origin;
            var_5 = self._id_39F5.origin;
            var_6 = distance2d( var_4, var_5 );
            var_7 = var_4 - var_5;
            var_8 = ( var_7[0], var_7[1], 0 );
            var_8 = vectornormalize( var_8 );
            var_9 = var_4;
            var_10 = ( 0, 0, 30 );
            var_10 = var_10 + -80 * var_8;
            var_11 = var_9 + var_10;

            if ( var_6 > 600 )
                self._id_39F5.origin = var_11;
            else
                self._id_39F5 moveto( var_11, 0.5, 0, 0.2 );

            self._id_39F5 rotateto( vectortoangles( var_7 ), 0.15, 0.05, 0.05 );
        }

        wait 0.05;
    }
}

_id_CB42()
{
    level waittill( "game_ended" );
    game["lastSpectatedPlayer"] = level._id_903A;
}

_id_D6D7( var_0 )
{
    if ( level._id_609B && gettime() - level._id_609E >= 2000 && !istrue( level._id_BA3B ) )
    {
        if ( level.teambased )
        {
            foreach ( var_2 in level._id_EF86 )
                self _meth_8012( var_2, 0 );
        }

        self _meth_8012( "freelook", 0 );
        self _meth_8012( "none", 1 );
        return;
    }

    var_4 = _id_07FB::_id_6DF7( "game", "spectatetype" );

    if ( getdvarint( "#x35d8acc60ca21b504", 0 ) == 1 )
        var_4 = 2;

    if ( self _meth_81D2() )
        var_4 = 2;

    if ( istrue( self._id_82D6 ) )
        var_4 = 0;

    if ( istrue( var_0 ) )
        var_4 = 2;

    var_5 = self._id_0393;

    switch ( var_4 )
    {
        case 0:
            _id_D505();
            break;
        case 4:
        case 1:
            self notify( "waitForGameStartSpectate" );

            if ( var_4 == 4 )
                var_5 = self.pers["team"];

            if ( var_5 != "spectator" && var_5 != "follower" )
                _id_D70B( var_5 );
            else if ( isdefined( self.pers["last_team"] ) )
            {
                var_5 = self.pers["last_team"];
                _id_D70B( var_5 );
            }
            else if ( _id_07A8::_id_609F( "prematch_done" ) )
            {
                var_6 = randomint( level._id_EF86.size );
                _id_D70B( level._id_EF86[var_6] );
            }
            else
            {
                _id_D70B( "allies" );
                thread _id_10803();
                return;
            }

            break;
        case 2:
            _id_D560( var_0 );
            break;
        case 3:
            if ( var_5 == "spectator" || var_5 == "follower" )
                _id_D560();
            else
                _id_D70B( var_5 );

            break;
    }

    if ( isdefined( var_5 ) && scripts\mp\utility\teams::_id_885E( var_5 ) )
    {
        if ( istrue( level._id_E3DF[var_5]._id_158F ) )
            self _meth_8012( "freelook", 1 );

        if ( istrue( level._id_E3DF[var_5]._id_158D ) )
        {
            var_7 = scripts\mp\utility\teams::_id_69E2( var_5 );

            foreach ( var_2 in var_7 )
                self _meth_8012( var_2, 1 );
        }
    }
}

_id_10803()
{
    self endon( "waitForGameStartSpectate" );
    self endon( "disconnect" );
    level waittill( "prematch_over" );
    thread _id_D6D7();
}

_id_D505()
{
    self _meth_8012( "freelook", 0 );
    self _meth_8012( "none", 0 );

    foreach ( var_1 in level._id_EF86 )
        self _meth_8012( var_1, 0 );
}

_id_D70B( var_0 )
{
    self _meth_8012( "freelook", 0 );

    if ( level.teambased )
    {
        self _meth_8012( "none", 0 );

        foreach ( var_2 in level._id_EF86 )
        {
            if ( var_0 == var_2 )
            {
                self _meth_8012( var_2, 1 );
                continue;
            }

            self _meth_8012( var_2, 0 );
        }
    }
    else
    {
        self _meth_8012( "none", 1 );

        foreach ( var_2 in level._id_EF86 )
            self _meth_8012( var_2, 1 );
    }
}

_id_D560( var_0 )
{
    self _meth_8012( "freelook", 1 );
    self _meth_8012( "none", 1 );

    if ( _id_07A8::_id_609F( "prematch_done" ) )
    {
        foreach ( var_2 in level._id_EF86 )
            self _meth_8012( var_2, 1 );

        if ( istrue( var_0 ) )
        {
            thread scripts\mp\playerlogic::_id_E37A( undefined, undefined, 1 );
            return;
        }
    }
    else if ( self _meth_81D2() )
    {
        self _meth_8012( "allies", 1 );
        self _meth_8012( "axis", 1 );
        thread _id_10803();
    }
    else
    {
        var_4 = self._id_0393;

        if ( self == level.players[0] || var_4 == "spectator" || var_4 == "follower" )
        {
            self _meth_8012( "allies", 1 );
            self _meth_8012( "axis", 0 );
            thread _id_10803();
        }
    }
}
