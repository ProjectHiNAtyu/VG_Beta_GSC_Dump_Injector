// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level._id_D112 = [];
    level._id_D112["super_trophy"] = "super_trophy";
    level._id_D112["sentry_shock"] = "sentry_shock";
    level._id_D112["manual_turret"] = "manual_turret";
    level._id_D0ED = [];
    level._id_D0ED["super_trophy"] = spawnstruct();
    level._id_D0ED["super_trophy"].health = 999999;
    level._id_D0ED["super_trophy"].maxhealth = 100;
    level._id_D0ED["super_trophy"]._id_D0EB = "sentry";
    level._id_D0ED["super_trophy"]._id_D0EA = "sentry_offline";
    level._id_D0ED["super_trophy"].weaponinfo = "sentry_laser_mp";
    level._id_D0ED["super_trophy"]._id_9FBD = "super_trophy_mp";
    level._id_D0ED["super_trophy"]._id_9FC6 = "super_trophy_mp_placement";
    level._id_D0ED["super_trophy"]._id_9FBC = "super_trophy_mp_placement_fail";
    level._id_D0ED["super_trophy"]._id_9FC2 = "super_trophy_mp";
    level._id_D0ED["super_trophy"]._id_020A = &"SENTRY/PICKUP";
    level._id_D0ED["super_trophy"]._id_75CE = 1;
    level._id_D0ED["super_trophy"]._id_EFA9 = "used_super_trophy";
    level._id_D0ED["super_trophy"]._id_DBDE = 0;
    level._id_D0ED["super_trophy"]._id_944A = "tag_fx";
    level._id_D0ED["sentry_shock"] = spawnstruct();
    level._id_D0ED["sentry_shock"].health = 999999;
    level._id_D0ED["sentry_shock"].maxhealth = 670;
    level._id_D0ED["sentry_shock"]._id_2D8C = 20;
    level._id_D0ED["sentry_shock"]._id_2D8B = 120;
    level._id_D0ED["sentry_shock"]._id_AF5B = 0.15;
    level._id_D0ED["sentry_shock"]._id_AF59 = 0.35;
    level._id_D0ED["sentry_shock"]._id_D0EB = "sentry";
    level._id_D0ED["sentry_shock"]._id_D0EA = "sentry_offline";
    level._id_D0ED["sentry_shock"]._id_F221 = 90.0;
    level._id_D0ED["sentry_shock"]._id_E40D = 0.05;
    level._id_D0ED["sentry_shock"]._id_AD0E = 8.0;
    level._id_D0ED["sentry_shock"]._id_3CEB = 0.1;
    level._id_D0ED["sentry_shock"]._id_607E = 0.3;
    level._id_D0ED["sentry_shock"]._id_EA0F = "sentry_shock";
    level._id_D0ED["sentry_shock"].weaponinfo = "sentry_shock_mp";
    level._id_D0ED["sentry_shock"]._id_0383 = "ks_shock_sentry_mp";
    level._id_D0ED["sentry_shock"]._id_9FBD = "shock_sentry_gun_wm";
    level._id_D0ED["sentry_shock"]._id_9FC6 = "shock_sentry_gun_wm_obj";
    level._id_D0ED["sentry_shock"]._id_9FBC = "shock_sentry_gun_wm_obj_red";
    level._id_D0ED["sentry_shock"]._id_9FC2 = "shock_sentry_gun_wm_destroyed";
    level._id_D0ED["sentry_shock"]._id_020A = &"SENTRY/PICKUP";
    level._id_D0ED["sentry_shock"]._id_75CE = 1;
    level._id_D0ED["sentry_shock"]._id_EFA9 = "used_shock_sentry";
    level._id_D0ED["sentry_shock"]._id_482A = "callout_destroyed_sentry_shock";
    level._id_D0ED["sentry_shock"]._id_DBDE = 1;
    level._id_D0ED["sentry_shock"]._id_106B2 = "sentry_shock_timeout";
    level._id_D0ED["sentry_shock"]._id_1068D = "sentry_shock_destroy";
    level._id_D0ED["sentry_shock"]._id_CC09 = "destroyed_sentry";
    level._id_D0ED["sentry_shock"]._id_944A = "tag_fx";
    level._id_D0ED["sentry_shock"]._id_88CF = 1;
    level._id_D0ED["sentry_shock"]._id_75DA = 75;
    level._effect["sentry_overheat_mp"] = loadfx( "vfx/core/mp/killstreaks/vfx_sg_overheat_smoke" );
    level._effect["sentry_explode_mp"] = loadfx( "vfx/iw7/_requests/mp/vfx_generic_equipment_exp_lg.vfx" );
    level._effect["sentry_sparks_mp"] = loadfx( "vfx/core/mp/killstreaks/vfx_sentry_gun_explosion" );
    level._effect["sentry_smoke_mp"] = loadfx( "vfx/iw7/_requests/mp/vfx_gen_equip_dam_spark_runner.vfx" );
    level._effect["sentry_shock_charge"] = loadfx( "vfx/iw7/_requests/mp/vfx_sentry_shock_charge_up.vfx" );
    level._effect["sentry_shock_screen"] = loadfx( "vfx/iw7/_requests/mp/vfx_sentry_shock_screen" );
    level._effect["sentry_shock_base"] = loadfx( "vfx/iw7/_requests/mp/vfx_sentry_shock_base" );
    level._effect["sentry_shock_radius"] = loadfx( "vfx/iw7/_requests/mp/vfx_sentry_shock_radius" );
    level._effect["sentry_shock_explosion"] = loadfx( "vfx/iw7/_requests/mp/vfx_sentry_shock_end.vfx" );
    level._effect["sentry_shock_trail"] = loadfx( "vfx/iw7/_requests/mp/vfx_sentry_shock_proj_trail.vfx" );
    level._effect["sentry_shock_arc"] = loadfx( "vfx/iw7/_requests/mp/vfx_sentry_shock_arc.vfx" );
}

_id_F768( var_0, var_1 )
{
    var_2 = _id_6FD2( "sentry_minigun" );

    if ( var_2 )
        scripts\common\utility::_id_F737( level._id_9B9D, level._id_D0ED["sentry_minigun"]._id_EA0F, self.origin );

    return var_2;
}

_id_F799( var_0, var_1 )
{
    var_2 = _id_6FD2( "sam_turret" );

    if ( var_2 )
        scripts\common\utility::_id_F737( level._id_9B9D, level._id_D0ED["sam_turret"]._id_EA0F, self.origin );

    return var_2;
}

_id_F79C( var_0 )
{
    var_1 = _id_6FD2( "sentry_shock", undefined, var_0 );

    if ( var_1 )
        scripts\common\utility::_id_F737( level._id_9B9D, var_0._id_EA0F, self.origin );
    else
        waitframe();

    return var_1;
}

_id_F78E( var_0 )
{
    var_1 = _id_6FD2( "manual_turret", undefined, var_0 );

    if ( var_1 )
        scripts\common\utility::_id_F737( level._id_9B9D, var_0._id_EA0F, self.origin );
    else
        waitframe();

    return var_1;
}

_id_6FD2( var_0, var_1, var_2 )
{
    self._id_8F3E = var_0;

    if ( !isdefined( self._id_B14E ) )
        self._id_B14E = [];

    if ( !isdefined( self._id_B14E[var_0] ) )
        self._id_B14E[var_0] = [];

    var_3 = 1;

    if ( isdefined( var_1 ) )
        var_3 = var_1;

    var_4 = _id_4026( var_0, self, var_3, var_2 );

    if ( isdefined( var_2 ) )
        var_2._id_D0E8 = var_4;

    _id_C4F0();
    self._id_32AC = var_4;
    var_5 = _id_D4AF( var_4, 1, var_3 );
    self._id_32AC = undefined;
    thread _id_1085A();
    self._id_878D = 0;

    if ( isdefined( var_4 ) )
        return 1;
    else
        return 0;
}

_id_D4AF( var_0, var_1, var_2, var_3 )
{
    self endon( "death_or_disconnect" );
    var_0 _id_D0DD( self, var_2, var_3 );
    scripts\common\utility::_id_1562( 0 );
    _id_15BB( 0 );
    scripts\common\utility::_id_152C( 0 );

    if ( !isai( self ) )
    {
        self notifyonplayercommand( "place_sentry", "+attack" );
        self notifyonplayercommand( "place_sentry", "+attack_akimbo_accessible" );
        self notifyonplayercommand( "cancel_sentry", "+actionslot 4" );

        if ( !self _meth_8682() )
        {
            self notifyonplayercommand( "cancel_sentry", "+actionslot 5" );
            self notifyonplayercommand( "cancel_sentry", "+actionslot 6" );
            self notifyonplayercommand( "cancel_sentry", "+actionslot 7" );
        }
    }

    for (;;)
    {
        var_4 = scripts\engine\utility::_id_10897( "place_sentry", "cancel_sentry", "force_cancel_placement", "emp_applied" );

        if ( !isdefined( var_0 ) )
        {
            _id_15BB( 1 );
            scripts\common\utility::_id_1562( 1 );
            thread _id_523D();
            return 1;
        }

        if ( var_4 == "cancel_sentry" || var_4 == "force_cancel_placement" || var_4 == "emp_applied" )
        {
            if ( !var_1 && ( var_4 == "cancel_sentry" || var_4 == "emp_applied" ) )
                continue;

            var_0 _id_D0DC( var_4 == "force_cancel_placement" && !isdefined( var_0._id_5BBA ) );
            return 0;
        }

        if ( !var_0._id_3126 )
            continue;

        var_0 _id_D0E0( var_2 );
        return 1;
    }
}

_id_523D()
{
    self endon( "death_or_disconnect" );
    wait 0.25;
    scripts\common\utility::_id_152C( 1 );
}

_id_C533()
{
    if ( self hasweapon( "iw6_riotshield_mp" ) )
    {
        self._id_C706 = "iw6_riotshield_mp";
        scripts\cp_mp\utility\inventory_utility::_takeweapon( "iw6_riotshield_mp" );
    }
}

_id_C4F0()
{
    if ( scripts\mp\utility\perk::_hasperk( "specialty_explosivebullets" ) )
    {
        self._id_C700 = "specialty_explosivebullets";
        scripts\mp\utility\perk::removeperk( "specialty_explosivebullets" );
    }
}

_id_C708()
{
    if ( isdefined( self._id_C706 ) )
    {
        scripts\cp_mp\utility\inventory_utility::_giveweapon( self._id_C706 );
        self._id_C706 = undefined;
    }
}

_id_C701()
{
    if ( isdefined( self._id_C700 ) )
    {
        scripts\mp\utility\perk::_id_6FA5( self._id_C700 );
        self._id_C700 = undefined;
    }
}

_id_1085A()
{
    self endon( "death_or_disconnect" );
    level endon( "game_ended" );
    waitframe();
    _id_C701();
}

_id_4026( var_0, var_1, var_2, var_3 )
{
    var_4 = level._id_D0ED[var_0].weaponinfo;
    var_5 = _func_0210( "misc_turret", var_1.origin, var_4 );
    var_5.angles = var_1.angles;
    var_5.streakinfo = var_3;
    var_5 _id_D0D1( var_0, var_1, var_2 );
    var_5 thread _id_D0C7();
    var_5 _id_0764::_id_1510( 0 );
    var_5 _id_0764::_id_D3AD( ::_id_D0C9 );
    var_5 _id_0764::_id_D17C( ::_id_D0C8 );
    return var_5;
}

_id_D0D1( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( var_3 ) )
        var_3 = 1;

    self._id_D112 = var_0;
    self._id_3126 = 1;
    self setmodel( level._id_D0ED[var_0]._id_9FBD );
    self _meth_8357( 1 );

    if ( level._id_D0ED[var_0]._id_DBDE )
        self._id_DBDE = 1;
    else
        self._id_DBDE = 0;

    self._id_5BBA = 1;
    self setcandamage( 1 );

    switch ( var_0 )
    {
        case "minigun_turret":
        case "gl_turret":
        case "minigun_turret_4":
        case "gl_turret_4":
        case "gl_turret_3":
        case "gl_turret_2":
        case "gl_turret_1":
        case "minigun_turret_3":
        case "minigun_turret_2":
        case "minigun_turret_1":
            self _meth_8330( 80 );
            self _meth_8371( 80 );
            self _meth_82EF( 50 );
            self _meth_8309( 0.0 );
            self._id_AC7C = var_1;
            break;
        case "scramble_turret":
        case "sam_turret":
            self _meth_8223();
            self _meth_8330( 180 );
            self _meth_8371( 180 );
            self _meth_8394( 80 );
            self _meth_8309( -89.0 );
            self._id_8EDE = 0;
            var_4 = spawn( "script_model", self gettagorigin( "tag_laser" ) );
            var_4 linkto( self );
            self.killcament = var_4;
            self.killcament _meth_8374( "explosive" );
            break;
        case "sentry_shock":
            self _meth_8223();
            var_5 = anglestoforward( self.angles );
            var_6 = self gettagorigin( "tag_laser" ) + ( 0, 0, 10 );
            var_6 = var_6 - var_5 * 20;
            var_4 = spawn( "script_model", var_6 );
            var_4 linkto( self );
            self.killcament = var_4;
            break;
        case "manual_turret":
            var_5 = anglestoforward( self.angles );
            var_6 = self gettagorigin( "tag_laser" ) + ( 0, 0, 10 );
            var_6 = var_6 - var_5 * 20;
            var_4 = spawn( "script_model", var_6 );
            var_4 linkto( self );
            self.killcament = var_4;
            break;
        default:
            self _meth_8223();
            self _meth_8309( -89.0 );
            break;
    }

    self _meth_839C( 1 );
    _id_D0DE();
    _id_D0DF( var_1 );

    if ( var_3 )
        thread _id_D0E6();

    switch ( var_0 )
    {
        case "minigun_turret":
        case "minigun_turret_4":
        case "minigun_turret_3":
        case "minigun_turret_2":
        case "minigun_turret_1":
            self._id_A09F = 0;
            self._id_763E = 0;
            self._id_AD0D = 0;
            thread _id_D0D0();
            break;
        case "gl_turret":
        case "gl_turret_4":
        case "gl_turret_3":
        case "gl_turret_2":
        case "gl_turret_1":
            self._id_A09F = 0;
            self._id_763E = 0;
            self._id_3CEC = 0;
            self._id_AD0D = 0;
            thread _id_F83F();
            thread _id_F823();
            break;
        case "scramble_turret":
        case "sam_turret":
        case "sentry_shock":
            self._id_A09F = 0;
            thread _id_D0CF( var_2 );
            thread _id_D0C2();
            break;
        case "manual_turret":
            self._id_A09F = 0;
            thread _id_D0CD();
            thread _id_D0CA( var_2 );
            break;
        case "super_trophy":
            thread _id_D0CF( 0 );
            thread _id_D0C2();
            break;
        default:
            thread _id_D0CF( var_2 );
            thread _id_D0C1();
            thread _id_D0C2();
            break;
    }
}

_id_D0E1()
{
    var_0 = level._id_D0ED[self._id_D112]._id_75DA;

    if ( !isdefined( var_0 ) )
        return;

    if ( !isdefined( self.owner ) )
        return;

    var_1 = self.owner;
    var_2 = var_1.team;
    self._id_75D8 = thread _id_0766::_id_D587( 0, var_0, undefined, undefined, undefined, undefined, 1 );
}

_id_D0C5()
{
    var_0 = level._id_D0ED[self._id_D112]._id_75DA;

    if ( !isdefined( var_0 ) )
        return;

    _id_0766::_id_D586( self._id_75D8 );
}

_id_D0C7()
{
    self endon( "death" );
    level scripts\engine\utility::waittill_any_2( "bro_shot_start", "game_ended" );
    self notify( "death" );
}

_id_D0CB()
{
    self endon( "carried" );
    var_0 = level._id_D0ED[self._id_D112].maxhealth;
    var_1 = 0;

    if ( self.owner scripts\mp\utility\perk::_hasperk( "specialty_rugged_eqp" ) )
    {
        var_2 = self._id_10D06;

        if ( isdefined( var_2 ) )
        {
            switch ( var_2 )
            {
                default:
            }
        }
    }

    var_0 = var_0 + int( var_1 );
    _id_079A::_id_A0EC( var_0, "sentry", ::_id_D0E9, ::_id_D0EC, 1 );
}

_id_D0EC( var_0 )
{
    var_1 = var_0.attacker;
    var_2 = var_0.objweapon;
    var_3 = var_0._id_9CBF;
    var_4 = var_0.damage;
    var_5 = var_0._id_7C7C;
    var_6 = var_4;

    if ( var_3 == "MOD_MELEE" )
        var_6 = self.maxhealth * 0.34;

    var_6 = _id_0A6F::_id_6B47( var_1, var_2, var_3, var_6, self.maxhealth, 2, 3, 4 );
    return var_6;
}

_id_D0E9( var_0 )
{
    var_1 = var_0.attacker;
    var_2 = var_0.objweapon;
    var_3 = var_0._id_9CBF;
    var_4 = var_0.damage;
    var_5 = var_0._id_7C7C;
    var_6 = level._id_D0ED[self._id_D112];

    if ( var_6._id_88CF )
    {
        var_7 = _id_079A::_id_AB05( var_6._id_EA0F, var_1, var_2, var_3, var_4, var_6._id_CC09, var_6._id_1068D, var_6._id_482A );

        if ( var_7 )
        {
            var_1 notify( "destroyed_equipment" );
            return;
        }
    }
    else
    {
        var_8 = undefined;
        var_9 = var_1;

        if ( isdefined( var_9 ) && isdefined( self.owner ) )
        {
            if ( isdefined( var_1.owner ) && isplayer( var_1.owner ) )
                var_9 = var_1.owner;

            if ( self.owner scripts\mp\utility\player::isenemy( var_9 ) )
                var_8 = var_9;
        }

        if ( isdefined( var_8 ) )
        {
            var_8 thread _id_07A5::_id_EB42( self.owner );
            var_8 notify( "destroyed_equipment" );
        }

        self notify( "death" );
    }
}

_id_D0C9( var_0 )
{
    self._id_4A67 = 1;
    self _meth_8309( 40 );
    self _meth_834F( level._id_D0ED[self._id_D112]._id_D0EA );
    self _meth_8085();
    self setscriptablepartstate( "muzzle", "neutral", 0 );
    self setscriptablepartstate( "stunned", "active" );
}

_id_D0C8( var_0 )
{
    if ( var_0 )
        return;

    self _meth_8309( -89.0 );
    self _meth_834F( level._id_D0ED[self._id_D112]._id_D0EB );
    self setscriptablepartstate( "stunned", "neutral" );
    self._id_4A67 = undefined;
}

_id_D0CC()
{
    self endon( "carried" );
    self waittill( "death" );

    if ( isdefined( self.owner ) )
        self.owner._id_B14E[self._id_D112] = scripts\engine\utility::array_remove( self.owner._id_B14E[self._id_D112], self );

    if ( !isdefined( self ) )
        return;

    self _meth_8085();
    self _meth_8201();
    self setmodel( level._id_D0ED[self._id_D112]._id_9FC2 );

    if ( isdefined( self._id_606B ) && self._id_606B.size > 0 )
    {
        foreach ( var_1 in self._id_606B )
        {
            if ( isdefined( var_1 ) )
                var_1 delete();
        }

        self._id_606B = undefined;
    }

    _id_D0DE();
    self _meth_8309( 40 );
    self _meth_8376( undefined );

    if ( isdefined( self._id_84D6 ) )
        self _meth_8421( self._id_84D6 );

    self _meth_839B( 0 );

    if ( isdefined( self._id_AD9E ) )
        self._id_AD9E delete();

    switch ( self._id_D112 )
    {
        case "minigun_turret":
        case "gl_turret":
            self._id_5E73 = 1;
            self _meth_840F();
            break;
        default:
            break;
    }

    if ( isdefined( self._id_84D6 ) )
    {
        playfxontag( scripts\engine\utility::getfx( "sentry_explode_mp" ), self, "tag_origin" );
        playfxontag( scripts\engine\utility::getfx( "sentry_smoke_mp" ), self, "tag_aim" );
        self._id_84D6._id_F858 scripts\mp\hud_util::destroyelem();
        self._id_84D6 _id_C701();
        self._id_84D6 _id_C708();
        self notify( "deleting" );
        wait 1.0;
        stopfxontag( scripts\engine\utility::getfx( "sentry_explode_mp" ), self, "tag_origin" );
        stopfxontag( scripts\engine\utility::getfx( "sentry_smoke_mp" ), self, "tag_aim" );
    }
    else
    {
        self playsound( "sentry_explode_smoke" );
        self setscriptablepartstate( "destroyed", "sparks" );
        wait 5;
        playfx( scripts\engine\utility::getfx( "sentry_explode_mp" ), self.origin + ( 0, 0, 10 ) );
        self notify( "deleting" );
    }

    scripts\mp\weapons::_id_553A();

    if ( isdefined( self.killcament ) )
        self.killcament delete();

    if ( isdefined( self._id_138A ) )
        self._id_138A delete();

    if ( isdefined( self._id_9A51 ) )
        self._id_9A51 delete();

    _id_0A77::_id_BD07( "killstreak ended - shock_sentry", self.owner );
    self delete();
}

_id_D0CF( var_0 )
{
    self endon( "death" );
    level endon( "game_ended" );

    for (;;)
    {
        self waittill( "trigger", var_1 );

        if ( !scripts\mp\utility\player::isreallyalive( var_1 ) )
            continue;

        if ( self._id_D112 == "sam_turret" || self._id_D112 == "scramble_turret" )
            self _meth_834F( level._id_D0ED[self._id_D112]._id_D0EA );

        var_1._id_B14E[self._id_D112] = scripts\engine\utility::array_remove( var_1._id_B14E[self._id_D112], self );
        var_1 _id_D4AF( self, 0, var_0 );
    }
}

_id_F83D( var_0 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    var_0 endon( "death" );

    if ( !isdefined( var_0._id_AD9E ) )
        return;

    var_1 = 0;

    for (;;)
    {
        if ( isalive( self ) && self _meth_81EF( var_0._id_AD9E ) && !isdefined( var_0._id_84D6 ) && !isdefined( var_0._id_32A4 ) && self isonground() )
        {
            if ( self usebuttonpressed() )
            {
                var_1 = 0;

                while ( self usebuttonpressed() )
                {
                    var_1 = var_1 + level._id_5F1B;
                    waitframe();
                }

                if ( var_1 >= 0.5 )
                    continue;

                var_1 = 0;

                while ( !self usebuttonpressed() && var_1 < 0.5 )
                {
                    var_1 = var_1 + level._id_5F1B;
                    waitframe();
                }

                if ( var_1 >= 0.5 )
                    continue;

                if ( !scripts\mp\utility\player::isreallyalive( self ) )
                    continue;

                var_0 _meth_834F( level._id_D0ED[var_0._id_D112]._id_D0EA );
                thread _id_D4AF( var_0, 0 );
                var_0._id_AD9E delete();
                return;
            }
        }

        waitframe();
    }
}

_id_F83E()
{
    self notify( "turret_handluse" );
    self endon( "turret_handleuse" );
    self endon( "deleting" );
    level endon( "game_ended" );
    self._id_5E73 = 0;
    var_0 = ( 1, 0.9, 0.7 );
    var_1 = ( 1, 0.65, 0 );
    var_2 = ( 1, 0.25, 0 );

    for (;;)
    {
        self waittill( "trigger", var_3 );

        if ( isdefined( self._id_32A4 ) )
            continue;

        if ( isdefined( self._id_84D6 ) )
            continue;

        if ( !scripts\mp\utility\player::isreallyalive( var_3 ) )
            continue;

        var_3 _id_C4F0();
        var_3 _id_C533();
        self._id_84D6 = var_3;
        self _meth_834F( level._id_D0ED[self._id_D112]._id_D0EA );
        _id_D0DF( var_3 );
        self _meth_834F( level._id_D0ED[self._id_D112]._id_D0EB );
        var_3 thread _id_F869( self );
        var_3._id_F858 = var_3 scripts\mp\hud_util::_id_3F77( var_0, 100, 6 );
        var_3._id_F858 scripts\mp\hud_util::setpoint( "CENTER", "BOTTOM", 0, -70 );
        var_3._id_F858.alpha = 0.65;
        var_3._id_F858.bar.alpha = 0.65;
        var_4 = 0;

        for (;;)
        {
            if ( !scripts\mp\utility\player::isreallyalive( var_3 ) )
            {
                self._id_84D6 = undefined;
                var_3._id_F858 scripts\mp\hud_util::destroyelem();
                break;
            }

            if ( !var_3 _meth_81F3() )
            {
                self notify( "player_dismount" );
                self._id_84D6 = undefined;
                var_3._id_F858 scripts\mp\hud_util::destroyelem();
                var_3 _id_C701();
                var_3 _id_C708();
                self sethintstring( level._id_D0ED[self._id_D112]._id_020A );
                self _meth_834F( level._id_D0ED[self._id_D112]._id_D0EA );
                _id_D0DF( self._id_AC7C );
                self _meth_834F( level._id_D0ED[self._id_D112]._id_D0EB );
                break;
            }

            if ( self._id_763E >= level._id_D0ED[self._id_D112]._id_AD0E )
                var_5 = 1;
            else
                var_5 = self._id_763E / level._id_D0ED[self._id_D112]._id_AD0E;

            var_3._id_F858 scripts\mp\hud_util::_id_FC0E( var_5 );

            if ( scripts\engine\utility::string_starts_with( self._id_D112, "minigun_turret" ) )
                var_6 = "minigun_turret";

            if ( self._id_5E73 || self._id_AD0D )
            {
                self _meth_840F();
                var_3._id_F858.bar.color = var_2;
                var_4 = 0;
            }
            else if ( self._id_763E > level._id_D0ED[self._id_D112]._id_AD0E * 0.75 && scripts\engine\utility::string_starts_with( self._id_D112, "minigun_turret" ) )
            {
                var_3._id_F858.bar.color = var_1;

                if ( randomintrange( 0, 10 ) < 6 )
                    self _meth_8410();
                else
                    self _meth_840F();

                if ( !var_4 )
                {
                    var_4 = 1;
                    thread _id_B83B();
                }
            }
            else
            {
                var_3._id_F858.bar.color = var_0;
                self _meth_8410();
                var_4 = 0;
                self notify( "not_overheated" );
            }

            wait 0.05;
        }

        self _meth_8309( 0.0 );
    }
}

_id_D0CE()
{
    self endon( "death" );
    level endon( "game_ended" );
    self notify( "sentry_handleOwner" );
    self endon( "sentry_handleOwner" );
    childthread _id_D0E7( "disconnect" );
    childthread _id_D0E7( "joined_team" );
    childthread _id_D0E7( "joined_spectators" );
}

_id_D0E7( var_0 )
{
    self.owner waittill( var_0 );
    self notify( "death" );
}

_id_D0DF( var_0 )
{
    self.owner = var_0;
    self _meth_8376( self.owner );
    self _meth_839B( 1, self._id_D112 );

    if ( level.teambased )
    {
        self.team = self.owner.team;
        self _meth_839F( self.team );
    }

    thread _id_D0CE();
}

_id_D0D5( var_0 )
{
    self notify( "death" );
}

_id_D0E0( var_0 )
{
    if ( isdefined( self.owner ) )
    {
        var_1 = self.owner._id_B14E[self._id_D112].size;
        self.owner._id_B14E[self._id_D112][var_1] = self;

        if ( var_1 + 1 > 2 )
            self.owner._id_B14E[self._id_D112][0] notify( "death" );

        self.owner _id_15BB( 1 );
        self.owner scripts\common\utility::_id_1562( 1 );
        self.owner thread _id_523D();
        self.owner _meth_860C( 1 );
    }

    self setmodel( level._id_D0ED[self._id_D112]._id_9FBD );

    if ( self _meth_8157() == "manual" )
        self _meth_834F( level._id_D0ED[self._id_D112]._id_D0EA );

    if ( self._id_D112 == "sentry_shock" )
    {

    }

    thread _id_D0CB();
    thread _id_D0CC();
    self _meth_8375( undefined );
    self setcandamage( 1 );

    switch ( self._id_D112 )
    {
        case "minigun_turret":
        case "gl_turret":
        case "minigun_turret_4":
        case "gl_turret_4":
        case "gl_turret_3":
        case "gl_turret_2":
        case "gl_turret_1":
        case "minigun_turret_3":
        case "minigun_turret_2":
        case "minigun_turret_1":
            if ( var_0 )
            {
                self.angles = self._id_32A4.angles;

                if ( isalive( self._id_AC7C ) )
                    self._id_AC7C _id_0A70::_id_D5DC( "pickup_hint", level._id_D0ED[self._id_D112]._id_AD90, 3.0, undefined, undefined, undefined, undefined, undefined, 1 );

                self._id_AD9E = spawn( "trigger_radius", self.origin + ( 0, 0, 1 ), 0, 105, 64 );
                self._id_AD9E _meth_80DB();
                self._id_AD9E linkto( self );
                self._id_AC7C thread _id_F83D( self );
                thread _id_F83E();
            }

            break;
        case "manual_turret":
            self _meth_8309( 30.0 );
            break;
        default:
            break;
    }

    _id_D0D4();

    if ( isdefined( self._id_2659 ) )
    {
        self._id_2659 show();
        level notify( "update_bombsquad" );
    }

    self._id_32A4 _meth_80FC();
    self._id_32A4 = undefined;
    self._id_5BBA = undefined;

    if ( isdefined( self.owner ) )
    {
        self.owner._id_878D = 0;
        self.owner notify( "new_sentry", self );
    }

    _id_D0DB( var_0 );
    var_2 = spawnstruct();

    if ( isdefined( self._id_A270 ) )
        var_2._id_94F7 = self._id_A270;

    var_2._id_5318 = "carried";
    var_2._id_43D6 = ::_id_D0D5;
    thread scripts\mp\movers::_id_73E7( var_2 );
    self notify( "placed" );
}

_id_D0DC( var_0 )
{
    if ( isdefined( self._id_32A4 ) )
    {
        var_1 = self._id_32A4;
        var_1 _meth_80FC();
        var_1._id_878D = undefined;
        var_1._id_32A7 = undefined;
        var_1 _id_15BB( 1 );
        var_1 scripts\common\utility::_id_1562( 1 );
        var_1 thread _id_523D();
        var_1 _meth_860C( 1 );

        if ( isdefined( self._id_2659 ) )
            self._id_2659 delete();
    }

    if ( isdefined( var_0 ) && var_0 )
        scripts\mp\weapons::_id_553A();

    self delete();
}

_id_D0DD( var_0, var_1, var_2 )
{
    if ( isdefined( self._id_AC7C ) )
    {

    }
    else
    {

    }

    if ( self._id_D112 == "sentry_shock" )
        self setscriptablepartstate( "muzzle", "neutral", 0 );

    self setmodel( level._id_D0ED[self._id_D112]._id_9FC6 );
    self _meth_8375( var_0 );
    self setcandamage( 0 );
    _id_D0D3();
    var_0 _meth_860C( 0 );
    self._id_32A4 = var_0;
    var_0._id_878D = 1;
    self._id_B097 = var_1;
    thread _id_D0D7( var_0, var_2 );
    var_0 thread _id_FD21( self );
    thread _id_D0D8( var_0 );
    thread _id_D0D6( var_0 );
    thread _id_D0D9();
    _id_0764::_id_1510( 0 );
    self _meth_8309( -89.0 );
    _id_D0DE();

    if ( isdefined( self _meth_8151() ) )
        self unlink();

    self notify( "carried" );

    if ( isdefined( self._id_2659 ) )
        self._id_2659 hide();
}

_id_FD21( var_0 )
{
    self endon( "death_or_disconnect" );
    level endon( "game_ended" );
    var_0 endon( "placed" );
    var_0 endon( "death" );
    var_0._id_3126 = 1;
    var_1 = -1;

    for (;;)
    {
        var_2 = self _meth_8064( 1, 40 );
        var_0.origin = var_2["origin"];
        var_0.angles = var_2["angles"];
        var_3 = scripts\engine\utility::array_combine( level._id_F894, level._id_9E6C, level._id_EB4B._id_F670, level._id_9ECB );
        var_4 = var_0 _meth_813D( var_3 );
        var_0._id_3126 = self isonground() && var_2["result"] && abs( var_0.origin[2] - self.origin[2] ) < 30 && !_id_0A67::_id_8A90( self ) && var_4.size == 0;

        if ( isdefined( var_2["entity"] ) )
            var_0._id_A270 = var_2["entity"];
        else
            var_0._id_A270 = undefined;

        if ( var_0._id_3126 != var_1 )
        {
            if ( var_0._id_3126 )
            {
                var_0 setmodel( level._id_D0ED[var_0._id_D112]._id_9FC6 );
                var_0 _id_B156();
            }
            else
            {
                var_0 setmodel( level._id_D0ED[var_0._id_D112]._id_9FBC );
                var_0 _id_317D();
            }
        }

        var_1 = var_0._id_3126;
        wait 0.05;
    }
}

_id_D0D7( var_0, var_1 )
{
    self endon( "placed" );
    self endon( "death" );
    var_0 endon( "disconnect" );
    var_0 scripts\engine\utility::waittill_any_2( "death", "emp_applied" );

    if ( self._id_3126 && !istrue( var_1 ) )
        _id_D0E0( self._id_B097 );
    else
        _id_D0DC( 0 );
}

_id_D0D8( var_0 )
{
    self endon( "placed" );
    self endon( "death" );
    var_0 waittill( "disconnect" );
    self delete();
}

_id_D0D6( var_0 )
{
    self endon( "placed" );
    self endon( "death" );
    var_0 scripts\engine\utility::waittill_any_2( "joined_team", "joined_spectators" );
    self delete();
}

_id_D0D9( var_0 )
{
    self endon( "placed" );
    self endon( "death" );
    level waittill( "game_ended" );
    self delete();
}

_id_D0DB( var_0 )
{
    self _meth_834F( level._id_D0ED[self._id_D112]._id_D0EB );

    if ( var_0 )
    {
        self setcursorhint( "HINT_NOICON" );
        self sethintstring( level._id_D0ED[self._id_D112]._id_020A );
        self makeuseable();
    }

    foreach ( var_2 in level.players )
    {
        switch ( self._id_D112 )
        {
            case "minigun_turret":
            case "gl_turret":
            case "minigun_turret_4":
            case "gl_turret_4":
            case "gl_turret_3":
            case "gl_turret_2":
            case "gl_turret_1":
            case "minigun_turret_3":
            case "minigun_turret_2":
            case "minigun_turret_1":
                if ( var_0 )
                    self _meth_80E0( var_2 );

                break;
            default:
                _id_0A6F::_id_112C( self._id_D112, "Killstreak_Ground", self.owner, 0, 1, 70, "carried" );

                if ( var_2 == self.owner && var_0 )
                    self _meth_80E0( var_2 );
                else
                    self disableplayeruse( var_2 );

                break;
        }
    }

    var_4 = level._id_D0ED[self._id_D112]._id_EFA9;

    if ( self._id_DBDE )
    {
        level thread scripts\mp\hud_util::_id_EF8A( var_4, self.owner );
        self._id_DBDE = 0;
    }

    if ( self._id_D112 == "sam_turret" )
        thread _id_CB00();

    if ( self._id_D112 == "scramble_turret" )
        thread _id_CC50();

    if ( self._id_D112 == "sentry_shock" )
        thread _id_D0F0();

    _id_0764::_id_1510( 1 );
}

_id_D0DE()
{
    if ( self._id_D112 == "manual_turret" )
    {
        self sethintstring( "" );
        self makeunusable();
    }

    self _meth_834F( level._id_D0ED[self._id_D112]._id_D0EA );
    self makeunusable();
}

_id_D0D4()
{
    self solid();
}

_id_D0D3()
{
    self notsolid();
}

_id_8857( var_0 )
{
    if ( level.teambased && self.team == var_0.team )
        return 1;

    return 0;
}

_id_D0C1()
{
    self endon( "death" );
    level endon( "game_ended" );
    self._id_A09F = 0;
    self._id_763E = 0;
    self._id_AD0D = 0;
    thread _id_D0D0();

    for (;;)
    {
        scripts\engine\utility::_id_108C3( "turretstatechange", "cooled" );

        if ( self _meth_81C0() )
        {
            thread _id_D0C3();
            continue;
        }

        _id_D0E3();
        thread _id_D0C4();
    }
}

_id_D0E6()
{
    self endon( "death" );
    level endon( "game_ended" );
    var_0 = level._id_D0ED[self._id_D112]._id_F221;

    if ( isdefined( var_0 ) && var_0 == 0 )
        return;

    while ( var_0 )
    {
        wait 1.0;
        scripts\mp\hostmigration::_id_10956();

        if ( !isdefined( self._id_32A4 ) )
            var_0 = max( 0, var_0 - 1.0 );
    }

    if ( isdefined( self.owner ) )
    {
        if ( isdefined( level._id_D0ED[self._id_D112]._id_106B2 ) )
            self.owner _id_0A64::_id_B85B( level._id_D0ED[self._id_D112]._id_106B2, undefined, undefined, self.owner.origin );
    }

    self notify( "death" );
}

_id_D0E5()
{
    self endon( "death" );
}

_id_D0E4()
{
    thread _id_D0E5();

    while ( self._id_A09F < level._id_D0ED[self._id_D112]._id_E40D )
    {
        self._id_A09F = self._id_A09F + 0.1;
        wait 0.1;
    }
}

_id_D0E3()
{
    self._id_A09F = 0;
}

_id_D0D2()
{
    self endon( "death" );
    self endon( "stop_shooting" );
    level endon( "game_ended" );
    _id_D0E4();
    var_0 = weaponburstcount( level._id_D0ED[self._id_D112].weaponinfo );
    var_1 = level._id_D0ED[self._id_D112]._id_2D8C;
    var_2 = level._id_D0ED[self._id_D112]._id_2D8B;

    if ( isdefined( self._id_EB9E ) && self._id_EB9E )
    {
        var_0 = 0.05;
        var_3 = 50;
    }
    else
    {
        var_0 = 0.5 / ( self._id_953D.size + 1 );
        var_3 = var_1;
    }

    for ( var_4 = 0; var_4 < var_3; var_4++ )
    {
        var_5 = self _meth_8184( 1 );

        if ( !isdefined( var_5 ) )
            break;

        self _meth_83C0();
        wait( var_0 );
    }

    self notify( "doneFiring" );
    self _meth_8085();
}

_id_D0C3()
{
    self endon( "death" );
    self endon( "stop_shooting" );
    level endon( "game_ended" );
    _id_D0E4();
    var_0 = weaponburstcount( level._id_D0ED[self._id_D112].weaponinfo );
    var_1 = level._id_D0ED[self._id_D112]._id_2D8C;
    var_2 = level._id_D0ED[self._id_D112]._id_2D8B;
    var_3 = level._id_D0ED[self._id_D112]._id_AF5B;
    var_4 = level._id_D0ED[self._id_D112]._id_AF59;

    for (;;)
    {
        var_5 = randomintrange( var_1, var_2 + 1 );

        for ( var_6 = 0; var_6 < var_5 && !self._id_AD0D; var_6++ )
        {
            self _meth_83C0();
            self notify( "bullet_fired" );
            self._id_763E = self._id_763E + var_0;
            wait( var_0 );
        }

        wait( randomfloatrange( var_3, var_4 ) );
    }
}

_id_D0C4()
{
    self notify( "stop_shooting" );
}

_id_F869( var_0 )
{
    self endon( "death_or_disconnect" );
    level endon( "game_ended" );
    var_0 endon( "death" );
    var_0 endon( "player_dismount" );
    var_1 = weaponburstcount( level._id_D0ED[var_0._id_D112].weaponinfo );

    for (;;)
    {
        var_0 waittill( "turret_fire" );
        var_0._id_763E = var_0._id_763E + var_1;
        var_0._id_3CEC = var_1;
    }
}

_id_D0D0()
{
    self endon( "death" );
    var_0 = weaponburstcount( level._id_D0ED[self._id_D112].weaponinfo );
    var_1 = 0;
    var_2 = 0;
    var_3 = level._id_D0ED[self._id_D112]._id_AD0E;
    var_4 = level._id_D0ED[self._id_D112]._id_3CEB;

    for (;;)
    {
        if ( self._id_763E != var_1 )
            wait( var_0 );
        else
            self._id_763E = max( 0, self._id_763E - 0.05 );

        if ( self._id_763E > var_3 )
        {
            self._id_AD0D = 1;
            thread _id_B83B();

            switch ( self._id_D112 )
            {
                case "minigun_turret":
                case "minigun_turret_4":
                case "minigun_turret_3":
                case "minigun_turret_2":
                case "minigun_turret_1":
                    playfxontag( scripts\engine\utility::getfx( "sentry_smoke_mp" ), self, "tag_aim" );
                    break;
                default:
                    break;
            }

            while ( self._id_763E )
            {
                self._id_763E = max( 0, self._id_763E - var_4 );
                wait 0.1;
            }

            self._id_AD0D = 0;
            self notify( "not_overheated" );
        }

        var_1 = self._id_763E;
        wait 0.05;
    }
}

_id_F83F()
{
    self endon( "death" );
    var_0 = level._id_D0ED[self._id_D112]._id_AD0E;

    for (;;)
    {
        if ( self._id_763E > var_0 )
        {
            self._id_AD0D = 1;
            thread _id_B83B();

            switch ( self._id_D112 )
            {
                case "gl_turret":
                    playfxontag( scripts\engine\utility::getfx( "sentry_smoke_mp" ), self, "tag_aim" );
                    break;
                default:
                    break;
            }

            while ( self._id_763E )
                wait 0.1;

            self._id_AD0D = 0;
            self notify( "not_overheated" );
        }

        wait 0.05;
    }
}

_id_F823()
{
    self endon( "death" );

    for (;;)
    {
        if ( self._id_763E > 0 )
        {
            if ( self._id_3CEC <= 0 )
                self._id_763E = max( 0, self._id_763E - 0.05 );
            else
                self._id_3CEC = max( 0, self._id_3CEC - 0.05 );
        }

        wait 0.05;
    }
}

_id_B83B()
{
    self endon( "death" );
    self endon( "not_overheated" );
    level endon( "game_ended" );
    self notify( "playing_heat_fx" );
    self endon( "playing_heat_fx" );

    for (;;)
    {
        playfxontag( scripts\engine\utility::getfx( "sentry_overheat_mp" ), self, "tag_flash" );
        wait( level._id_D0ED[self._id_D112]._id_607E );
    }
}

_id_B8D3()
{
    self endon( "death" );
    self endon( "not_overheated" );
    level endon( "game_ended" );

    for (;;)
    {
        playfxontag( scripts\engine\utility::getfx( "sentry_smoke_mp" ), self, "tag_aim" );
        wait 0.4;
    }
}

_id_D0C2()
{
    self endon( "death" );
    level endon( "game_ended" );

    for (;;)
        wait 3.0;
}

_id_CB00()
{
    self endon( "carried" );
    self endon( "death" );
    level endon( "game_ended" );
    self._id_CB0B = undefined;
    self._id_CB0A = [];

    for (;;)
    {
        self._id_CB0B = _id_CAFF();
        _id_CB01();
        wait 0.05;
    }
}

_id_CAFF()
{
    var_0 = self gettagorigin( "tag_laser" );

    if ( !isdefined( self._id_CB0B ) )
    {
        if ( level.teambased )
        {
            var_1 = [];
            var_2 = scripts\mp\utility\teams::_id_69E2( self.team );

            foreach ( var_4 in var_2 )
            {
                foreach ( var_6 in level._id_F8F5[var_4] )
                    var_1[var_1.size] = var_6;
            }

            foreach ( var_6 in var_1 )
            {
                if ( isdefined( var_6._id_88EE ) && var_6._id_88EE )
                    continue;

                if ( _func_01FD( var_0, var_6.origin, 0, self ) )
                    return var_6;
            }

            foreach ( var_12 in level._id_957C )
            {
                if ( isdefined( var_12.team ) && var_12.team == self.team )
                    continue;

                if ( _func_01FD( var_0, var_12.origin, 0, self ) )
                    return var_12;
            }

            foreach ( var_15 in level._id_77BE )
            {
                if ( isdefined( var_15.team ) && var_15.team == self.team )
                    continue;

                if ( _func_01FD( var_0, var_15.origin, 0, self ) )
                    return var_15;
            }

            foreach ( var_6 in level._id_C327 )
            {
                if ( !isdefined( var_6 ) )
                    continue;

                if ( isdefined( var_6.team ) && var_6.team == self.team )
                    continue;

                if ( _func_01FD( var_0, var_6.origin, 0, self, var_6 ) )
                    return var_6;
            }
        }
        else
        {
            foreach ( var_6 in level._id_F8F5 )
            {
                if ( isdefined( var_6._id_88EE ) && var_6._id_88EE )
                    continue;

                if ( isdefined( var_6.owner ) && isdefined( self.owner ) && var_6.owner == self.owner )
                    continue;

                if ( _func_01FD( var_0, var_6.origin, 0, self ) )
                    return var_6;
            }

            foreach ( var_12 in level._id_957C )
            {
                if ( isdefined( var_12.owner ) && isdefined( self.owner ) && var_12.owner == self.owner )
                    continue;

                if ( _func_01FD( var_0, var_12.origin, 0, self ) )
                    return var_12;
            }

            foreach ( var_15 in level._id_77BE )
            {
                if ( isdefined( var_15.owner ) && isdefined( self.owner ) && var_15.owner == self.owner )
                    continue;

                if ( _func_01FD( var_0, var_15.origin, 0, self ) )
                    return var_15;
            }

            foreach ( var_6 in level._id_C327 )
            {
                if ( !isdefined( var_6 ) )
                    continue;

                if ( isdefined( var_6.owner ) && isdefined( self.owner ) && var_6.owner == self.owner )
                    continue;

                if ( _func_01FD( var_0, var_6.origin, 0, self, var_6 ) )
                    return var_6;
            }
        }

        self _meth_8085();
        return undefined;
    }
    else
    {
        if ( !_func_01FD( var_0, self._id_CB0B.origin, 0, self ) )
        {
            self _meth_8085();
            return undefined;
        }

        return self._id_CB0B;
    }
}

_id_CB01()
{
    if ( isdefined( self._id_CB0B ) )
    {
        if ( self._id_CB0B == level._id_72AB._id_B17B && !isdefined( level._id_7300 ) )
        {
            self._id_CB0B = undefined;
            self _meth_8085();
            return;
        }

        self _meth_8388( self._id_CB0B );
        self waittill( "turret_on_target" );

        if ( !isdefined( self._id_CB0B ) )
            return;

        if ( !self._id_8EDE )
        {
            thread _id_CB03();
            thread _id_CB02();
            thread _id_CB04();
            thread _id_CB05();
        }

        wait 2.0;

        if ( !isdefined( self._id_CB0B ) )
            return;

        if ( self._id_CB0B == level._id_72AB._id_B17B && !isdefined( level._id_7300 ) )
        {
            self._id_CB0B = undefined;
            self _meth_8085();
            return;
        }

        var_0 = [];
        var_0[0] = self gettagorigin( "tag_le_missile1" );
        var_0[1] = self gettagorigin( "tag_le_missile2" );
        var_0[2] = self gettagorigin( "tag_ri_missile1" );
        var_0[3] = self gettagorigin( "tag_ri_missile2" );
        var_1 = self._id_CB0A.size;

        for ( var_2 = 0; var_2 < 4; var_2++ )
        {
            if ( !isdefined( self._id_CB0B ) )
                return;

            if ( isdefined( self._id_32A4 ) )
                return;

            self _meth_83C0();
            var_3 = scripts\cp_mp\utility\weapon_utility::_magicbullet( makeweapon( "sam_projectile_mp" ), var_0[var_2], self._id_CB0B.origin, self.owner );
            var_3 missile_settargetent( self._id_CB0B );
            var_3 _meth_8230();
            var_3._id_CB0C = self;
            var_3._id_CB09 = var_1;
            self._id_CB0A[var_1][var_2] = var_3;
            level notify( "sam_missile_fired", self.owner, var_3, self._id_CB0B );

            if ( var_2 == 3 )
                break;

            wait 0.25;
        }

        level notify( "sam_fired", self.owner, self._id_CB0A[var_1], self._id_CB0B );
        wait 3.0;
    }
}

_id_CB05()
{
    level endon( "game_ended" );
    self endon( "death" );

    while ( isdefined( self._id_CB0B ) && isdefined( self _meth_8184( 1 ) ) && self _meth_8184( 1 ) == self._id_CB0B )
    {
        var_0 = self gettagorigin( "tag_laser" );

        if ( !_func_01FD( var_0, self._id_CB0B.origin, 0, self, self._id_CB0B ) )
        {
            self _meth_8085();
            self._id_CB0B = undefined;
            break;
        }

        wait 0.05;
    }
}

_id_CB03()
{
    self endon( "death" );
    self _meth_8202();
    self._id_8EDE = 1;

    while ( isdefined( self._id_CB0B ) && isdefined( self _meth_8184( 1 ) ) && self _meth_8184( 1 ) == self._id_CB0B )
        waitframe();

    self _meth_8201();
    self._id_8EDE = 0;
}

_id_CB02()
{
    self endon( "death" );
    self._id_CB0B endon( "death" );

    if ( !isdefined( self._id_CB0B._id_77CC ) )
        return;

    self._id_CB0B waittill( "crashing" );
    self _meth_8085();
    self._id_CB0B = undefined;
}

_id_CB04()
{
    self endon( "death" );
    self._id_CB0B endon( "death" );

    if ( !isdefined( self._id_CB0B.model ) )
        return;

    if ( self._id_CB0B.model == "vehicle_uav_static_mp" )
    {
        self._id_CB0B waittill( "leaving" );
        self _meth_8085();
        self._id_CB0B = undefined;
    }
}

_id_CC50()
{
    self endon( "carried" );
    self endon( "death" );
    level endon( "game_ended" );
    self._id_CC4F = undefined;

    for (;;)
    {
        self._id_CC4F = _id_CC3E();

        if ( isdefined( self._id_CC4F ) && isdefined( self._id_CC4F._id_CC44 ) && !self._id_CC4F._id_CC44 )
            _id_CC4E();

        wait 0.05;
    }
}

_id_CC3E()
{
    return _id_CAFF();
}

_id_CC4E()
{
    if ( isdefined( self._id_CC4F ) )
    {
        if ( self._id_CC4F == level._id_72AB._id_B17B && !isdefined( level._id_7300 ) )
        {
            self._id_CC4F = undefined;
            self _meth_8085();
            return;
        }

        self _meth_8388( self._id_CC4F );
        self waittill( "turret_on_target" );

        if ( !isdefined( self._id_CC4F ) )
            return;

        if ( !self._id_8EDE )
        {
            thread _id_CC40();
            thread _id_CC3F();
            thread _id_CC41();
            thread _id_CC42();
        }

        wait 2.0;

        if ( !isdefined( self._id_CC4F ) )
            return;

        if ( self._id_CC4F == level._id_72AB._id_B17B && !isdefined( level._id_7300 ) )
        {
            self._id_CC4F = undefined;
            self _meth_8085();
            return;
        }

        if ( !isdefined( self._id_CC4F ) )
            return;

        if ( isdefined( self._id_32A4 ) )
            return;

        self _meth_83C0();
        thread _id_D6AD();
        self notify( "death" );
    }
}

_id_D6AD()
{
    var_0 = self._id_CC4F;
    var_0 notify( "scramble_fired", self.owner );
    var_0 endon( "scramble_fired" );
    var_0 endon( "death" );
    var_0 thread _id_0A1F::_id_7733();
    var_0._id_CC44 = 1;
    var_0._id_CFE1 = self.owner;
    var_0 notify( "findNewTarget" );
    wait 30;

    if ( isdefined( var_0 ) )
    {
        var_0._id_CC44 = 0;
        var_0._id_CFE1 = undefined;
        var_0 thread _id_0A1F::_id_7733();
    }
}

_id_CC42()
{
    level endon( "game_ended" );
    self endon( "death" );

    while ( isdefined( self._id_CC4F ) && isdefined( self _meth_8184( 1 ) ) && self _meth_8184( 1 ) == self._id_CC4F )
    {
        var_0 = self gettagorigin( "tag_laser" );

        if ( !_func_01FD( var_0, self._id_CC4F.origin, 0, self, self._id_CC4F ) )
        {
            self _meth_8085();
            self._id_CC4F = undefined;
            break;
        }

        wait 0.05;
    }
}

_id_CC40()
{
    self endon( "death" );
    self _meth_8202();
    self._id_8EDE = 1;

    while ( isdefined( self._id_CC4F ) && isdefined( self _meth_8184( 1 ) ) && self _meth_8184( 1 ) == self._id_CC4F )
        wait 0.05;

    self _meth_8201();
    self._id_8EDE = 0;
}

_id_CC3F()
{
    self endon( "death" );
    self._id_CC4F endon( "death" );

    if ( !isdefined( self._id_CC4F._id_77CC ) )
        return;

    self._id_CC4F waittill( "crashing" );
    self _meth_8085();
    self._id_CC4F = undefined;
}

_id_CC41()
{
    self endon( "death" );
    self._id_CC4F endon( "death" );

    if ( !isdefined( self._id_CC4F.model ) )
        return;

    if ( self._id_CC4F.model == "vehicle_uav_static_mp" )
    {
        self._id_CC4F waittill( "leaving" );
        self _meth_8085();
        self._id_CC4F = undefined;
    }
}

_id_D0F0()
{
    self endon( "death" );
    self endon( "carried" );
    level endon( "game_ended" );
    thread _id_10BF6();
    self._id_138A = scripts\engine\utility::spawn_tag_origin( self.origin, self.angles );
    self._id_138A linkto( self, "tag_flash" );

    for (;;)
    {
        var_0 = scripts\engine\utility::_id_108A5( 1, "turret_on_target" );

        if ( var_0 == "timeout" )
            continue;

        self._id_D0EF = self _meth_8184( 1 );

        if ( isdefined( self._id_D0EF ) && scripts\mp\utility\player::isreallyalive( self._id_D0EF ) )
        {
            thread _id_D9E3( self._id_D0EF );
            self waittill( "done_firing" );
        }
    }
}

_id_CFA6()
{
    if ( isdefined( level._id_F8F5 ) )
    {
        if ( level.teambased )
        {
            var_0 = scripts\mp\utility\teams::_id_69E2( self.owner.team );

            foreach ( var_2 in var_0 )
            {
                foreach ( var_4 in level._id_F8F5[var_2] )
                {
                    if ( _id_EF0F( var_4 ) )
                        return var_4;
                }
            }
        }
        else
        {
            foreach ( var_4 in level._id_F8F5 )
            {
                if ( var_4.owner == self.owner )
                    continue;

                if ( _id_EF0F( var_4 ) )
                    return var_4;
            }
        }
    }

    if ( isdefined( level._id_77BE ) )
    {
        foreach ( var_10 in level._id_77BE )
        {
            if ( var_10._id_EA0F != "jackal" )
                continue;

            if ( level.teambased && var_10.team == self.owner.team )
                continue;

            if ( !level.teambased && var_10.owner == self.owner )
                continue;

            if ( _id_EF0F( var_10 ) )
                return var_10;
        }
    }
}

_id_EF0F( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    var_1 = 0;
    var_2 = self gettagorigin( "tag_flash" );
    var_3 = var_0.origin;
    var_4 = vectornormalize( var_3 - var_2 );
    var_5 = anglestoforward( self.angles );
    var_6 = [ self, self.owner, var_0 ];
    var_7 = physics_createcontents( [ "physicscontents_clipshot", "physicscontents_glass", "physicscontents_water", "physicscontents_vehicle", "physicscontents_item" ] );

    if ( scripts\engine\trace::ray_trace_passed( var_2, var_3, var_6, var_7 ) && vectordot( var_5, var_4 ) > 0.25 && distance2dsquared( var_2, var_3 ) > 10000 )
        var_1 = 1;

    return var_1;
}

_id_DA31( var_0, var_1 )
{
    self endon( "death" );
    self endon( "carried" );
    level endon( "game_ended" );
    self _meth_834F( "manual" );
    thread _id_D6BB( var_0, var_1 );
    self._id_D0EE = undefined;
    self waittill( "turret_on_target" );
    thread _id_9B73( var_0 );
    self playsound( "shock_sentry_charge_up" );
    playfxontag( scripts\engine\utility::getfx( "sentry_shock_charge" ), self, "tag_laser" );
    _id_D0E4();
    stopfxontag( scripts\engine\utility::getfx( "sentry_shock_charge" ), self, "tag_laser" );
    self notify( "start_firing" );
    self setscriptablepartstate( "coil", "active" );
    var_2 = 2;
    var_3 = 1;

    while ( isdefined( var_0 ) && _id_EF0F( var_0 ) )
    {
        var_4 = self gettagorigin( "tag_flash" );
        var_5 = scripts\cp_mp\utility\weapon_utility::_magicbullet( makeweapon( "sentry_shock_missile_mp" ), var_4, var_0.origin, self.owner );
        var_5 missile_settargetent( var_0 );
        var_5 _meth_8230();
        var_5.killcament = self.killcament;
        var_5.streakinfo = self.streakinfo;
        self setscriptablepartstate( "muzzle", "fire" + var_3, 0 );
        level notify( "laserGuidedMissiles_incoming", self.owner, var_5, var_0 );
        var_3++;

        if ( var_3 > 2 )
            var_3 = 1;

        wait( var_2 );
    }

    self setscriptablepartstate( "muzzle", "neutral", 0 );
    self notify( "sentry_lost_target" );
    var_1 unlink();
    var_1.origin = self gettagorigin( "tag_flash" );
    var_1 linkto( self, "tag_flash" );
    self _meth_834F( "sentry" );
    self _meth_8085();
    self setscriptablepartstate( "coil", "idle" );
    _id_D0E3();
    self notify( "done_firing" );
}

_id_D0CD()
{
    self endon( "death" );
    level endon( "game_ended" );

    for (;;)
    {
        self waittill( "trigger", var_0 );

        while ( var_0 _meth_81F3() )
        {
            if ( var_0 attackbuttonpressed() )
                self _meth_83C0();

            waitframe();
        }

        waitframe();
    }
}

_id_D0CA( var_0 )
{
    self endon( "death" );
    self.owner endon( "disconnect" );
    level endon( "game_ended" );
    self.owner notifyonplayercommand( "maunal_sentry_pickup", "+weapnext" );
    self._id_9A51 = spawn( "trigger_radius", self.origin, 0, 128, 128 );
    self._id_9A51 _meth_80DB();
    self._id_9A51 linkto( self, "tag_origin" );

    for (;;)
    {
        if ( isdefined( self._id_32A4 ) )
            waitframe();

        if ( !self.owner _meth_81EF( self._id_9A51 ) )
            waitframe();

        self.owner waittill( "maunal_sentry_pickup" );
        self _meth_834F( level._id_D0ED[self._id_D112]._id_D0EA );
        self.owner._id_B14E[self._id_D112] = scripts\engine\utility::array_remove( self.owner._id_B14E[self._id_D112], self );
        self.owner _id_D4AF( self, 0, var_0 );
    }
}

_id_D6BB( var_0, var_1 )
{
    self endon( "death" );
    self endon( "carried" );
    self endon( "sentry_lost_target" );
    var_0 endon( "death" );
    level endon( "game_ended" );

    for (;;)
    {
        var_2 = self gettagorigin( "tag_aim" );
        var_3 = var_0.origin;
        var_4 = vectornormalize( var_3 - var_2 );
        var_5 = var_2 + var_4 * 500;
        var_1 unlink();
        var_1.origin = var_5;
        var_1 linkto( self );
        self _meth_8388( var_1 );
        waitframe();
    }
}

_id_10BF6()
{
    self endon( "death" );

    for (;;)
    {
        self waittill( "carried" );

        if ( isdefined( self._id_D0EF ) )
            self._id_D0EF = undefined;

        if ( isdefined( self._id_D0EE ) )
            self._id_D0EE = undefined;

        self _meth_8085();
    }
}

_id_D9E3( var_0 )
{
    self endon( "death" );
    self endon( "carried" );

    if ( !isdefined( var_0 ) )
        return;

    thread _id_9B73( var_0 );
    self playsound( "shock_sentry_charge_up" );
    _id_D0E4();
    self notify( "start_firing" );
    level thread scripts\mp\battlechatter_mp::_id_CB63( var_0, "plr_killstreak_target" );
    var_1 = weaponburstcount( level._id_D0ED[self._id_D112].weaponinfo );

    while ( isdefined( var_0 ) && scripts\mp\utility\player::isreallyalive( var_0 ) && isdefined( self _meth_8184( 1 ) ) && self _meth_8184( 1 ) == var_0 && !scripts\mp\utility\outline::_id_ACDA( self gettagorigin( "tag_flash" ), var_0 geteye() ) )
    {
        self _meth_83C0();
        wait( var_1 );
    }

    self._id_D0EF = undefined;
    self _meth_8085();
    _id_D0E3();
    self notify( "done_firing" );
}

_id_9F54( var_0 )
{
    self endon( "death" );
    self endon( "carried" );
    var_1 = 3;
    var_2 = 1;

    while ( var_1 > 0 )
    {
        if ( !isdefined( var_0 ) )
            return;

        if ( !isdefined( self.owner ) )
            return;

        var_3 = scripts\cp_mp\utility\weapon_utility::_magicbullet( makeweapon( "sentry_shock_grenade_mp" ), self gettagorigin( "tag_flash" ), var_0.origin, self.owner );
        var_3 missile_settargetent( var_0, _id_6DA3( var_0 ) );
        var_3.killcament = self.killcament;
        var_3.streakinfo = self.streakinfo;
        self setscriptablepartstate( "muzzle", "fire" + var_2, 0 );
        var_2++;

        if ( var_2 > 2 )
            var_2 = 1;

        var_3 thread _id_10C10( var_0 );
        var_1--;
        wait 0.2;
    }
}

_id_6DA3( var_0 )
{
    var_1 = ( 0, 0, 40 );
    var_2 = var_0 getstance();

    switch ( var_2 )
    {
        case "stand":
            var_1 = ( 0, 0, 40 );
            break;
        case "crouch":
            var_1 = ( 0, 0, 20 );
            break;
        case "prone":
            var_1 = ( 0, 0, 5 );
            break;
    }

    return var_1;
}

_id_10C10( var_0 )
{
    self endon( "death" );
    var_0 endon( "disconnect" );

    for (;;)
    {
        if ( !scripts\mp\utility\player::isreallyalive( var_0 ) )
        {
            self missile_settargetent( var_0 _meth_8122() );
            break;
        }

        waitframe();
    }
}

_id_9B73( var_0 )
{
    self endon( "death" );
    self _meth_8202();
    self._id_8EDE = 1;
    scripts\engine\utility::waittill_any_2( "done_firing", "carried" );
    self _meth_8201();
    self._id_8EDE = 0;
}

_id_10BF7( var_0 )
{
    self endon( "death" );
    self endon( "done_firing" );
    var_1 = undefined;

    for (;;)
    {
        self waittill( "victim_damaged", var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11 );

        if ( var_2 == var_0 )
        {
            var_12 = 100;
            var_13 = scripts\mp\utility\player::_id_6C41( var_8, var_12, var_2.team, self.owner );
            playfx( scripts\engine\utility::getfx( "sentry_shock_explosion" ), var_8 );

            if ( var_13.size > 0 )
            {
                foreach ( var_15 in var_13 )
                {
                    if ( var_15.player != var_2 )
                    {
                        var_15.player dodamage( 5, var_8, self.owner, self, var_6, var_7 );
                        var_16 = undefined;
                        var_17 = undefined;

                        if ( var_15._id_10417.size > 1 )
                        {
                            var_17 = randomint( var_15._id_10417.size );
                            var_16 = var_15._id_10417[var_17];
                        }
                        else
                            var_16 = var_15._id_10417[0];

                        _func_030E( scripts\engine\utility::getfx( "sentry_shock_arc" ), var_8, vectortoangles( var_16 - var_8 ), var_16 );
                    }
                }
            }
        }
    }
}

_id_15BB( var_0 )
{
    if ( var_0 )
    {
        scripts\common\utility::_id_1565( 1 );
        thread scripts\mp\supers::_id_FB26();
    }
    else
    {
        thread scripts\mp\supers::_id_15B1();
        scripts\common\utility::_id_1565( 0 );
    }
}

_id_B156()
{
    var_0 = self._id_D112;

    if ( var_0 == "super_trophy" )
    {
        self.owner _meth_80FD( &"LUA_MENU_MP/PLACE_SUPER_TROPHY" );
        return;
    }
    else
        self.owner _meth_80FD( &"SENTRY/PLACE" );
}

_id_317D()
{
    var_0 = self._id_D112;

    if ( var_0 == "super_trophy" )
    {
        self.owner _meth_80FD( &"LUA_MENU_MP/CANNOT_PLACE_SUPER_TROPHY" );
        return;
    }
    else
        self.owner _meth_80FD( &"SENTRY/CANNOT_PLACE" );
}
