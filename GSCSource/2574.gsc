// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_3560()
{
    var_0 = spawnstruct();
    var_0._id_2550 = [];
    var_0._id_2552 = [];
    var_0._id_254D = [];
    var_0._id_2550[0] = "chilledInit";
    var_0._id_2552[0] = "activeWeak";
    var_0._id_254D[0] = 2;
    var_0._id_2550[1] = "chilledInit";
    var_0._id_2552[1] = "active";
    var_0._id_254D[1] = 2;
    level._id_355D = var_0;
}

_id_355B( var_0, var_1 )
{
    if ( !isdefined( self._id_355D ) )
        self._id_355D = spawnstruct();

    var_2 = self._id_355D;
    thread _id_355C();

    if ( !isdefined( var_2._id_0026 ) )
    {
        self notify( "chill" );
        var_2._id_0026 = 1;
        var_2._id_E3F6 = 0;
        var_2._id_F263 = [];
        var_1 = var_1 * 1000;
        var_3 = gettime();
        var_4 = var_3 + var_1;
        var_2._id_F263[var_0] = ( var_3, var_4, var_1 );
        _id_355E();
        self setscriptablepartstate( "chilled", "active", 0 );
        thread _id_3563();
    }
    else
    {
        if ( !isdefined( var_2._id_F263[var_0] ) )
            var_2._id_0026++;

        var_1 = var_1 * 1000;
        var_3 = gettime();
        var_4 = var_3 + var_1;
        var_2._id_F263[var_0] = ( var_3, var_4, var_1 );
    }
}

_id_3564( var_0 )
{
    var_1 = self._id_355D;
    var_1._id_0026--;
    var_1._id_F263[var_0] = undefined;

    if ( var_1._id_0026 == 0 )
    {
        self notify( "chillEnd" );
        _id_355F();
        self setscriptablepartstate( "chilled", "neutral", 0 );
        self._id_355D = undefined;
        scripts\mp\weapons::_id_FCCA();
    }
}

_id_8793()
{
    var_0 = self._id_355D;
    return isdefined( var_0 ) && isdefined( var_0._id_0026 );
}

_id_3561()
{
    self notify( "chillReset" );
    self._id_355D = undefined;
}

_id_3562()
{
    self setscriptablepartstate( "chilled", "neutral", 0 );

    foreach ( var_1 in level._id_355D._id_2550 )
        self setscriptablepartstate( var_1, "neutral", 0 );
}

_id_355E()
{
    scripts\common\utility::_id_1559( 0 );
    scripts\common\utility::_id_1557( 0 );
    scripts\common\utility::_id_1564( 0 );
    scripts\common\utility::_id_152B( 0 );
}

_id_355F()
{
    scripts\common\utility::_id_1559( 1 );
    scripts\common\utility::_id_1557( 1 );
    scripts\common\utility::_id_1564( 1 );
    scripts\common\utility::_id_152B( 1 );
}

_id_355C()
{
    self endon( "death_or_disconnect" );
    var_0 = self._id_355D;
    var_1 = level._id_355D;
    var_2 = var_0._id_254F;
    var_3 = scripts\engine\utility::ter_op( scripts\mp\utility\perk::_hasperk( "specialty_stun_resistance" ), 0, 1 );
    var_4 = var_1._id_2550[var_3];
    var_5 = var_1._id_2552[var_3];
    var_6 = var_1._id_254D[var_3];

    if ( !isdefined( var_2 ) )
    {
        self setscriptablepartstate( var_4, var_5, 0 );
        var_0._id_254F = var_3;
    }
    else
    {
        if ( var_2 > var_3 )
            return;

        var_7 = var_1._id_2550[var_2];

        if ( var_7 != var_4 )
            self setscriptablepartstate( var_7, "neutral", 0 );

        self setscriptablepartstate( var_4, var_5, 0 );
        var_0._id_254F = var_3;
    }

    self notify( "chillBlind" );
    self endon( "chillBlind" );
    scripts\engine\utility::_id_108A5( var_6, "chillEnd" );
    self setscriptablepartstate( var_4, "neutral", 0 );
    var_0._id_254F = undefined;
}

_id_3563()
{
    self endon( "disconnect" );
    self endon( "chillReset" );
    self endon( "chillEnd" );
    var_0 = self._id_355D;

    for (;;)
    {
        var_1 = gettime();
        var_2 = 0;

        foreach ( var_10, var_4 in var_0._id_F263 )
        {
            var_5 = var_4[0];
            var_6 = var_4[1];
            var_7 = var_4[2];

            if ( var_1 < var_6 )
            {
                var_8 = var_1 - var_5;
                var_9 = 1 - var_8 / var_7;

                if ( var_9 > var_2 )
                    var_2 = var_9;

                continue;
            }

            thread _id_3564( var_10 );
        }

        var_0._id_E3F6 = var_2 * -0.55;
        scripts\mp\weapons::_id_FCCA();
        wait 0.1;
    }
}
