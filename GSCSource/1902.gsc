// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_8237()
{
    setdvarifuninitialized( "#x3fdf714eff16abd6", 256 );
    setdvarifuninitialized( "#x34c7da61b90628f09", 0 );
    setdvarifuninitialized( "#x3fb314f9b585fd694", ( 0, 0, 0 ) );
    setdvarifuninitialized( "#x32747a2ada32771c2", 2 );
    setdvarifuninitialized( "#x3202364a10608c5df", 1 );
    setdvarifuninitialized( "#x3265239c3b8a5b892", 1 );
    setdvarifuninitialized( "#x32b4dbc18f1546f58", 0.5 );
    setdvarifuninitialized( "#x3ce8a6a13bbfdb83e", 0.0 );
    setdvarifuninitialized( "#x3563a74541591ce0e", 0.0 );
    setdvarifuninitialized( "#x3def0bde5d28a81e0", 5000.0 );
    setdvarifuninitialized( "#x3dff2d29c2c5a7836", 10.0 );
    setdvarifuninitialized( "#x3316ba788afdf7094", 2.0 );
    setdvarifuninitialized( "#x33127701e0159c6eb", 10000.0 );
    setdvarifuninitialized( "#x34af3852b26f011e5", 7500.0 );
    setdvarifuninitialized( "#x3b90cde8ff1cd519d", -2.0 );
    level._id_AE12 = getdvarint( "scr_parachute_autodeploy_cut", 1 );
    level._id_AE13 = getdvarint( "scr_parachute_cut", 1 );
    level._id_AE1B = 1;
    level._id_0F2A = [];

    if ( !isdefined( level._id_4D8E ) )
        level._id_4D8E = 1;

    if ( !isdefined( level._id_5F31 ) )
        level._id_5F31 = ::_id_5F32;

    if ( !isdefined( level._id_AE1D ) )
        level._id_AE1D = ::_id_AE1E;

    if ( !isdefined( level._id_AE16 ) )
        level._id_AE16 = ::_id_AE17;

    if ( !isdefined( level._id_AE28 ) )
        level._id_AE28 = ::_id_9154;

    if ( !isdefined( level._id_AE25 ) )
        level._id_AE25 = ::_id_A5AA;

    if ( !isdefined( level._id_AE23 ) )
        level._id_AE23 = ::_id_AE24;

    level._id_DDD3 = spawnstruct();
    level._id_DDD3._id_EA19 = getdvarint( "#x3265239c3b8a5b892", 1 );
    level._id_DDD3._id_10FDD = getdvarfloat( "#x3dff2d29c2c5a7836", 0.0 );
    level._id_DDD3._id_10FDE = getdvarfloat( "#x3316ba788afdf7094", 0.0 );
    level._id_DDD3._id_10FDF = getdvarfloat( "#x33127701e0159c6eb", 0.0 );
    level._id_DDD3._id_10FDC = getdvarfloat( "#x34af3852b26f011e5", 0.0 );
    level._id_DDD3._id_11006 = getdvarfloat( "#x32b4dbc18f1546f58", 0.0 );
    level._id_DDD3._id_11010 = getdvarfloat( "#x3ce8a6a13bbfdb83e", 0.0 );
    level._id_DDD3._id_110F1 = getdvarfloat( "#x3563a74541591ce0e", 0.0 );
    level._id_DDD3._id_1100B = getdvarfloat( "#x3def0bde5d28a81e0", 0.0 );
    level._id_DDD3._id_594B = getdvarfloat( "#x3b90cde8ff1cd519d", 0.0 );
}

_id_E6AA( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    if ( getdvarint( "#x3202364a10608c5df", 0 ) )
    {
        thread _id_5F30( var_0, var_1, var_2, var_3, var_4, var_5 );
        return;
    }

    self endon( "death_or_disconnect" );
    thread _id_AE1C();
    self _meth_86B2();

    if ( !isdefined( var_5 ) )
        var_5 = 1;

    if ( !istrue( level._id_AE1B ) )
        _id_8237();

    if ( !isdefined( level._id_4D8E ) )
        level._id_4D8E = 1;

    if ( !isdefined( level._id_5F31 ) )
        level._id_5F31 = ::_id_5F32;

    if ( !isdefined( level._id_AE1D ) )
        level._id_AE1D = ::_id_AE1E;

    if ( !isdefined( level._id_AE16 ) )
        level._id_AE16 = ::_id_AE17;

    if ( !isdefined( level._id_AE28 ) )
        level._id_AE28 = ::_id_9154;

    if ( !isdefined( level._id_AE25 ) )
        level._id_AE25 = ::_id_A5AA;

    if ( !isdefined( var_0 ) )
        var_0 = 4.0;

    if ( var_5 )
        self [[ level._id_AE28 ]]();

    self [[ level._id_5F31 ]]();

    if ( _id_8956() )
        self setclientomnvar( "ui_br_altimeter_state", 1 );

    if ( !isdefined( var_2 ) )
        self notifyonplayercommand( "open_parachute", "+gostand" );

    self cameradefault( 1 );

    if ( isdefined( var_3 ) )
        self setvelocity( var_3 );

    self _meth_86AE();

    if ( getdvarint( "#x32747a2ada32771c2", 1 ) != 2 )
        self _meth_86B3( 1 );

    if ( level.gametype == "br" && ( !istrue( var_4 ) || getdvar( "scr_br_gametype", "" ) == "dmz" ) && getdvarint( "scr_infil_parachute_vfx", 1 ) )
        thread _id_7E57( getdvarint( "scr_bmo_parachuteTouchdownVFX", 1 ) == 1 && getdvar( "scr_br_gametype", "" ) == "dmz" );

    if ( !istrue( var_1 ) )
        wait( var_0 );

    thread _id_BE0C( var_2, var_1 );
}

_id_7E57( var_0 )
{
    var_1 = self;
    level endon( "game_ended" );
    var_1 endon( "disconnect" );
    var_1 = self;
    wait 1.0;
    var_1 setscriptablepartstate( "skydiveVfx", "enabled", 0 );
    var_1 _meth_86B8( 1 );
    wait 2.0;

    while ( isalive( var_1 ) && !var_1 _meth_86B7() )
        wait 0.25;

    if ( var_0 )
    {
        while ( isalive( var_1 ) && !var_1 isonground() )
            wait 0.25;
    }

    var_1 setscriptablepartstate( "skydiveVfx", "default", 0 );
    var_1 _meth_86B8( 0 );
}

_id_C869( var_0, var_1 )
{
    var_2 = undefined;

    if ( var_0 )
    {
        self._id_C87A = var_1;
        var_2 = "tag_weapon_right";
    }
    else
    {
        self._id_C87B = var_1;
        var_2 = "tag_shield_back";
    }

    self _meth_8020( var_1, var_2 );
    self._id_7589 = _id_C871();
}

_id_C86E()
{
    return "weapon_wm_riotshield";
}

_id_C871()
{
    var_0 = 0;
    var_1 = self getweaponslistprimaries();

    foreach ( var_3 in var_1 )
    {
        if ( _id_89F0( var_3 ) )
        {
            var_0 = 1;
            break;
        }
    }

    return var_0;
}

_id_89F0( var_0 )
{
    if ( isweapon( var_0 ) && isnullweapon( var_0 ) )
        return 0;

    if ( _func_0120( var_0 ) && var_0 == "none" )
        return 0;

    return _func_0279( var_0 ) == "riotshield";
}

_id_8956()
{
    return isdefined( level.gametype ) && ( level.gametype == "br" || level.gametype == "arm" || level.gametype == "war" || level.gametype == "cp_survival" || level.gametype == "trial" );
}

_id_691E()
{
    if ( isdefined( level._id_2A4D ) && isdefined( level._id_2A4D._id_2DEF ) )
        return level._id_2A4D._id_2DEF;

    return 24000;
}

_id_691D()
{
    if ( isdefined( level._id_2E01 ) )
        return level._id_2E01;

    return 24000;
}

_id_6920()
{
    if ( isdefined( level._id_2A4D ) && isdefined( level._id_2A4D._id_2DF5 ) )
        return level._id_2A4D._id_2DF5;

    return 650;
}

_id_E82B( var_0 )
{
    var_1 = spawn( "script_model", self.origin );
    var_1.angles = self.angles;
    var_1 setmodel( "viewhands_base_iw8" );
    var_1 hide();
    self playerlinktodelta( var_1, "tag_player" );
    _id_E82C( var_1, var_0 );
    var_1 delete();
}

_id_E82C( var_0, var_1 )
{
    level endon( "game_ended" );
    self endon( "death_or_disconnect" );
    self endon( "freefall_complete" );
    self endon( "parachute_complete" );
    self notify( "steerFalling()" );
    self endon( "steerFalling()" );
    var_2 = 13.8;
    var_3 = 0.0001;
    var_4 = -1350.0;
    var_5 = 1400.0;
    var_6 = 1600.0;
    var_7 = -100.0;

    if ( level.gametype == "arm" )
    {
        var_4 = -1750.0;
        var_5 = 400.0;
        var_6 = 400.0;
    }

    if ( isdefined( var_1 ) )
    {
        var_5 = var_5 * var_1;
        var_6 = var_6 * var_1;
    }

    var_8 = level._id_5F1B * var_3;
    var_0._id_10397 = ( 0, 0, var_7 );
    waitframe();
    var_9 = getdvarint( "#x3f7e9b59e29bb9d7e" );
    var_10 = ( 0, 0, 0 );

    for (;;)
    {
        var_11 = self getnormalizedmovement();
        var_12 = var_11[0];
        var_13 = var_11[1];
        var_14 = self getplayerangles( 1 );
        var_15 = anglestoforward( var_14 ) * var_12;
        var_16 = anglestoright( var_14 ) * var_13;
        var_17 = var_16 + var_15;
        var_18 = vectornormalize( var_17 ) * var_6;
        var_10 = var_10 + vectornormalize( var_18 - var_10 ) * level._id_5F1B * var_5;
        var_10 = var_10 - var_10 * length( var_10 ) * var_8;
        var_19 = var_0._id_10397[2] - var_2 * 39.37 * level._id_5F1B;
        var_19 = max( var_4, var_19 );
        var_20 = ( 0, 0, var_19 );
        var_0._id_10397 = var_20 + var_10;
        var_0.origin = var_0.origin + level._id_5F1B * var_0._id_10397;
        var_21 = _func_0213( var_0._id_10397[0] * var_0._id_10397[0] + var_0._id_10397[1] * var_0._id_10397[1] );
        var_22 = _id_103A1( var_0._id_10397[2] * -1 );
        var_23 = _id_103A1( var_21 );
        var_24 = min( 1, ( self.origin[2] - _id_6920() ) / ( _id_691E() - _id_6920() ) );

        if ( _id_8956() )
        {
            self setclientomnvar( "ui_br_altimeter_height", var_24 );
            self setclientomnvar( "ui_br_altimeter_vertical_speed", int( var_22 ) );
            self setclientomnvar( "ui_br_altimeter_horizontal_speed", int( var_23 ) );
        }

        waitframe();
    }
}

_id_103A1( var_0 )
{
    var_1 = var_0 * 0.05682;
    return var_1;
}

_id_E831( var_0 )
{
    var_1 = spawn( "script_model", self.origin );
    var_1.angles = self.angles;
    var_1 setmodel( "viewhands_base_iw8" );
    var_1 hide();
    self playerlinktodelta( var_1, "tag_player" );
    _id_E832( var_1, var_0 );
    var_1 delete();
}

_id_E832( var_0, var_1 )
{
    level endon( "game_ended" );
    self endon( "death_or_disconnect" );
    self endon( "freefall_complete" );
    self endon( "parachute_landed" );
    self notify( "steerFalling()" );
    self endon( "steerFalling()" );
    var_2 = 100.0;
    var_3 = -200.0;
    var_4 = 600.0;
    var_5 = 240.0;
    var_6 = 120.0;
    var_7 = 60.0;
    var_8 = 48;
    var_9 = 35.0;
    var_10 = 700.0;
    var_11 = 100.0;
    var_12 = 600.0;
    var_13 = 300.0;
    var_14 = 100.0;
    var_15 = -150.0;

    if ( level.gametype == "arm" )
        var_15 = -200.0;

    if ( isdefined( var_1 ) )
    {
        var_2 = var_2 * var_1;
        var_3 = var_3 * var_1;
        var_4 = var_4 * var_1;
        var_5 = var_5 * var_1;
        var_6 = var_6 * var_1;
        var_7 = var_7 * var_1;
        var_10 = var_10 * var_1;
        var_12 = var_12 * var_1;
        var_13 = var_13 * var_1;
        var_14 = var_14 * var_1;
    }

    var_16 = 100.0;
    var_17 = 0;
    var_18 = 0;
    var_0._id_10397 = ( 0, 0, 0 );

    for (;;)
    {
        var_19 = self getnormalizedmovement();
        var_20 = var_19[0];
        var_21 = var_19[1];
        var_22 = self getplayerangles( 1 );
        var_23 = anglestoforward( var_22 );
        var_24 = anglestoright( var_22 );
        var_25 = scripts\engine\utility::ter_op( var_20 > 0, var_5, var_6 );
        var_16 = var_16 + var_20 * var_25 * level._id_5F1B;
        var_16 = var_16 + var_7 * level._id_5F1B * scripts\engine\utility::_id_DD3C( var_2 - var_16 );
        var_16 = clamp( var_16, var_3, var_4 );
        var_26 = -1 * var_20 * var_9;
        var_17 = var_17 + scripts\engine\utility::_id_DD3C( var_26 - var_17 ) * var_8 * level._id_5F1B;
        var_27 = _func_01C1( var_24, var_23, var_17 );
        var_28 = var_16 * var_27;
        var_29 = var_23 * var_14 + ( 0, 0, var_15 );
        var_18 = var_18 + var_12 * level._id_5F1B * var_21;
        var_18 = var_18 - var_13 * level._id_5F1B * scripts\engine\utility::_id_DD3C( var_18 );
        var_18 = clamp( var_18, -1 * var_10, var_10 );
        var_30 = var_18 * var_24;
        var_31 = var_11 * abs( var_21 );
        var_30 = var_30 + ( 0, 0, -1 * var_31 );
        var_0._id_10397 = var_28 + var_30 + var_29;
        var_0.origin = var_0.origin + var_0._id_10397 * level._id_5F1B;
        var_32 = _func_0213( var_0._id_10397[0] * var_0._id_10397[0] + var_0._id_10397[1] * var_0._id_10397[1] );
        var_33 = max( 0, _id_103A1( var_0._id_10397[2] * -1 ) );
        var_34 = max( 0, _id_103A1( var_32 ) );
        var_35 = min( 1, ( self.origin[2] - _id_6920() ) / ( _id_691E() - _id_6920() ) );

        if ( _id_8956() )
        {
            self setclientomnvar( "ui_br_altimeter_height", var_35 );
            self setclientomnvar( "ui_br_altimeter_vertical_speed", int( var_33 ) );
            self setclientomnvar( "ui_br_altimeter_horizontal_speed", int( var_34 ) );
        }

        waitframe();
    }
}

_id_8A21()
{
    return isdefined( self._id_59EF ) && ( self._id_59EF == 5 || self._id_59EF == 6 );
}

_id_523C( var_0 )
{
    self endon( "death_or_disconnect" );

    if ( isdefined( var_0 ) && var_0 > 0 )
    {
        self _meth_86B0( 0 );
        self _meth_86B1( 0 );
        wait( var_0 );
    }

    if ( isdefined( self ) )
    {
        if ( _id_8A21() )
            return;

        self _meth_86B0( 1 );
        self _meth_86B1( 1 );
    }
}

_id_BE0C( var_0, var_1, var_2 )
{
    self endon( "death_or_disconnect" );
    thread _id_523C( 3 );
    self waittill( "skydive_deployparachute" );
    self _meth_86B0( 0 );
    self notify( "freefall_complete" );

    if ( _id_8956() )
        self setclientomnvar( "ui_br_altimeter_state", 2 );

    if ( !istrue( level._id_4D8E ) )
        self [[ level._id_AE1D ]]();

    thread _id_E705();
}

_id_AE18( var_0 )
{
    self endon( "death_or_disconnect" );
    self endon( "parachute_complete" );
    var_0 endon( "death" );
    var_0 setcandamage( 1 );
    var_1 = undefined;
    var_2 = undefined;
    var_3 = undefined;
    var_4 = undefined;
    var_5 = undefined;
    var_6 = undefined;
    var_7 = undefined;
    var_8 = undefined;
    var_9 = undefined;
    var_10 = undefined;
    var_11 = undefined;
    var_12 = undefined;
    var_13 = undefined;
    var_0._id_DA68 = 0;

    for (;;)
    {
        var_0 waittill( "damage", var_1, var_2, var_3, var_14, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13 );

        if ( isdefined( var_4 ) )
        {
            if ( scripts\engine\utility::_id_877A( var_4 ) )
                var_0._id_DA68++;
        }
    }
}

_id_E705()
{
    self endon( "death_or_disconnect" );

    if ( getdvarint( "#x32747a2ada32771c2", 1 ) == 1 )
        self _meth_86B3( 0 );

    self waittill( "skydive_end" );
    self._id_7D0B = gettime() + 5000;

    if ( istrue( self._id_46C1 ) )
        self._id_46C1 = 0;

    waitframe();
    self [[ level._id_AE25 ]]();

    if ( istrue( level._id_4D8E ) )
        self [[ level._id_AE16 ]]();

    self notify( "parachute_landed" );
    self _meth_86B3( 0 );
    self notify( "parachute_complete" );
    self cameradefault( 0 );

    if ( _id_8956() )
        self setclientomnvar( "ui_br_altimeter_state", 0 );

    if ( _id_8956() )
    {
        if ( isdefined( level._id_AADA ) )
            self [[ level._id_AADA ]]( self );
    }
}

_id_AE1C()
{
    self endon( "parachute_complete" );
    self waittill( "death" );

    if ( _id_8956() )
        self setclientomnvar( "ui_br_altimeter_state", 0 );
}

_id_5F32()
{
    self disableusability();
}

_id_AE1E()
{

}

_id_AE17()
{
    self enableusability();

    if ( !scripts\common\utility::_id_8601() && !istrue( self._id_88C5 ) )
        scripts\common\utility::_id_1527( 1 );

    if ( isdefined( level._id_9FDE ) )
        self [[ level._id_9FDE ]]();

    self._id_8C8E = undefined;
}

_id_68C9()
{
    return 0.25;
}

_id_E32E()
{
    self _meth_8695( "camera_custom_orbit_0_noremote" );
}

_id_C4EA()
{
    self _meth_8694();
}

_id_9154()
{

}

_id_A5AA()
{

}

_id_EDDA()
{
    if ( isdefined( self.primaryweaponobj ) )
    {
        self._id_BCD2 = self getweaponammoclip( self.primaryweaponobj );
        self._id_BCD4 = self getweaponammostock( self.primaryweaponobj );
    }

    if ( isdefined( self.secondaryweaponobj ) )
    {
        self._id_CFDD = self getweaponammoclip( self.secondaryweaponobj );
        self._id_CFDF = self getweaponammostock( self.secondaryweaponobj );
    }

    var_0 = makeweapon( "iw8_fists_mp" );
    var_1 = makeweapon( "none" );
    self._id_10DA7 = self.primaryweapons;

    for ( var_2 = 0; var_2 < self._id_10DA7.size; var_2++ )
    {
        var_3 = self._id_10DA7[var_2];

        if ( isdefined( var_3 ) && !issameweapon( var_0, var_3 ) && !issameweapon( var_1, var_3 ) )
            self takeweapon( var_3 );
    }

    self _meth_8663();

    if ( !self hasweapon( var_0 ) )
        scripts\cp_mp\utility\inventory_utility::_giveweapon( var_0, undefined, undefined, 1 );

    scripts\cp_mp\utility\inventory_utility::_id_4D21( var_0, 1 );
}

_id_C709()
{
    self takeweapon( self._id_10DA7[0] );
    self _meth_8663();

    if ( isdefined( self.primaryweaponobj ) )
    {
        scripts\cp_mp\utility\inventory_utility::_giveweapon( self.primaryweaponobj, undefined, undefined, 0 );

        if ( isdefined( self._id_BCD2 ) )
        {
            self setweaponammoclip( self.primaryweaponobj, self._id_BCD2 );
            self setweaponammostock( self.primaryweaponobj, self._id_BCD4 );
        }
    }

    if ( isdefined( self.secondaryweaponobj ) )
    {
        scripts\cp_mp\utility\inventory_utility::_giveweapon( self.secondaryweaponobj, undefined, undefined, 1 );

        if ( isdefined( self._id_BCD2 ) )
        {
            self setweaponammoclip( self.secondaryweaponobj, self._id_CFDD );
            self setweaponammostock( self.secondaryweaponobj, self._id_CFDF );
        }
    }

    self._id_10DA7 = self getweaponslistprimaries();

    if ( isdefined( self._id_10DA7[0] ) )
        scripts\cp_mp\utility\inventory_utility::_id_4D21( self._id_10DA7[0] );

    if ( isdefined( self._id_10DA7 ) && isdefined( self._id_10DA7[0] ) )
        self.primaryweaponobj = self._id_10DA7[0];

    if ( isdefined( self._id_10DA7 ) && isdefined( self._id_10DA7[1] ) )
        self.secondaryweaponobj = self._id_10DA7[1];
}

_id_B80B()
{
    level endon( "game_ended" );
    self endon( "disconnect" );

    if ( scripts\common\utility::_id_87BA() )
        self endon( "death" );

    var_0 = getdvarfloat( "#x3fdf714eff16abd6", 256 );
    var_1 = 0;
    self._id_C15D = 1;

    for (;;)
    {
        if ( istrue( self._id_C15D ) && !self isonground() && _id_E07A() && !self _meth_86B4() && !self _meth_81CB() && !istrue( self._id_32C2 ) )
        {
            var_2 = 0;

            switch ( getdvarint( "#x34c7da61b90628f09", 0 ) )
            {
                case 0:
                    if ( var_1 == 0 && self jumpbuttonpressed() )
                        var_2 = 1;

                    break;
                case 1:
                    if ( self jumpbuttonpressed() && var_1 + 500 < gettime() )
                        var_2 = 1;

                    break;
                case 2:
                    if ( !isdefined( self._id_4E7F ) )
                        thread _id_10B07();

                    if ( istrue( self._id_4E7F ) )
                        var_2 = 1;

                    break;
                default:
                    break;
            }

            if ( var_2 || level.gametype == "base" )
            {
                var_3 = scripts\common\utility::_id_71B7( self.origin );
                var_4 = self.origin[2] - var_3[2];

                if ( var_4 > var_0 )
                {
                    self notify( "skydive_deployparachute" );
                    self _meth_86AF();

                    if ( level.gametype == "base" )
                    {
                        self._id_AE26 = 0;
                        self._id_C15D = 0;
                    }
                }
            }
        }

        if ( isdefined( self ) && _id_E07A() )
        {
            if ( !self jumpbuttonpressed() )
                var_1 = 0;
            else if ( var_1 == 0 )
                var_1 = gettime();
        }
        else
            var_1 = 0;

        waitframe();
    }
}

_id_10B07()
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self._id_4E7F = 0;

    for (;;)
    {
        if ( self jumpbuttonpressed() )
        {
            var_0 = gettime();
            var_1 = 0;
            waitframe();

            for (;;)
            {
                if ( !self jumpbuttonpressed() )
                {
                    if ( gettime() < var_0 + 500 && !self isonground() )
                        var_1 = gettime();

                    break;
                }

                if ( gettime() > var_0 + 500 )
                    break;

                waitframe();
            }

            if ( var_1 == 0 )
                continue;

            waitframe();

            for (;;)
            {
                if ( self jumpbuttonpressed() )
                {
                    if ( gettime() < var_1 + 500 && !self isonground() )
                    {
                        self._id_4E7F = 1;
                        waitframe();
                        self._id_4E7F = 0;
                    }

                    break;
                }

                if ( gettime() > var_1 + 500 )
                    break;

                waitframe();
            }
        }

        waitframe();
    }
}

_id_AE24()
{
    var_0 = self;

    if ( level.gametype == "br" )
    {
        if ( isdefined( var_0._id_59EF ) && ( var_0._id_59EF == 1 || var_0._id_59EF == 2 ) )
        {
            var_0 _id_59EA();
            var_0._id_59EF = 3;
        }
    }
    else if ( level.gametype == "cp_survival" )
    {
        var_0 setclientomnvar( "ui_br_altimeter_state", 0 );
        var_0 _id_59EA( 1 );
    }
}

_id_FCE6()
{
    var_0 = self;
    var_1 = var_0 getvelocity();
    var_2 = clamp( var_0.origin[2], 0, level._id_DDD3._id_10FDF ) / level._id_DDD3._id_10FDF;
    var_3 = level._id_DDD3._id_10FDE + ( level._id_DDD3._id_10FDD - level._id_DDD3._id_10FDE ) * var_2;
    var_4 = var_1 * ( 1, 1, 0 );
    var_5 = length( var_4 );
    var_6 = var_4 * var_3;
    var_7 = var_5 * var_3;

    if ( var_7 > level._id_DDD3._id_10FDC )
        var_6 = var_6 * ( level._id_DDD3._id_10FDC / var_7 );

    var_8 = 0;
    var_8 = var_8 - var_0.origin[2] * level._id_DDD3._id_11006;
    var_8 = var_8 + level._id_DDD3._id_11010;
    var_8 = var_8 + var_1[2] * level._id_DDD3._id_110F1;
    var_8 = clamp( var_8, -1 * level._id_DDD3._id_1100B, 0 );
    var_9 = 1;

    if ( var_5 < level._id_DDD3._id_594B * var_1[2] )
        var_9 = 2;

    var_0 _meth_86A1( var_0.origin + ( var_6[0], var_6[1], var_8 ), 0, var_9 );
}

_id_5F30( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    self notify( "freeFallFromPlaneStateMachine" );
    self endon( "freeFallFromPlaneStateMachine" );
    var_6 = self;
    var_6._id_59EF = 1;
    var_6._id_59E9 = istrue( var_4 );
    var_6._id_59EB = 0;
    var_6 _id_59E8( var_0, var_1, var_2, var_3, var_5 );
    var_6 _id_59EE();
    var_7 = gettime();

    for (;;)
    {
        if ( var_6 _meth_86B4() || var_7 + 2000 < gettime() || var_6 _id_8A21() )
            break;

        waitframe();
    }

    for (;;)
    {
        if ( level._id_DDD3._id_EA19 && var_6._id_59EB < gettime() )
        {
            var_6 _id_FCE6();
            var_6._id_59EB = gettime() + 500;
        }

        if ( var_6 _meth_86B5() && var_6._id_59EF != 1 )
        {
            var_6 _id_59EE();
            var_6._id_59EF = 1;
        }

        if ( var_6 isskydiving() && var_6._id_59EF != 2 )
        {
            var_6 _id_59ED();
            var_6._id_59EF = 2;
        }

        if ( !var_6 _meth_86B4() && var_6._id_59EF != 3 && var_6._id_59EF != 4 && var_6._id_59EF != 6 || var_6._id_59EF == 5 )
        {
            var_6 _id_59EA();

            if ( var_6._id_59EF != 5 )
                var_6._id_59EF = 3;
            else
                var_6._id_59EF = 6;
        }

        var_8 = istrue( var_6._id_82AC );
        var_9 = var_6 isonground() && ( var_6._id_59EF == 3 || var_6 _id_8A21() );
        var_10 = var_6 isonladder();

        if ( var_8 || var_9 || var_10 )
        {
            var_6 _id_59EC();
            var_6._id_59EF = undefined;
            var_6._id_59E9 = undefined;
            var_6._id_59EB = undefined;

            if ( var_10 )
                var_6 _meth_86B2();

            return;
        }

        waitframe();
    }
}

_id_59E8( var_0, var_1, var_2, var_3, var_4 )
{
    self _meth_86B2();

    if ( !istrue( level._id_AE1B ) )
        _id_8237();

    if ( !isdefined( var_0 ) )
        var_0 = 4.0;

    if ( !isdefined( var_4 ) )
        var_4 = 1;

    if ( var_4 && ( !isdefined( level.gametype ) || level.gametype != "br" ) )
        self [[ level._id_AE28 ]]();

    self [[ level._id_5F31 ]]();

    if ( !isdefined( var_2 ) )
        self notifyonplayercommand( "open_parachute", "+gostand" );

    self cameradefault( 1 );

    if ( isdefined( var_3 ) )
        self setvelocity( var_3 );

    self _meth_86AE();

    if ( getdvarint( "#x32747a2ada32771c2", 1 ) != 2 )
        self _meth_86B3( 1 );

    if ( isdefined( level.gametype ) && level.gametype == "br" && ( !istrue( self._id_59E9 ) || getdvar( "scr_br_gametype", "" ) == "dmz" ) )
        thread _id_7E57( getdvarint( "scr_bmo_parachuteTouchdownVFX", 1 ) == 1 && getdvar( "scr_br_gametype", "" ) == "dmz" );

    if ( istrue( var_1 ) )
        thread _id_523C( 0 );
    else
        thread _id_523C( var_0 );

    self [[ level._id_AE25 ]]();
}

_id_59EE()
{
    if ( _id_8956() )
    {
        self setclientomnvar( "ui_br_altimeter_state", 1 );
        level._id_0F2A[self getxuid()] = self;
    }

    if ( !self._id_59E9 )
    {
        var_0 = "enabled";

        if ( isdefined( self._id_AC2A ) && isdefined( self._id_AC2A._id_2BAC ) )
            var_0 = var_0 + self._id_AC2A._id_2BAC;
    }
}

_id_59ED()
{
    self notify( "freefall_complete" );

    if ( isdefined( self._id_8C7B ) && self._id_8C7B == 1 )
    {
        var_0 = game["music"]["br_plane_jump_parachute"].size - 1;
        var_1 = randomint( var_0 );
        self _meth_84A8( game["music"]["br_plane_jump_parachute"][var_1] );
        self._id_8C7B = 0;
    }

    level._id_0F2A[self getxuid()] = self;

    if ( _id_8956() )
        self setclientomnvar( "ui_br_altimeter_state", 2 );

    if ( !istrue( level._id_4D8E ) )
        self [[ level._id_AE1D ]]();
}

_id_59EA( var_0 )
{
    self._id_7D0B = gettime() + 5000;

    if ( istrue( self._id_46C1 ) )
        self._id_46C1 = 0;

    if ( istrue( level._id_4D8E ) )
        self [[ level._id_AE16 ]]();

    self notify( "parachute_landed" );
    self _meth_86B3( 0 );

    if ( !_id_8A21() )
        self _meth_86B1( 1 );

    if ( istrue( self._id_C703 ) )
    {
        _id_C869( self._id_C703 == 1, _id_C86E() );
        self._id_C703 = undefined;
    }

    level._id_0F2A[self getxuid()] = undefined;
    self notify( "parachute_complete" );
    self cameradefault( 0 );
}

_id_59EC()
{
    if ( getdvarint( "#x3265239c3b8a5b892", 0 ) )
        self _meth_86A2();

    if ( _id_8956() )
    {
        level._id_0F2A[self getxuid()] = undefined;
        self setclientomnvar( "ui_br_altimeter_state", 0 );
        thread _id_B85F();

        if ( isdefined( level._id_AADA ) )
            self [[ level._id_AADA ]]( self );
    }
}

_id_B85F()
{
    wait 0.3;

    if ( isalive( self ) )
        self playlocalsound( "plr_breath_land_parachute", self );
}

_id_AE14()
{
    var_0 = self;
    var_0 _meth_86B2();

    if ( isdefined( var_0._id_AE05 ) )
        var_0._id_AE05 delete();
}

_id_E07A()
{
    return isalive( self ) && !isdefined( self._id_59C0 ) && !istrue( self._id_46A2 );
}
