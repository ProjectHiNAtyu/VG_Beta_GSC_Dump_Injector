// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_EED1()
{
    self endon( "death_or_disconnect" );
    self endon( "faux_spawn" );
    self endon( "end_launcher" );
    _id_EEBE();

    for (;;)
    {
        var_0 = self getcurrentweapon();

        if ( var_0.basename == "iw8_la_kgolf_mp" && _id_EECB() )
        {
            self._id_EEB2._id_E93F = 0;
            thread _id_EECD();
        }
        else
            self._id_EEB2._id_E93F = 1;

        self waittill( "weapon_change" );
    }
}

_id_EEBE()
{
    self._id_EEB2 = spawnstruct();
    self._id_EEB2._id_E75B = [];
    self._id_EEB2._id_E75B["off"] = [];
    self._id_EEB2._id_E75B["off"]["enter"] = ::_id_EEC0;
    self._id_EEB2._id_E75B["off"]["update"] = ::_id_EEC2;
    self._id_EEB2._id_E75B["off"]["exit"] = ::_id_EEC1;
    self._id_EEB2._id_E75B["scanning"] = [];
    self._id_EEB2._id_E75B["scanning"]["enter"] = ::_id_EEC9;
    self._id_EEB2._id_E75B["scanning"]["update"] = ::_id_EECA;
    self._id_EEB2._id_E75B["hold"] = [];
    self._id_EEB2._id_E75B["hold"]["enter"] = ::_id_EEBB;
    self._id_EEB2._id_E75B["hold"]["update"] = ::_id_EEBD;
    self._id_EEB2._id_E75B["hold"]["exit"] = ::_id_EEBC;
}

_id_EEC7()
{
    self._id_EEB2._id_118F = undefined;
    self._id_EEB2.target = undefined;
    self._id_EEB2._id_96F0 = undefined;
    self._id_EEB2._id_1031A = undefined;
    self._id_EEB2._id_8721 = 0;

    if ( isdefined( self._id_EEB2._id_912D ) )
    {
        self._id_EEB2._id_912D _id_0765::_id_47E6();
        self._id_EEB2._id_912D delete();
    }

    self._id_EEB2._id_912D = undefined;
    self._id_EEB2._id_E744 = undefined;
    self._id_EEB2._id_BEC1 = undefined;
}

_id_EEC0( var_0 )
{
    if ( isdefined( var_0 ) )
    {
        scripts\cp\cp_weapon::_id_EEDB( self._id_EEB2._id_EED3 );
        self._id_EEB2._id_EED3 = undefined;
    }
}

_id_EEC2()
{
    if ( self playerads() >= 0.6 )
        _id_EEC6( "scanning" );
}

_id_EEC1()
{

}

_id_EEC9( var_0 )
{
    self._id_EEB2._id_118F = gettime() + 100;

    if ( isdefined( var_0 ) && var_0 == "off" )
        self._id_EEB2._id_EED3 = scripts\cp\cp_weapon::_id_EEDC( "kgolftarget", self, undefined, self );
}

_id_EECA()
{
    if ( gettime() < self._id_EEB2._id_118F )
        return;

    var_0 = _id_EEC8();

    if ( isdefined( var_0 ) )
    {
        self._id_EEB2.target = var_0;
        _id_EEC6( "hold" );
    }
}

_id_EEBB( var_0 )
{
    self._id_EEB2._id_96F0 = gettime();
    self._id_EEB2._id_9896 = 0;
    self._id_EEB2._id_912D = scripts\engine\utility::spawn_tag_origin();
    self._id_EEB2._id_912D _id_0765::_id_C2A8( 1 );
    self._id_EEB2._id_912D show();
    _id_EECE();
}

_id_EEBD()
{
    if ( !_id_EEB5( self._id_EEB2.target ) )
    {
        _id_EEC6( "scanning" );
        return;
    }
    else
    {
        var_0 = _id_EEB8( self._id_EEB2.target );

        if ( isdefined( var_0 ) )
            self._id_EEB2._id_912D moveto( var_0, 0.05 );
    }

    var_1 = self _meth_845D( self._id_EEB2._id_912D.origin, 55, 40 );

    if ( var_1 && !self._id_EEB2._id_8721 )
    {
        self._id_EEB2._id_8721 = 1;
        thread _id_EEB3();
    }
    else if ( !var_1 && self._id_EEB2._id_8721 )
    {
        self._id_EEB2._id_8721 = 0;
        self notify( "stop_airburst_think" );
    }
}

_id_EEBC()
{
    _id_EECF();

    if ( isdefined( self._id_EEB2._id_912D ) )
    {
        self._id_EEB2._id_912D _id_0765::_id_47E6();
        self._id_EEB2._id_912D delete();
    }

    self._id_EEB2._id_912D = undefined;
    self._id_EEB2._id_8721 = 0;
    self notify( "stop_airburst_think" );
}

_id_EEC5()
{
    if ( self._id_EEB2._id_E744 != "off" )
    {
        if ( self playerads() < 0.6 )
            _id_EEC6( "off" );
    }
}

_id_EEC3()
{

}

_id_EEC4()
{
    if ( isdefined( self._id_EEB2._id_E744 ) && self._id_EEB2._id_E744 != "off" )
        _id_EEB7( "off" );
}

_id_EEB8( var_0 )
{
    var_1 = ( 0, 0, 0 );

    if ( var_0.classname == "script_vehicle" )
        var_1 = var_0 _meth_8430();
    else if ( _id_0A67::_id_886F( var_0 ) || _id_0A67::_id_8AA2( var_0 ) )
        var_1 = var_0._id_04B7;

    var_2 = var_0.origin + _id_EEBA( var_0 );
    var_3 = self geteye();
    var_4 = 4000;
    var_5 = _func_02F4( var_3, ( 0, 0, 0 ), var_4, var_2, var_1 );

    if ( isdefined( var_5 ) )
        return var_5;

    return undefined;
}

_id_EEBA( var_0 )
{
    var_1 = ( 0, 0, 0 );

    if ( _id_0A67::_id_8794( var_0 ) )
        var_1 = ( 0, 0, -50 );
    else if ( _id_0A67::_id_8A66( var_0 ) )
        var_1 = ( 0, 0, -100 );
    else if ( _id_0A67::_id_886F( var_0 ) )
        var_1 = ( 0, 0, 40 );
    else if ( _id_0A67::_id_879A( var_0 ) )
        var_1 = ( 0, 0, 40 );
    else if ( _id_0A67::_id_89B8( var_0 ) )
        var_1 = ( 0, 0, 10 );
    else if ( _id_0A67::_id_8A00( var_0 ) )
        var_1 = ( 0, 0, 10 );
    else if ( _id_0A67::_id_89B9( var_0 ) )
        var_1 = ( 0, 0, 30 );

    return var_1;
}

_id_EEB5( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    var_1 = self _meth_845D( var_0.origin, 55, 240 );

    if ( !var_1 )
        return 0;

    if ( !_id_EECC( var_0 ) )
        return 0;

    return 1;
}

_id_EEBF( var_0, var_1 )
{
    self endon( "death_or_disconnect" );
    self endon( "stop_lockon_sound" );

    for (;;)
    {
        self playlocalsound( var_0 );
        wait( var_1 );
    }
}

_id_EEC6( var_0 )
{
    self._id_EEB2._id_BEC1 = var_0;
}

_id_EEB9()
{
    return self._id_EEB2._id_BEC1;
}

_id_EEB7( var_0 )
{
    if ( isdefined( self._id_EEB2._id_E744 ) )
    {

    }

    var_1 = self._id_EEB2._id_E744;

    if ( isdefined( var_1 ) && isdefined( self._id_EEB2._id_E75B[var_1]["exit"] ) )
        self [[ self._id_EEB2._id_E75B[var_1]["exit"] ]]();

    self._id_EEB2._id_E744 = var_0;

    if ( isdefined( self._id_EEB2._id_E75B[var_0]["enter"] ) )
        self [[ self._id_EEB2._id_E75B[var_0]["enter"] ]]( var_1 );

    self._id_EEB2._id_BEC1 = undefined;
}

_id_EECB()
{
    return !_id_0764::_id_8599();
}

_id_EECD()
{
    self endon( "death_or_disconnect" );
    self endon( "faux_spawn" );
    self notify( "targetLead_think" );
    self endon( "targetLead_think" );
    _id_EEC7();
    _id_EEB7( "off" );
    _id_EEC3();
    thread _id_EEB6();

    for (;;)
    {
        if ( isdefined( self._id_EEB2._id_E93F ) && self._id_EEB2._id_E93F || !_id_EECB() )
        {
            self notify( "targetLead_stop" );
            _id_EEC4();
            return;
        }

        _id_EEC5();
        var_0 = _id_EEB9();

        if ( isdefined( var_0 ) )
            _id_EEB7( var_0 );

        self [[ self._id_EEB2._id_E75B[self._id_EEB2._id_E744]["update"] ]]();
        wait 0.05;
    }
}

_id_EEB6()
{
    self endon( "targetLead_stop" );
    scripts\engine\utility::waittill_any_2( "death_or_disconnect", "faux_spawn" );
    _id_EEC4();
}

_id_EEC8()
{
    var_0 = scripts\mp\weapons::_id_96E7();

    if ( var_0.size != 0 )
    {
        var_1 = [];

        foreach ( var_3 in var_0 )
        {
            var_4 = self _meth_845D( var_3.origin, 55, 240 );

            if ( var_4 )
                var_1[var_1.size] = var_3;
        }

        if ( var_1.size != 0 )
        {
            var_6 = _func_01FF( var_1, self.origin );

            if ( _id_EED0( var_6[0] ) )
                return var_6[0];
        }
    }

    return undefined;
}

_id_EED0( var_0 )
{
    var_1 = self geteye();
    var_2 = var_0 _meth_8174( 0, 0, 0 );
    var_3 = _func_01FD( var_1, var_2, 0, var_0 );

    if ( var_3 )
        return 1;

    var_4 = var_0 _meth_8174( 1, 0, 0 );
    var_3 = _func_01FD( var_1, var_4, 0, var_0 );

    if ( var_3 )
        return 1;

    var_5 = var_0 _meth_8174( -1, 0, 0 );
    var_3 = _func_01FD( var_1, var_5, 0, var_0 );

    if ( var_3 )
        return 1;

    return 0;
}

_id_EECC( var_0 )
{
    if ( _id_EED0( var_0 ) )
    {
        self._id_EEB2._id_9896 = 0;
        return 1;
    }

    if ( self._id_EEB2._id_9896 == 0 )
        self._id_EEB2._id_9896 = gettime();

    var_1 = gettime() - self._id_EEB2._id_9896;

    if ( var_1 >= 500 )
        return 0;

    return 1;
}

_id_EEB3()
{
    self endon( "death_or_disconnect" );
    self endon( "faux_spawn" );
    self endon( "stop_airburst_think" );
    self waittill( "missile_fire", var_0 );

    if ( isdefined( self._id_EEB2.target ) )
        var_0 thread _id_EEB4( self._id_EEB2.target, self );
}

_id_EEB4( var_0, var_1 )
{
    self endon( "death" );

    for (;;)
    {
        if ( !isdefined( var_0 ) )
        {
            iprintlnbold( "targetEnt undefined" );
            return;
        }

        var_2 = distance( var_1.origin, var_0.origin );
        var_3 = distance( var_1.origin, self.origin );

        if ( var_3 > var_2 )
        {
            self detonate();
            iprintlnbold( "explode" );
        }

        wait 0.05;
    }
}

_id_EECE()
{
    _func_0363( self._id_EEB2._id_EED3, self._id_EEB2.target );
    _func_0365( self._id_EEB2._id_EED3, self._id_EEB2.target, 1 );
    _func_0363( self._id_EEB2._id_EED3, self._id_EEB2._id_912D );
    _func_0365( self._id_EEB2._id_EED3, self._id_EEB2._id_912D, 0 );
}

_id_EECF()
{
    _func_0364( self._id_EEB2._id_EED3, self._id_EEB2.target );
    _func_0364( self._id_EEB2._id_EED3, self._id_EEB2._id_912D );
}
