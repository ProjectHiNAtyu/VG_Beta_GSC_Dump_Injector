// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level._effect["vfx_spawn_beacon_smoke"] = loadfx( "vfx/iw8_mp/_requests/vfx_spawn_beacon_smoke.vfx" );
}

_id_2491()
{
    self _meth_8529( "tac_ops_spawn_grenade_mp" );
    return 1;
}

_id_F1C8( var_0 )
{
    if ( !isdefined( level._id_ED1A ) )
        level._id_ED1A = [];

    var_1 = level._id_ED1A[var_0.owner.team];

    if ( isdefined( level._id_ED1A[var_0.owner.team] ) )
    {
        var_1 thread _id_4E87();
        level._id_ED1A[var_0.owner.team] = undefined;
    }

    level._id_ED1A[var_0.owner.team] = var_0;
    var_0.team = var_0.owner.team;
    var_0._id_F177 = ( var_0.angles[0], var_0.angles[1], 0 );
    var_0 waittill( "missile_stuck" );
    playfxontag( scripts\engine\utility::getfx( "vfx_spawn_beacon_smoke" ), var_0, "tag_origin" );
    var_0 thread _id_0766::_id_D587( 0, 20, undefined, undefined, undefined, 0.1 );
    var_0 _id_114C();
    var_0 thread _id_AD96();
    var_0 thread _id_42EF();
    var_0 thread _id_43D3();
}

_id_42EF()
{
    self endon( "death" );
    var_0 = undefined;
    self setcandamage( 1 );
    self.maxhealth = 100000;
    self.health = self.maxhealth;
    self._id_7147 = 60;

    for (;;)
    {
        self waittill( "damage", var_1, var_0, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13 );
        var_9 = scripts\mp\utility\weapon::_id_9AB4( var_9, var_13 );

        if ( !isplayer( var_0 ) && !isagent( var_0 ) )
            continue;

        if ( !scripts\mp\weapons::_id_5F93( self.owner, var_0 ) )
            continue;

        if ( _id_0A62::_id_A594( var_0, var_9, var_13, var_4 ) )
            continue;

        self._id_7147 = self._id_7147 - var_1;

        if ( self._id_7147 <= 0 )
            break;
        else
            var_0 _id_079B::_id_FC44( "" );
    }

    _id_4E87();
}

_id_4E87()
{
    playfx( scripts\engine\utility::getfx( "equipment_sparks" ), self.origin );
    self notify( "death" );
}

_id_43D3()
{
    self waittill( "death" );
    stopfxontag( scripts\engine\utility::getfx( "vfx_spawn_beacon_smoke" ), self, "tag_origin" );
    _id_C4AD();
    self delete();
}

_id_AD96()
{
    level endon( "game_ended" );
    self endon( "death" );
    self.owner scripts\engine\utility::_id_1087F( "joined_team", "joined_spectators", "disconnect" );
    _id_4E87();
}

_id_114C()
{
    self._id_6D2A = ::_id_6D29;
    _id_07F3::_id_108B( "spawn_beacon", self.team, self, "spawn_beacon" );
}

_id_C4AD()
{
    _id_07F3::_id_C4BB( "spawn_beacon", self.team );
}

_id_6D29( var_0, var_1 )
{
    var_2 = [];
    var_2["origin"] = _id_488D( var_0, var_1 );
    var_2["angles"] = _id_488C( var_2["origin"], var_0, var_1 );
    return var_2;
}

_id_488D( var_0, var_1 )
{
    var_2 = _func_00B5( var_0.origin, 512, 0, 64, "path", 1 );

    if ( !isdefined( var_2 ) || var_2.size <= 0 )
        return var_0.origin;

    return var_2[0].origin;
}

_id_488C( var_0, var_1, var_2 )
{
    var_3 = undefined;
    var_4 = undefined;

    foreach ( var_6 in level.players )
    {
        if ( var_6.team != var_1.team && scripts\mp\utility\player::isreallyalive( var_6 ) && var_6 != var_2 )
        {
            var_7 = distance2dsquared( var_6.origin, var_0 );

            if ( !isdefined( var_4 ) || var_7 < var_4 )
            {
                var_3 = var_6;
                var_4 = var_7;
            }
        }
    }

    if ( !isdefined( var_3 ) )
        return var_1._id_F177;

    var_9 = var_2 _meth_847A( var_0, var_3.origin, 1, 1 );
    var_10 = undefined;

    if ( var_9.size <= 1 )
        return var_1._id_F177;
    else
        var_10 = var_9[1];

    var_11 = var_10 - var_0;
    var_11 = ( var_11[0], var_11[1], 0 );
    var_12 = vectortoangles( var_11 );
    return var_12;
}
