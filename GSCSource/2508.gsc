// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_C329()
{
    while ( !isdefined( level._id_28EF ) )
        wait 0.05;

    if ( isdefined( level._id_27D7 ) )
        return;

    level._id_2806["heli_pilot"] = ( 0, 0, 350 );
    level._id_2806["heli_sniper"] = ( 0, 0, 228 );
    level._id_2805["isUsing"]["odin_assault"] = scripts\mp\utility\player::_id_8AB5;
    level._id_2805["isUsing"]["odin_support"] = scripts\mp\utility\player::_id_8AB5;
    level._id_2805["isUsing"]["heli_pilot"] = scripts\mp\utility\player::_id_8AB5;
    level._id_2805["isUsing"]["switchblade_cluster"] = scripts\mp\utility\player::_id_8AB5;
    level._id_2805["isUsing"]["vanguard"] = ::_id_8ABF;
    level._id_2805["waittill_initial_goal"]["heli_pilot"] = ::_id_76EC;
    level._id_2805["waittill_initial_goal"]["heli_sniper"] = ::_id_770D;
    level._id_2805["control_aiming"]["heli_pilot"] = ::_id_76E6;
    level._id_2805["control_aiming"]["heli_sniper"] = scripts\engine\utility::_id_51A7;
    level._id_2805["control_aiming"]["vanguard"] = ::_id_FFB5;
    level._id_2805["control_other"]["heli_pilot"] = ::_id_76E9;
    level._id_2805["heli_pick_node"]["heli_pilot"] = ::_id_76EA;
    level._id_2805["heli_pick_node"]["heli_sniper"] = ::_id_770C;
    level._id_2805["heli_pick_node"]["vanguard"] = ::_id_FFBB;
    level._id_2805["heli_node_get_origin"]["heli_pilot"] = ::_id_76AB;
    level._id_2805["heli_node_get_origin"]["heli_sniper"] = ::_id_76AB;
    level._id_2805["heli_node_get_origin"]["vanguard"] = ::_id_FFB6;
    level._id_2805["odin_perform_action"]["odin_assault"] = ::_id_A91A;
    level._id_2805["odin_perform_action"]["odin_support"] = ::_id_A929;
    level._id_2805["odin_get_target"]["odin_assault"] = ::_id_A919;
    level._id_2805["odin_get_target"]["odin_support"] = ::_id_A928;
    var_0 = scripts\engine\utility::_id_6D7C( "so_chopper_boss_path_struct", "script_noteworthy" );
    level._id_27CA = [];

    foreach ( var_2 in var_0 )
    {
        if ( isdefined( var_2._id_0372 ) )
            level._id_27CA = scripts\engine\utility::array_add( level._id_27CA, var_2 );
    }

    level._id_27CB = _id_0A6F::_id_6A7A();

    foreach ( var_5 in level._id_27CA )
    {
        var_5._id_FFBA = var_5.origin;
        var_6 = var_5.origin + ( 0, 0, 50 );
        var_5._id_FF2E = 1;

        if ( var_6[2] <= var_5.origin[2] - 1000 )
            var_5._id_FF2E = 0;

        var_6 = var_6 - ( 0, 0, 50 );
        var_5._id_FFBA = var_6;
    }

    var_8 = -99999999;

    foreach ( var_5 in level._id_27CA )
        var_8 = max( var_8, var_5.origin[2] );

    level._id_28EE = var_8 - level._id_282C + 100;
    level._id_76E8 = getdvarfloat( "#x3d9c9793b2d2d06f7" );

    while ( !isdefined( level._id_A920 ) || !isdefined( level._id_A921 ) )
        wait 0.05;

    level._id_A91B = ( level._id_A920 + level._id_A921 ) / 2;
    level._id_AD06 = [];

    if ( isdefined( level._id_F037 ) )
        var_11 = [[ level._id_F037 ]]();
    else
    {
        var_11 = [];

        for ( var_12 = 0; var_12 < level._id_110DF; var_12++ )
            var_11[var_11.size] = var_12;
    }

    foreach ( var_14 in var_11 )
    {
        if ( _func_002A( var_14 ) < 0.25 )
            level._id_AD06 = scripts\engine\utility::array_add( level._id_AD06, var_14 );
    }

    level._id_284B["recruit"] = 1.0;
    level._id_284B["regular"] = 0.7;
    level._id_284B["hardened"] = 0.4;
    level._id_284B["veteran"] = 0.05;
    level._id_27D7 = 1;
}

_id_27FB( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !isdefined( var_3 ) )
        return 0;

    var_5 = 1;
    var_6 = 1;
    var_7 = undefined;

    if ( isdefined( self._id_A53A ) )
    {
        var_8 = self _meth_803C();
        var_9 = distancesquared( self.origin, self._id_A53A.origin );

        if ( var_9 < _func_0214( var_8 ) )
        {
            var_5 = 0;
            var_6 = 0;
        }
        else if ( var_9 < _func_0214( 200 ) )
            var_5 = 0;
    }

    var_10 = var_0._id_EA0F == "vanguard" && _id_85EE();

    if ( var_10 || var_5 )
    {
        var_11 = _func_00B4( self.origin, 500, 0, 512 );

        if ( isdefined( var_11 ) && var_11.size > 0 )
        {
            if ( isdefined( var_4 ) && var_4 )
            {
                var_12 = var_11;
                var_11 = [];

                foreach ( var_14 in var_12 )
                {
                    if ( _func_0155( var_14 ) )
                    {
                        var_15 = _func_00A6( var_14 );
                        var_16 = 0;

                        foreach ( var_18 in var_15 )
                        {
                            if ( _func_0155( var_18 ) )
                                var_16++;
                        }

                        if ( var_16 / var_15.size > 0.5 )
                            var_11 = scripts\engine\utility::array_add( var_11, var_14 );
                    }
                }
            }

            if ( var_10 )
            {
                var_21 = self _meth_804A( var_11, "node_exposed" );

                foreach ( var_14 in var_21 )
                {
                    if ( scripts\engine\trace::_id_0B4D( var_14.origin + ( 0, 0, 30 ), var_14.origin + ( 0, 0, 400 ), 0, self ) )
                    {
                        var_7 = var_14;
                        break;
                    }

                    wait 0.05;
                }
            }
            else if ( var_11.size > 0 )
                var_7 = self _meth_8048( var_11, min( 3, var_11.size ), "node_hide" );

            if ( !isdefined( var_7 ) )
                return 0;

            self _meth_8058( var_7, "tactical" );
        }
    }

    if ( var_6 )
    {
        var_24 = _id_09D1::_id_28F6();

        if ( var_24 != "goal" )
        {
            _id_F701( var_7 );
            return 1;
        }
    }

    if ( isdefined( var_2 ) && !self [[ var_2 ]]() )
    {
        _id_F701( var_7 );
        return 0;
    }

    if ( !_id_09D1::_id_26D6() )
    {
        _id_F701( var_7 );
        return 1;
    }

    if ( !isdefined( var_7 ) )
    {
        if ( self getstance() == "prone" )
            self _meth_805A( "prone" );
        else if ( self getstance() == "crouch" )
            self _meth_805A( "crouch" );
    }
    else if ( self _meth_802F( "strategyLevel" ) > 0 )
    {
        if ( randomint( 100 ) > 50 )
            self _meth_805A( "prone" );
        else
            self _meth_805A( "crouch" );
    }

    _id_09CB::_id_28CA( var_0, var_1, var_0._id_04CE );
    self._id_1001E = undefined;
    self thread [[ var_3 ]]();
    thread _id_275D();
    thread _id_275F( var_7 );
    self waittill( "control_func_done" );
    return 1;
}

_id_275D()
{
    self endon( "disconnect" );
    self endon( "control_func_done" );
    level endon( "game_ended" );
    self waittill( "spawned_player" );
    self notify( "control_func_done" );
}

_id_275F( var_0 )
{
    self endon( "disconnect" );
    self waittill( "control_func_done" );
    _id_F701( var_0 );
    self _meth_805A( "none" );
    self _meth_8059( 0, 0 );
    self _meth_8053( "disable_movement", 0 );
    self _meth_8053( "disable_rotation", 0 );
    self._id_1001E = undefined;
}

_id_F701( var_0 )
{
    if ( isdefined( var_0 ) && self _meth_8041() && isdefined( self _meth_803B() ) && self _meth_803B() == var_0 )
        self _meth_802A();
}

_id_275E( var_0 )
{
    var_0 waittill( "death" );
    self notify( "control_func_done" );
}

_id_28F8( var_0 )
{
    var_1 = gettime();

    while ( !self [[ level._id_2805["isUsing"][var_0] ]]() )
    {
        wait 0.05;

        if ( gettime() - var_1 > 5000 )
            return 0;
    }

    return 1;
}

_id_2720()
{
    self endon( "spawned_player" );
    self endon( "disconnect" );
    self endon( "control_func_done" );
    level endon( "game_ended" );
    childthread _id_73D4();
    var_0 = _id_28F8( "switchblade_cluster" );

    if ( !var_0 )
        self notify( "control_func_done" );

    thread _id_EC2D();
    var_1 = _id_5A9D( self );
    wait 0.1;
    self._id_AA21 = self._id_0282;
    self._id_0282 = 256000000;
    thread _id_10A2A();
    var_2 = undefined;
    var_3 = 0;
    var_4 = 0;
    var_5 = [];
    var_6 = undefined;
    var_7 = 0;
    var_8 = 0;
    var_9 = undefined;
    var_10 = undefined;
    var_11 = 0;
    var_12 = _id_85EE();

    while ( self [[ level._id_2805["isUsing"]["switchblade_cluster"] ]]() && isdefined( var_1 ) )
    {
        foreach ( var_14 in level._id_C8AB )
        {
            if ( isdefined( var_14 ) && var_14.owner == self && var_14._id_10D06 == "switch_blade_child_mp" )
            {
                var_15 = 1;

                foreach ( var_17 in var_5 )
                {
                    if ( var_17._id_0354 == var_14 )
                        var_15 = 0;
                }

                if ( var_15 )
                {
                    var_19 = spawnstruct();
                    var_19._id_0354 = var_14;
                    var_19.target = var_6;
                    var_6 = undefined;
                    var_5 = scripts\engine\utility::array_add( var_5, var_19 );
                }
            }
        }

        for ( var_21 = 0; var_21 < var_5.size; var_21++ )
        {
            var_17 = var_5[var_21];

            if ( isdefined( var_17 ) && isdefined( var_17._id_0354 ) && !scripts\engine\utility::array_contains( level._id_C8AB, var_17._id_0354 ) )
            {
                var_5[var_21] = var_5[var_5.size - 1];
                var_5[var_5.size - 1] = undefined;
                var_21--;
            }
        }

        if ( var_11 )
        {
            wait 0.05;
            continue;
        }

        var_22 = undefined;

        if ( isdefined( var_10 ) )
        {
            var_22 = var_10;

            if ( !isalive( var_10 ) || !self _meth_8027( var_22 ) )
            {
                if ( !isalive( var_10 ) )
                    var_11 = 1;

                wait 0.05;
                continue;
            }
        }

        var_23 = [];

        if ( !isdefined( var_22 ) )
        {
            var_24 = _id_27F4( 0 );
            var_25 = [];

            foreach ( var_17 in var_5 )
            {
                if ( isdefined( var_17.target ) )
                    var_25 = scripts\engine\utility::array_add( var_25, var_17.target );
            }

            var_24 = scripts\engine\utility::_id_1B97( var_24, var_25 );

            foreach ( var_29 in var_24 )
            {
                if ( var_29 scripts\mp\utility\perk::_hasperk( "specialty_noplayertarget" ) )
                    continue;

                if ( self _meth_8027( var_29 ) || var_12 && scripts\engine\utility::_id_10E74( self geteye(), var_1.angles, var_29.origin, self _meth_8031() ) )
                {
                    if ( !_id_26E4() && distancesquared( var_29.origin, self.origin ) < 40000 )
                        continue;

                    var_23 = scripts\engine\utility::array_add( var_23, var_29 );

                    if ( !isdefined( var_22 ) )
                    {
                        var_22 = var_29;
                        continue;
                    }

                    var_30 = vectornormalize( var_22.origin - var_1.origin );
                    var_31 = vectornormalize( var_29.origin - var_1.origin );
                    var_32 = anglestoforward( var_1.angles );
                    var_33 = vectordot( var_30, var_32 );
                    var_34 = vectordot( var_31, var_32 );

                    if ( var_34 > var_33 )
                        var_22 = var_29;
                }
            }
        }

        if ( isdefined( var_22 ) )
        {
            var_2 = undefined;
            var_36 = var_1.origin[2] - var_22.origin[2];
            var_37 = self _meth_802E();

            if ( var_37 == "recruit" )
                var_9 = var_22.origin;
            else if ( var_36 < 5000 )
                var_9 = var_22.origin;
            else if ( length( var_22 _meth_8131() ) < 25 )
                var_9 = var_22.origin;
            else if ( gettime() - var_8 > 500 )
            {
                var_8 = gettime();
                var_38 = 3.0;

                if ( var_37 == "regular" )
                    var_38 = 1.0;

                var_9 = _func_00C7( var_22, var_38 );
            }

            var_39 = _id_9F49( var_1, var_9 );
            var_40 = _id_9F4A( var_1, var_9 );

            if ( var_40 < 30 )
                var_41 = 0.0;
            else if ( var_40 < 100 )
                var_41 = 0.15;
            else if ( var_40 < 200 )
                var_41 = 0.3;
            else if ( var_40 < 400 )
                var_41 = 0.6;
            else
                var_41 = 1.0;

            if ( var_7 )
                var_41 = min( var_41 * 3, 1.0 );

            if ( var_41 > 0 )
                self _meth_8059( var_39[1], 0.05, var_41, 1, 1 );
            else if ( gettime() > var_4 )
            {
                if ( var_3 < 2 )
                {
                    self _meth_804D( "attack" );
                    var_3++;
                    var_4 = gettime() + 200;

                    if ( var_37 == "regular" && var_3 == 2 || var_37 == "hardened" || var_37 == "veteran" )
                    {
                        var_42 = var_3 == 1 && var_23.size == 1;

                        if ( !var_42 )
                        {
                            var_6 = var_22;
                            var_4 = var_4 + 800;
                        }
                    }
                }
                else if ( !var_7 && ( var_36 < 5000 || var_37 == "recruit" ) )
                {
                    var_7 = 1;
                    self _meth_804D( "attack" );

                    if ( var_37 == "recruit" )
                        var_10 = var_22;
                }
            }
        }
        else
        {
            if ( !isdefined( var_2 ) )
                var_2 = scripts\engine\utility::random( level._id_AD06 );

            var_43 = _func_00F6( var_2 ).origin;

            if ( _id_9F4A( var_1, var_43 ) < 200 )
            {
                var_2 = scripts\engine\utility::random( level._id_AD06 );
                var_43 = _func_00F6( var_2 ).origin;
            }

            var_39 = _id_9F49( var_1, var_43 );
            self _meth_8059( var_39[1], 0.05, 0.75, 1, 1 );
        }

        wait 0.05;
    }

    self notify( "control_func_done" );
}

_id_9F49( var_0, var_1 )
{
    var_2 = _id_9F48( var_0, var_1[2] );
    var_3 = vectornormalize( var_1 - var_2 );
    return vectortoangles( var_3 );
}

_id_9F4A( var_0, var_1 )
{
    var_2 = _id_9F48( var_0, var_1[2] );
    return distance( var_2, var_1 );
}

_id_73D4()
{
    self _meth_8053( "disable_rotation", 1 );
    self _meth_8053( "disable_movement", 1 );
    _id_5A9D( self );
    self _meth_8053( "disable_rotation", 0 );
    self _meth_8053( "disable_movement", 0 );
}

_id_EC2D()
{
    self endon( "disconnect" );
    self _meth_8050( 2.5 );
    self waittill( "control_func_done" );
    self _meth_8050( 1.0 );
}

_id_9F48( var_0, var_1 )
{
    var_2 = anglestoforward( var_0.angles );
    var_3 = ( var_1 - var_0.origin[2] ) / var_2[2];
    var_4 = var_0.origin + var_2 * var_3;
    return var_4;
}

_id_10A2A()
{
    self endon( "disconnect" );
    self waittill( "control_func_done" );
    self._id_0282 = self._id_AA21;
}

_id_5A9D( var_0 )
{
    for (;;)
    {
        foreach ( var_2 in level._id_C8AB )
        {
            if ( isdefined( var_2 ) && var_2.owner == var_0 )
                return var_2;
        }

        wait 0.05;
    }
}

_id_FFB4()
{
    if ( !_id_09CB::_id_11B6() )
        return 0;

    if ( _id_09CB::_id_88D2( "vanguard" ) )
        return 0;

    return 1;
}

_id_2801( var_0, var_1, var_2, var_3 )
{
    _id_27FB( var_0, var_1, var_2, var_3, 1 );
}

_id_8ABF()
{
    return scripts\mp\utility\player::_id_8AB5() && self._id_FF16 == "vanguard" && isdefined( self._id_C336 );
}

_id_2721()
{
    self endon( "spawned_player" );
    self endon( "disconnect" );
    self endon( "control_func_done" );
    level endon( "game_ended" );
    var_0 = _id_28F8( "vanguard" );

    if ( !var_0 )
        self notify( "control_func_done" );

    self._id_1001E = self._id_C336;
    childthread _id_275E( self._id_1001E );
    self._id_1001E endon( "death" );
    wait 0.5;
    var_1 = 0;
    var_2 = !self._id_1001E _id_FFB7();
    var_3 = undefined;
    var_4 = 0;
    var_5 = _id_85EE();

    while ( var_2 && !var_5 )
    {
        var_6 = _func_00B5( self._id_1001E.origin, 1024, 64, 512, "path" );

        if ( isdefined( var_3 ) )
            var_6 = scripts\engine\utility::array_remove( var_6, var_3 );

        foreach ( var_8 in var_6 )
        {
            if ( _id_A54B( var_8 ) )
            {
                var_3 = var_8;
                break;
            }

            wait 0.05;
            var_1 = var_1 + 0.05;
        }

        if ( var_1 < 1.0 )
            wait( 1.0 - var_1 );

        if ( !isdefined( var_3 ) )
        {
            self _meth_804D( "use", 4.0 );
            wait 4.0;
        }

        var_10 = _id_09D1::_id_2875( "GetNodesOnPathVanguard", _id_09D1::_id_5FFF, self._id_1001E.origin, var_3.origin );

        if ( !isdefined( var_10 ) )
        {
            if ( var_4 == 0 )
            {
                var_4++;
                wait 0.05;
                continue;
            }
            else
            {
                self _meth_804D( "use", 4.0 );
                wait 4.0;
            }
        }

        for ( var_11 = 0; var_11 < var_10.size; var_11++ )
        {
            var_12 = var_10[var_11];

            if ( var_11 == 0 && distancesquared( self.origin, var_12.origin ) < 1600 )
                continue;

            var_13 = 32;

            if ( var_11 == var_10.size - 1 )
                var_13 = 16;

            var_14 = self._id_1001E.origin;
            var_15 = gettime() + 2500;

            while ( distance2dsquared( var_12.origin, self._id_1001E.origin ) > var_13 * var_13 )
            {
                if ( self._id_1001E _id_FFB7() )
                {
                    var_11 = var_10.size;
                    break;
                }

                if ( gettime() > var_15 )
                {
                    var_15 = gettime() + 2500;
                    var_16 = distancesquared( self._id_1001E.origin, var_14 );

                    if ( var_16 < 1.0 )
                    {
                        var_11++;
                        break;
                    }

                    var_14 = self._id_1001E.origin;
                }

                var_17 = vectornormalize( var_12.origin - self._id_1001E.origin );
                self _meth_8059( vectortoangles( var_17 )[1], 0.2 );
                self _meth_8044( var_12.origin, 0.2, "script_forced" );
                var_18 = var_12.origin[2] + 64;
                var_19 = var_18 - self._id_1001E.origin[2];

                if ( var_19 > 10 )
                    self _meth_804D( "lethal" );
                else if ( var_19 < -10 )
                    self _meth_804D( "tactical" );

                wait 0.05;
            }
        }

        var_2 = 0;

        if ( !self._id_1001E _id_FFB7() )
            var_2 = 1;
    }

    self _meth_8059( 0, 0 );
    self _meth_8044( undefined );
    self childthread [[ level._id_2805["control_aiming"]["vanguard"] ]]();
    var_21 = self._id_1001E.origin[2];
    var_22 = undefined;
    var_23 = gettime() + 2000;
    var_24 = [];
    var_24[0] = ( 1, 0, 0 );
    var_24[1] = ( -1, 0, 0 );
    var_24[2] = ( 0, 1, 0 );
    var_24[3] = ( 0, -1, 0 );
    var_24[4] = ( 1, 1, 0 );
    var_24[5] = ( 1, -1, 0 );
    var_24[6] = ( -1, 1, 0 );
    var_24[7] = ( -1, -1, 0 );
    var_25 = _id_5A9B( self._id_1001E.origin, "vanguard" );

    while ( var_25._id_FFBA[2] - self._id_1001E.origin[2] > 20 )
    {
        if ( gettime() > var_23 )
        {
            var_23 = gettime() + 2000;

            if ( isdefined( var_22 ) )
                var_22 = undefined;
            else
            {
                var_19 = self._id_1001E.origin[2] - var_21;

                if ( var_19 < 20 && !var_5 )
                {
                    var_26 = scripts\engine\utility::_id_1B94( var_24 );

                    foreach ( var_28 in var_26 )
                    {
                        if ( _id_B9F3( self._id_1001E.origin + var_28 * 64 ) )
                        {
                            if ( !scripts\engine\trace::_id_0B4D( self._id_1001E.origin, self._id_1001E.origin + var_28 * 64, 0, self._id_1001E ) )
                            {
                                wait 0.05;
                                continue;
                            }

                            var_22 = var_28;
                            break;
                        }

                        wait 0.05;
                    }
                }
            }

            var_21 = self._id_1001E.origin[2];
        }

        if ( isdefined( var_22 ) )
        {
            self _meth_8059( vectortoangles( var_22 )[1], 0.05 );

            if ( scripts\engine\utility::cointoss() )
                self _meth_804D( "tactical" );
        }
        else
            self _meth_804D( "lethal" );

        wait 0.05;
    }

    wait 1.0;
    wait 1.0;
    self _meth_8053( "disable_movement", 0 );
    _id_271A( "vanguard", 0 );
    self notify( "control_func_done" );
}

_id_B9F1( var_0 )
{
    var_1 = _func_0080( var_0 );

    if ( isdefined( var_1 ) )
        return _id_A54B( var_1 );

    return 0;
}

_id_A54B( var_0 )
{
    if ( _func_0155( var_0 ) )
        return _id_B9F3( var_0.origin );

    return 0;
}

_id_B9F3( var_0 )
{
    var_1 = var_0;
    var_2 = var_0 + ( 0, 0, level._id_28EE );

    if ( var_2[2] <= var_1[2] )
        return 0;

    var_3 = scripts\engine\trace::_id_0B4D( var_1, var_2, 0, undefined );
    return var_3;
}

_id_FFB7()
{
    var_0 = _func_0080( self.origin );

    if ( isdefined( var_0 ) && !_func_0155( var_0 ) )
        return 0;

    wait 0.05;

    if ( !_id_B9F3( self.origin + ( 18, 0, 25 ) ) )
        return 0;

    wait 0.05;

    if ( !_id_B9F3( self.origin + ( -18, 0, 25 ) ) )
        return 0;

    wait 0.05;

    if ( !_id_B9F3( self.origin + ( 0, 18, 25 ) ) )
        return 0;

    wait 0.05;

    if ( !_id_B9F3( self.origin + ( 0, -18, 25 ) ) )
        return 0;

    return 1;
}

_id_FFB5()
{
    self notify( "vanguard_control_aiming" );
    self endon( "vanguard_control_aiming" );
    var_0 = undefined;
    var_1 = 0;
    var_2 = gettime();
    var_3 = 0;
    var_4 = undefined;
    var_5 = 0;

    while ( self [[ level._id_2805["isUsing"]["vanguard"] ]]() )
    {
        var_6 = undefined;
        var_7 = self geteye();
        var_8 = self getplayerangles();
        var_9 = self _meth_8031();

        if ( isalive( self._id_017D ) && self _meth_8027( self._id_017D ) )
        {
            var_10 = 1;
            var_6 = self._id_017D;
            var_5 = 0;
        }
        else if ( var_5 < 10.0 )
        {
            foreach ( var_12 in level.characters )
            {
                if ( var_12 == self || !isalive( var_12 ) )
                    continue;

                if ( var_12 scripts\mp\utility\perk::_hasperk( "specialty_noplayertarget" ) )
                    continue;

                if ( !isdefined( var_12.team ) )
                    continue;

                if ( !level.teambased || self.team != var_12.team )
                {
                    if ( scripts\engine\utility::_id_10E74( var_7, var_8, var_12.origin, var_9 ) )
                    {
                        var_5 = var_5 + 0.05;

                        if ( isdefined( var_6 ) )
                        {
                            var_13 = distancesquared( self._id_1001E.origin, var_6.origin );
                            var_14 = distancesquared( self._id_1001E.origin, var_12.origin );

                            if ( var_14 < var_13 )
                                var_6 = var_12;

                            continue;
                        }

                        var_6 = var_12;
                    }
                }
            }
        }

        if ( isdefined( var_6 ) )
        {
            if ( ( isai( var_6 ) || isplayer( var_6 ) ) && length( var_6 _meth_8131() ) < 25 )
                var_0 = var_6.origin;
            else if ( gettime() - var_3 < 500 )
            {
                if ( var_4 != var_6 )
                    var_0 = var_6.origin;
            }
            else if ( gettime() - var_3 > 500 )
            {
                var_3 = gettime();
                var_0 = _func_00C7( var_6, 3.0 );
                var_4 = var_6;
            }

            var_16 = 165;

            if ( gettime() - var_2 > 10000 )
                var_16 = 200;

            if ( distancesquared( self._id_1001E._id_1DA3.origin, var_0 ) < level._id_FFB8 * level._id_FFB8 )
            {
                if ( _id_26E4() || distancesquared( self._id_1001E._id_1DA3.origin, self.origin ) > level._id_FFB8 * level._id_FFB8 )
                {
                    var_2 = gettime();
                    self _meth_804D( "attack" );
                }
            }
        }
        else if ( gettime() > var_1 )
        {
            var_1 = gettime() + randomintrange( 1000, 2000 );
            var_0 = _id_66BC();
            self._id_A45A = gettime();
        }

        if ( length( var_0 ) == 0 )
            var_0 = ( 0, 0, 10 );

        self _meth_8044( var_0, 0.2, "script_forced" );
        wait 0.05;
    }
}

_id_FFBB( var_0 )
{
    var_0._id_28F3[self._id_54E1]++;
    var_1 = [[ level._id_2805["heli_node_get_origin"]["vanguard"] ]]( var_0 );
    var_2 = _id_28ED( var_0 );
    var_3 = var_2;
    var_2 = [];

    foreach ( var_5 in var_3 )
    {
        if ( var_5._id_FF2E )
        {
            if ( var_0.origin[2] != var_0._id_FFBA[2] || var_5.origin[2] != var_5._id_FFBA[2] )
            {
                var_6 = [[ level._id_2805["heli_node_get_origin"]["vanguard"] ]]( var_5 );
                var_7 = physicsexplosionsphere( var_1, var_6 );

                if ( distancesquared( var_7, var_6 ) < 1 )
                    var_2 = scripts\engine\utility::array_add( var_2, var_5 );

                wait 0.05;
                continue;
            }

            var_2 = scripts\engine\utility::array_add( var_2, var_5 );
        }
    }

    if ( var_2.size == 0 && var_3.size > 0 )
    {
        foreach ( var_5 in var_3 )
            var_5._id_28F3[self._id_54E1]++;
    }

    return _id_76E3( var_2, "vanguard" );
}

_id_28ED( var_0 )
{
    var_1 = 99;
    var_2 = [];

    foreach ( var_4 in var_0._id_A40E )
    {
        if ( isdefined( var_4._id_0372 ) && var_4._id_FF2E )
        {
            var_5 = var_4._id_28F3[self._id_54E1];

            if ( var_5 < var_1 )
            {
                var_2 = [];
                var_2[0] = var_4;
                var_1 = var_5;
            }
            else if ( var_5 == var_1 )
                var_2[var_2.size] = var_4;
        }
    }

    return var_2;
}

_id_FFB6( var_0 )
{
    return var_0._id_FFBA;
}

_id_AC68( var_0 )
{
    var_1 = 1;
    var_2 = scripts\engine\utility::spawn_tag_origin();
    var_2.origin = var_0;
    var_2 delete();
    return var_1;
}

_id_770A()
{
    if ( !_id_09CB::_id_11B6() )
        return 0;

    return 1;
}

_id_770D()
{
    self._id_1001E waittill( "near_goal" );
}

_id_271C()
{
    thread _id_770B();
    _id_2719( "heli_sniper" );
}

_id_770B()
{
    self endon( "spawned_player" );
    self endon( "disconnect" );
    self endon( "control_func_done" );
    level endon( "game_ended" );
    self _meth_802A();
}

_id_770C( var_0 )
{
    var_0._id_28F3[self._id_54E1]++;
    var_1 = _id_27C9( var_0 );
    return _id_76E3( var_1, "heli_sniper" );
}

_id_76E5()
{
    if ( !_id_09CB::_id_11B6() )
        return 0;

    if ( _id_0A20::_id_56AE( self.team ) )
        return 0;

    return 1;
}

_id_76EC()
{
    self._id_1001E waittill( "goal_reached" );
}

_id_271B()
{
    _id_2719( "heli_pilot" );
}

_id_76EA( var_0 )
{
    var_0._id_28F3[self._id_54E1]++;
    var_1 = _id_27C9( var_0 );
    var_2 = scripts\engine\utility::random( var_1 );
    return var_2;
}

_id_76E9()
{
    self notify( "heli_pilot_monitor_flares" );
    self endon( "heli_pilot_monitor_flares" );
    var_0 = [];

    while ( self [[ level._id_2805["isUsing"]["heli_pilot"] ]]() )
    {
        self._id_1001E waittill( "targeted_by_incoming_missile", var_1 );

        if ( !_id_0A1B::_id_5C53( self._id_1001E ) )
            break;

        var_2 = 1;

        foreach ( var_4 in var_1 )
        {
            if ( isdefined( var_4 ) && !scripts\engine\utility::array_contains( var_0, var_4 ) )
                var_2 = 0;
        }

        if ( !var_2 )
        {
            var_6 = clamp( 0.34 * self _meth_802F( "strategyLevel" ), 0.0, 1.0 );

            if ( randomfloat( 1.0 ) < var_6 )
                self notify( "manual_flare_popped" );

            var_0 = scripts\engine\utility::_id_1B72( var_0, var_1 );
            var_0 = scripts\engine\utility::_id_1BA9( var_0 );
            wait 3.0;
        }
    }
}

_id_76E6()
{
    self notify( "heli_pilot_control_heli_aiming" );
    self endon( "heli_pilot_control_heli_aiming" );
    var_0 = undefined;
    var_1 = undefined;
    var_2 = undefined;
    var_3 = 0;
    var_4 = 0;
    var_5 = undefined;
    var_6 = ( self _meth_802F( "minInaccuracy" ) + self _meth_802F( "maxInaccuracy" ) ) / 2;
    var_7 = 0;

    while ( self [[ level._id_2805["isUsing"]["heli_pilot"] ]]() )
    {
        var_8 = 0;
        var_9 = 0;

        if ( isdefined( var_1 ) && var_1.health <= 0 && gettime() - var_1._id_43FE < 2000 )
        {
            var_8 = 1;
            var_9 = 1;
        }
        else if ( isalive( self._id_017D ) && ( self _meth_8027( self._id_017D ) || gettime() - self _meth_8204( self._id_017D ) <= 300 ) )
        {
            var_8 = 1;
            var_1 = self._id_017D;
            var_0 = self._id_017D.origin;

            if ( self _meth_8027( self._id_017D ) )
            {
                var_7 = 0;
                var_9 = 1;
                var_10 = gettime();
            }
            else
            {
                var_7 = var_7 + 0.05;

                if ( var_7 > 5.0 )
                    var_8 = 0;
            }
        }

        if ( var_8 )
        {
            var_2 = var_0 - ( 0, 0, 50 );

            if ( var_9 && ( _id_26E4() || distancesquared( var_2, self.origin ) > level._id_76E8 * level._id_76E8 ) )
                self _meth_804D( "attack" );

            if ( gettime() > var_4 + 500 )
            {
                var_11 = randomfloatrange( -1 * var_6 / 2, var_6 / 2 );
                var_12 = randomfloatrange( -1 * var_6 / 2, var_6 / 2 );
                var_13 = randomfloatrange( -1 * var_6 / 2, var_6 / 2 );
                var_5 = ( 150 * var_11, 150 * var_12, 150 * var_13 );
                var_4 = gettime();
            }

            var_2 = var_2 + var_5;
            var_14 = self._id_1001E gettagorigin( "tag_player" );
            var_15 = vectornormalize( var_2 - var_14 );
            var_16 = anglestoforward( self getplayerangles() );
            var_17 = vectordot( var_15, var_16 );

            if ( var_17 > 0.5 )
                self _meth_804D( "ads", 0.1 );
        }
        else if ( gettime() > var_3 )
        {
            var_3 = gettime() + randomintrange( 1000, 2000 );
            var_2 = _id_66BC();
            self._id_A45A = gettime();
        }

        var_18 = var_2 - self._id_1001E.origin;
        var_19 = length( var_18 );
        var_20 = vectortoangles( var_18 );
        var_21 = _func_000A( self._id_1001E.angles[0] );
        var_22 = _func_000A( var_20[0] );
        var_23 = int( var_21 - var_22 ) % 360;

        if ( var_23 > 180 )
            var_23 = 360 - var_23;
        else if ( var_23 < -180 )
            var_23 = -360 + var_23;

        if ( var_23 > 15 )
            var_22 = var_21 - 15;
        else if ( var_23 < -15 )
            var_22 = var_21 + 15;

        var_20 = ( var_22, var_20[1], var_20[2] );
        var_18 = anglestoforward( var_20 );
        var_2 = self._id_1001E.origin + var_18 * var_19;

        if ( length( var_2 ) == 0 )
            var_2 = ( 0, 0, 10 );

        self _meth_8044( var_2, 0.2, "script_forced" );
        wait 0.05;
    }
}

_id_271E()
{
    _id_271D( "odin_assault" );
}

_id_A91A()
{
    if ( _id_2850() )
        return 1;

    if ( _id_284E() )
        return 1;

    if ( _id_284C() )
        return 1;

    return 0;
}

_id_A919()
{
    return _id_2841();
}

_id_2841()
{
    var_0 = undefined;

    if ( isdefined( self._id_8F1F ) && gettime() - self._id_8F20 < 5000 )
        var_0 = self._id_8F1F;

    return _id_2842( "enemy", 1, var_0 );
}

_id_284E()
{
    var_0 = _id_284A();

    if ( var_0 == "large" )
    {
        self notify( "large_rod_action" );
        return 1;
    }

    if ( var_0 == "small" )
    {
        self notify( "small_rod_action" );
        return 1;
    }

    return 0;
}

_id_284A()
{
    var_0 = gettime() >= self._id_A917._id_A91E;
    var_1 = gettime() >= self._id_A917._id_A926;

    if ( var_0 || var_1 )
    {
        var_2 = _id_2846( "enemy", 0 );
        var_3 = [];
        var_4 = distancesquared( self.origin, self._id_A917._id_EEAA.origin );

        for ( var_5 = 0; var_5 < var_2.size; var_5++ )
        {
            var_6 = _id_2845( var_2[var_5] );
            var_3[var_5] = distancesquared( self._id_A917._id_EEAA.origin, var_6 );
        }

        if ( var_0 )
        {
            if ( !_id_26E4() && var_4 < level._id_A91D * level._id_A91D )
                return "none";

            for ( var_5 = 0; var_5 < var_2.size; var_5++ )
            {
                if ( var_3[var_5] < _func_0214( level._id_A91D ) )
                {
                    self._id_8F1F = var_2[var_5];
                    self._id_8F20 = gettime();
                    return "large";
                }
            }
        }

        if ( var_1 )
        {
            if ( !_id_26E4() && var_4 < level._id_A925 * level._id_A925 )
                return "none";

            for ( var_5 = 0; var_5 < var_2.size; var_5++ )
            {
                if ( var_3[var_5] < _func_0214( level._id_A925 ) )
                {
                    if ( isdefined( self._id_8F1F ) && self._id_8F1F == var_2[var_5] && gettime() - self._id_8F20 < 5000 )
                        continue;

                    return "small";
                }
            }
        }
    }

    return "none";
}

_id_271F()
{
    _id_271D( "odin_support" );
}

_id_A929()
{
    if ( _id_2850() )
        return 1;

    if ( _id_284C() )
        return 1;

    if ( _id_284F() )
        return 1;

    if ( _id_284D() )
        return 1;

    return 0;
}

_id_284D()
{
    if ( _id_2849() )
    {
        self notify( "marking_action" );
        return 1;
    }

    return 0;
}

_id_2849()
{
    if ( gettime() < self._id_A917._id_A922 )
        return 0;

    var_0 = _id_2846( "enemy", 0 );
    var_1 = [];

    for ( var_2 = 0; var_2 < var_0.size; var_2++ )
    {
        var_3 = _id_2845( var_0[var_2] );
        var_1[var_2] = distancesquared( self._id_A917._id_EEAA.origin, var_3 );

        if ( var_1[var_2] < _func_0214( level._id_A91B / 2 ) )
            return 1;
    }

    return 0;
}

_id_284F()
{
    if ( _id_2848() )
    {
        self notify( "smoke_action" );
        return 1;
    }

    return 0;
}

_id_2848()
{
    if ( gettime() < self._id_A917._id_A927 )
        return 0;

    var_0 = _id_2843();

    foreach ( var_2 in var_0 )
    {
        if ( distancesquared( var_2, self._id_A917._id_EEAA.origin ) < 2500 )
            return 1;
    }

    var_4 = undefined;

    if ( isdefined( self._id_A917._id_EEAA._id_A3E5 ) )
        var_4 = _func_00B8( self._id_A917._id_EEAA._id_A3E5 );

    if ( !isdefined( var_4 ) )
        return 0;

    var_5 = _id_27F7( 1 );
    var_6 = var_5[var_4].size;

    if ( var_6 >= 2 )
        return 1;

    return 0;
}

_id_2843()
{
    var_0 = [];

    if ( gettime() < self._id_A917._id_A927 )
        return var_0;

    foreach ( var_2 in level._id_3248 )
    {
        if ( scripts\mp\bots\bots::_id_3E57( var_2 ) )
        {
            var_3[0] = self;
            var_4 = scripts\engine\utility::_id_634A( var_2.origin, level.players, var_3 );

            if ( var_4.size > 0 && var_4[0].team == self.team )
                var_0 = scripts\engine\utility::array_add( var_0, var_2.origin );
        }
    }

    var_6 = _id_2846( "ally", 0 );

    foreach ( var_8 in var_6 )
    {
        if ( isai( var_8 ) && var_8 _id_09D1::_id_27DB() )
            var_0 = scripts\engine\utility::array_add( var_0, var_8.origin );
    }

    return var_0;
}

_id_A928()
{
    var_0 = _id_2843();

    if ( var_0.size > 0 )
        return var_0[0];

    return _id_2842( "enemy", 1 );
}

_id_A0C6()
{
    for (;;)
    {
        self._id_A917._id_EEAA._id_A3E5 = _func_0080( self._id_A917._id_EEAA.origin );

        if ( _id_09D1::_id_286B( self._id_A917._id_EEAA.origin, 200 ) )
            self._id_A917._id_EEAA._id_A3E8 = self._id_A917._id_EEAA.origin;
        else
            self._id_A917._id_EEAA._id_A3E8 = undefined;

        wait 0.25;
    }
}

_id_271D( var_0 )
{
    self endon( "spawned_player" );
    self endon( "disconnect" );
    self endon( "control_func_done" );
    level endon( "game_ended" );
    var_1 = _id_28F8( var_0 );

    if ( !var_1 )
        self notify( "control_func_done" );

    self._id_1001E = self._id_A917;
    childthread _id_275E( self._id_A917 );
    self._id_A917 endon( "death" );
    wait 1.4;
    self _meth_8050( 0.7 );
    thread _id_2760();
    self._id_A923 = [];
    self._id_A924 = [];
    self._id_A91F = 0;
    var_2 = undefined;
    var_3 = 0;
    var_4 = undefined;
    childthread _id_A0C6();
    var_5 = self._id_A917._id_EEAA.origin;
    var_6 = gettime();

    while ( self [[ level._id_2805["isUsing"][var_0] ]]() )
    {
        var_7 = self [[ level._id_2805["odin_perform_action"][var_0] ]]();

        if ( gettime() > var_6 + 2000 )
        {
            var_6 = gettime();
            var_8 = distance( var_5, self._id_A917._id_EEAA.origin );
            var_5 = self._id_A917._id_EEAA.origin;

            if ( var_8 < 100 )
            {
                var_4 = undefined;
                var_2 = undefined;
            }
        }

        if ( gettime() > var_3 || !isdefined( var_4 ) )
        {
            var_9 = level._id_284B[self _meth_802E()];
            var_3 = gettime() + var_9 * 1000;
            var_10 = self [[ level._id_2805["odin_get_target"][var_0] ]]();

            if ( isdefined( var_10 ) )
            {
                var_2 = undefined;

                if ( isplayer( var_10 ) )
                    var_4 = _id_2845( var_10 );
                else
                    var_4 = var_10;
            }
            else
            {
                if ( !isdefined( var_2 ) )
                    var_2 = scripts\engine\utility::random( level._id_AD06 );

                var_11 = _func_00F6( var_2 ).origin;

                if ( distance2dsquared( self._id_A917._id_EEAA.origin, var_11 ) < 10000 )
                {
                    var_2 = scripts\engine\utility::random( level._id_AD06 );
                    var_11 = _func_00F6( var_2 ).origin;
                    var_6 = gettime();
                }

                var_4 = var_11;
            }
        }

        var_12 = var_4 - self._id_A917._id_EEAA.origin;

        if ( _func_0133( var_12 ) > 100 )
        {
            var_13 = vectortoangles( var_12 );
            self _meth_8059( var_13[1], 0.05 );
            self _meth_8044( var_4, 0.1, "script_forced" );
        }
        else
            var_6 = gettime();

        wait 0.05;
    }

    self notify( "control_func_done" );
}

_id_2760( var_0 )
{
    self endon( "disconnect" );
    self waittill( "control_func_done" );
    self._id_A923 = undefined;
    self._id_A924 = undefined;
    self._id_A91F = undefined;
    self _meth_8050( 1.0 );
}

_id_2845( var_0 )
{
    if ( level.teambased && self.team == var_0.team )
        return var_0.origin;
    else
    {
        if ( length( var_0 _meth_8131() ) < 25 )
            return var_0.origin;

        var_1 = var_0 getentitynumber();

        if ( !isdefined( self._id_A924[var_1] ) )
            self._id_A924[var_1] = 0;

        var_2 = gettime();
        var_3 = var_2 - self._id_A924[var_1];

        if ( var_3 <= 400 )
        {
            var_4 = vectornormalize( var_0 _meth_8131() );
            var_5 = vectornormalize( self._id_A923[var_1] - var_0.origin );

            if ( vectordot( var_4, var_5 ) < -0.5 )
                return var_0.origin;
        }

        if ( var_3 > 400 )
        {
            if ( var_2 == self._id_A91F )
            {
                if ( var_3 > 1000 )
                    return var_0.origin;
            }
            else
            {
                self._id_A923[var_1] = _func_00C7( var_0, 1.5 );
                self._id_A924[var_1] = var_2;
                self._id_A91F = var_2;
            }
        }

        return self._id_A923[var_1];
    }
}

_id_2842( var_0, var_1, var_2 )
{
    var_3 = _id_2846( var_0, var_1 );

    if ( isdefined( var_2 ) )
        var_3 = scripts\engine\utility::array_remove( var_3, var_2 );

    if ( var_3.size > 0 )
    {
        var_4 = scripts\engine\utility::_id_634A( self._id_A917._id_EEAA.origin, var_3 );
        return var_4[0];
    }

    return undefined;
}

_id_2850()
{
    if ( gettime() >= self._id_A917._id_A91C )
    {
        if ( !isdefined( self._id_A917._id_EEAA._id_A3E5 ) )
            return 0;
    }

    return 0;
}

_id_2840()
{
    return _id_2842( "ally", 0 );
}

_id_284C()
{
    if ( _id_2847() )
    {
        self notify( "airdrop_action" );
        self notify( "juggernaut_action" );
        return 1;
    }

    return 0;
}

_id_2847()
{
    if ( gettime() < self._id_A917._id_A918 )
        return 0;

    if ( !isdefined( self._id_A917._id_EEAA._id_A3E5 ) )
        return 0;

    if ( _id_2844() > 2 )
        return 0;

    if ( !isdefined( self._id_A917._id_EEAA._id_A3E8 ) )
        return 0;

    var_0 = _func_00B8( self._id_A917._id_EEAA._id_A3E5 );

    if ( !isdefined( var_0 ) )
        return 0;

    var_1 = _id_27F6( 1 );
    var_2 = var_1[var_0].size;
    var_3 = _id_27F7( 1 );
    var_4 = var_3[var_0].size;

    if ( var_2 == 0 )
        return 0;

    if ( var_4 == 0 )
    {
        var_5 = 0;
        var_6 = _id_2846( "enemy", 1 );

        foreach ( var_8 in var_6 )
        {
            if ( distancesquared( var_8.origin, self._id_A917._id_EEAA.origin ) < 14400 )
                var_5 = 1;
        }

        if ( !var_5 )
            return 1;
    }

    if ( var_2 - var_4 >= 2 )
    {
        var_10 = scripts\engine\utility::_id_634A( self._id_A917._id_EEAA.origin, var_1[var_0] );
        var_11 = scripts\engine\utility::_id_634A( self._id_A917._id_EEAA.origin, var_3[var_0] );
        var_12 = distance( self._id_A917._id_EEAA.origin, var_10[0].origin );
        var_13 = distance( self._id_A917._id_EEAA.origin, var_11[0].origin );

        if ( var_12 + 120 < var_13 )
            return 1;
    }

    return 0;
}

_id_2844()
{
    var_0 = 0;

    foreach ( var_2 in level._id_3248 )
    {
        if ( isdefined( var_2 ) && scripts\mp\bots\bots::_id_3E57( var_2 ) )
            var_0++;
    }

    return var_0;
}

_id_2846( var_0, var_1, var_2 )
{
    var_3 = _id_27F5( self.team, var_0, var_1 );
    var_4 = self _meth_8031();
    var_5 = [];

    foreach ( var_7 in var_3 )
    {
        var_8 = 0;
        var_9 = var_4;

        if ( var_0 == "enemy" )
            var_9 = var_9 * 0.9;

        if ( scripts\engine\utility::_id_10E74( self._id_1001E.origin, self getplayerangles(), var_7.origin, var_9 ) )
        {
            if ( !var_8 || self _meth_8027( var_7 ) )
                var_5 = scripts\engine\utility::array_add( var_5, var_7 );
        }
    }

    return var_5;
}

_id_85EE()
{
    return level._id_036A == "mp_sovereign";
}

_id_26E4()
{
    return isdefined( self._id_59C0 ) && self._id_59C0;
}

_id_76E3( var_0, var_1 )
{
    var_2 = undefined;
    var_3 = 0;

    foreach ( var_5 in var_0 )
    {
        var_6 = distancesquared( level._id_2826, [[ level._id_2805["heli_node_get_origin"][var_1] ]]( var_5 ) );

        if ( var_6 > var_3 )
        {
            var_3 = var_6;
            var_2 = var_5;
        }
    }

    if ( isdefined( var_2 ) )
        return var_2;
    else
        return scripts\engine\utility::random( var_0 );
}

_id_76AB( var_0 )
{
    return var_0.origin;
}

_id_5A9B( var_0, var_1 )
{
    var_2 = undefined;
    var_3 = 99999999;

    foreach ( var_5 in level._id_27CA )
    {
        var_6 = distance2dsquared( var_0, [[ level._id_2805["heli_node_get_origin"][var_1] ]]( var_5 ) );

        if ( var_6 < var_3 )
        {
            var_2 = var_5;
            var_3 = var_6;
        }
    }

    return var_2;
}

_id_27F6( var_0 )
{
    var_1 = _id_27F3( var_0 );
    var_2 = [];

    for ( var_3 = 0; var_3 < level._id_110DF; var_3++ )
        var_2[var_3] = [];

    foreach ( var_5 in var_1 )
    {
        var_6 = var_5 _meth_815E();
        var_7 = _func_00B8( var_6 );

        if ( isdefined( var_7 ) )
            var_2[var_7] = scripts\engine\utility::array_add( var_2[var_7], var_5 );
    }

    return var_2;
}

_id_27F7( var_0 )
{
    var_1 = _id_27F4( var_0 );
    var_2 = [];

    for ( var_3 = 0; var_3 < level._id_110DF; var_3++ )
        var_2[var_3] = [];

    foreach ( var_5 in var_1 )
    {
        var_6 = var_5 _meth_815E();
        var_7 = _func_00B8( var_6 );
        var_2[var_7] = scripts\engine\utility::array_add( var_2[var_7], var_5 );
    }

    return var_2;
}

_id_27F4( var_0 )
{
    return _id_27F5( self.team, "enemy", var_0 );
}

_id_27F3( var_0 )
{
    return _id_27F5( self.team, "ally", var_0 );
}

_id_27F5( var_0, var_1, var_2 )
{
    var_3 = [];
    var_4 = level._id_AE69;

    if ( isdefined( var_2 ) && var_2 )
        var_4 = level.players;

    foreach ( var_6 in var_4 )
    {
        if ( var_6 == self || !isalive( var_6 ) )
            continue;

        var_7 = 0;

        if ( var_1 == "ally" )
            var_7 = level.teambased && var_0 == var_6.team;
        else if ( var_1 == "enemy" )
            var_7 = !level.teambased || var_0 != var_6.team;

        if ( var_7 )
        {
            var_8 = var_6 _meth_815E();

            if ( isdefined( var_8 ) && _func_0155( var_8 ) )
                var_3 = scripts\engine\utility::array_add( var_3, var_6 );
        }
    }

    var_3 = scripts\engine\utility::array_remove( var_3, self );
    return var_3;
}

_id_27C9( var_0 )
{
    var_1 = 99;
    var_2 = [];

    foreach ( var_4 in var_0._id_A40E )
    {
        if ( isdefined( var_4._id_0372 ) )
        {
            var_5 = var_4._id_28F3[self._id_54E1];

            if ( var_5 < var_1 )
            {
                var_2 = [];
                var_2[0] = var_4;
                var_1 = var_5;
            }
            else if ( var_5 == var_1 )
                var_2[var_2.size] = var_4;
        }
    }

    return var_2;
}

_id_2719( var_0 )
{
    self endon( "spawned_player" );
    self endon( "disconnect" );
    self endon( "control_func_done" );
    level endon( "game_ended" );
    var_1 = _id_28F8( var_0 );

    if ( !var_1 )
        self notify( "control_func_done" );

    foreach ( var_3 in level._id_957C )
    {
        if ( var_3.owner == self )
            self._id_1001E = var_3;
    }

    childthread _id_275E( self._id_1001E );
    self._id_1001E endon( "death" );

    if ( isdefined( level._id_2805["control_other"][var_0] ) )
        self childthread [[ level._id_2805["control_other"][var_0] ]]();

    self [[ level._id_2805["waittill_initial_goal"][var_0] ]]();
    self childthread [[ level._id_2805["control_aiming"][var_0] ]]();
    _id_271A( var_0, 1 );
    self notify( "control_func_done" );
}

_id_279A( var_0 )
{
    if ( var_0 )
        return _func_0214( 100 );
    else
        return _func_0214( 30 );
}

_id_279B( var_0 )
{
    if ( var_0 )
        return _func_0214( 300 );
    else
        return _func_0214( 90 );
}

_id_271A( var_0, var_1 )
{
    foreach ( var_3 in level._id_27CA )
        var_3._id_28F3[self._id_54E1] = 0;

    var_5 = _id_5A9B( self._id_1001E.origin, var_0 );
    var_6 = undefined;
    self._id_A45A = 0;
    var_7 = "needs_new_goal";
    var_8 = undefined;
    var_9 = self._id_1001E.origin;
    var_10 = 3.0;
    var_11 = 0.05;

    while ( self [[ level._id_2805["isUsing"][var_0] ]]() )
    {
        if ( gettime() > self._id_A45A && var_7 == "needs_new_goal" )
        {
            var_12 = var_5;
            var_5 = [[ level._id_2805["heli_pick_node"][var_0] ]]( var_5 );
            var_6 = undefined;

            if ( isdefined( var_5 ) )
            {
                var_13 = [[ level._id_2805["heli_node_get_origin"][var_0] ]]( var_5 );

                if ( var_1 )
                {
                    var_14 = var_5.origin + ( _id_0A6F::_id_6A79() + level._id_27CB );
                    var_15 = var_5.origin + ( _id_0A6F::_id_6A79() - level._id_27CB );
                    var_16 = scripts\engine\trace::_bullet_trace( var_14, var_15, 0, undefined, 0, 0, 1 );
                    var_6 = var_16["position"] - _id_0A6F::_id_6A79() + level._id_2806[var_0];
                }
                else
                    var_6 = var_13;
            }

            if ( isdefined( var_6 ) )
            {
                self _meth_8053( "disable_movement", 0 );
                var_7 = "waiting_till_goal";
                var_10 = 3.0;
                var_9 = self._id_1001E.origin;
            }
            else
            {
                var_5 = var_12;
                self._id_A45A = gettime() + 2000;
            }
        }
        else if ( var_7 == "waiting_till_goal" )
        {
            if ( !var_1 )
            {
                var_17 = var_6[2] - self._id_1001E.origin[2];

                if ( var_17 > 10 )
                    self _meth_804D( "lethal" );
                else if ( var_17 < -10 )
                    self _meth_804D( "tactical" );
            }

            var_18 = var_6 - self._id_1001E.origin;

            if ( var_1 )
                var_8 = _func_0132( var_18 );
            else
                var_8 = _func_0133( var_18 );

            if ( var_8 < _id_279A( var_1 ) )
            {
                self _meth_8059( 0, 0 );
                self _meth_8053( "disable_movement", 1 );

                if ( self _meth_802E() == "recruit" )
                    self._id_A45A = gettime() + randomintrange( 5000, 7000 );
                else
                    self._id_A45A = gettime() + randomintrange( 3000, 5000 );

                var_7 = "needs_new_goal";
            }
            else
            {
                var_18 = var_6 - self._id_1001E.origin;
                var_19 = vectortoangles( var_18 );
                var_20 = scripts\engine\utility::ter_op( var_8 < _id_279B( var_1 ), 0.5, 1.0 );
                self _meth_8059( var_19[1], var_11, var_20 );
                var_10 = var_10 - var_11;

                if ( var_10 <= 0.0 )
                {
                    if ( distancesquared( self._id_1001E.origin, var_9 ) < 225 )
                    {
                        var_5._id_28F3[self._id_54E1]++;
                        var_7 = "needs_new_goal";
                    }

                    var_9 = self._id_1001E.origin;
                    var_10 = 3.0;
                }
            }
        }

        wait( var_11 );
    }
}

_id_66BC()
{
    var_0 = [];

    foreach ( var_2 in level._id_AD06 )
    {
        var_3 = _func_0029( var_2, self.team, "enemy_predict" );

        if ( var_3 > 0 )
            var_0 = scripts\engine\utility::array_add( var_0, var_2 );
    }

    var_5 = undefined;

    if ( var_0.size > 0 )
    {
        var_6 = scripts\engine\utility::random( var_0 );
        var_7 = scripts\engine\utility::random( _func_00F7( var_6 ) );
        var_5 = var_7.origin;
    }
    else
    {
        var_8 = undefined;
        var_9 = undefined;

        if ( isdefined( level._id_F036 ) )
            var_8 = [[ level._id_F036 ]]();
        else
            var_9 = _func_03ED();

        var_10 = 0;

        while ( var_10 < 10 )
        {
            var_10++;
            var_11 = undefined;

            if ( isdefined( var_8 ) )
                var_11 = scripts\engine\utility::random( var_8 );
            else
                var_11 = _func_03DB( randomint( var_9 ) );

            if ( isdefined( var_11 ) )
            {
                var_5 = var_11.origin;

                if ( _func_0155( var_11 ) && distance2dsquared( var_11.origin, self._id_1001E.origin ) > 62500 )
                    break;
            }
        }
    }

    return var_5;
}
