// S4 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_1B39()
{
    var_0 = scripts\engine\trace::_id_69F6( "health" );

    if ( var_0 <= 0 )
        return;

    if ( self isskydiving() )
    {
        self notify( "try_armor_repair_cancel" );
        return;
    }

    if ( isdefined( self._id_1B3B ) )
        self._id_1B3B--;

    var_1 = self._id_29E8 + 5;
    var_2 = clamp( var_1, 0, self._id_2A57 );
    var_3 = _func_0147( 1, getdvarint( "scr_br_armor_heal_amount", 50 ) );
    var_2 = int( var_2 / var_3 ) * var_3 + var_3;
    self._id_29E8 = clamp( var_2, 0, self._id_2A57 );
    var_4 = self._id_29E8 / self._id_2A57;
    var_5 = int( var_4 * 100 );
    scripts\mp\gametypes\br_public::_id_FC17( "armorHealthRatio", int( self._id_29E8 ) );
    scripts\engine\trace::_id_4538( "health", 1 );
    _id_0793::_id_ABBE( "armor_plate" );
    self notify( "armor_plate_inserted" );
}

_id_1B36()
{
    var_0 = self._id_29E8 + 5;
    var_1 = clamp( var_0, 0, self._id_2A57 );
    var_2 = _func_0147( 1, getdvarint( "scr_br_armor_heal_amount", 50 ) );
    var_1 = int( var_1 / var_2 ) * var_2;
    var_3 = clamp( var_1, 0, self._id_2A57 );

    if ( var_3 >= self._id_29E8 )
        return;
    else
        self._id_29E8 = var_3;

    var_4 = self._id_29E8 / self._id_2A57;
    var_5 = int( var_4 * 100 );
    scripts\mp\gametypes\br_public::_id_FC17( "armorHealthRatio", int( self._id_29E8 ) );
}

_id_FE23( var_0, var_1 )
{
    self endon( "death_or_disconnect" );

    if ( var_1 == 0 )
        return;
    else if ( istrue( self._id_82CE ) )
        return 0;

    if ( !_id_8730() )
        return;

    if ( self _meth_84B6() )
    {
        if ( self _meth_84B6( "iw8_ges_pickup_br" ) )
        {
            self _meth_8493( "iw8_ges_pickup_br", 0, 1 );
            wait 0.05;
        }
        else
            return;
    }

    var_2 = _func_034C( "armor_plate_deploy_mp" );
    var_3 = _id_099B::_id_4034( "", self );
    var_3._id_1B4C = var_2;
    thread _id_10AC1();
    _id_F2D8( 1 );
    var_4 = _id_0990::_id_EC34( var_2, var_3, ::_id_82CC, undefined, ::_id_AA5C, undefined, undefined, self._id_752C );
}

_id_10AC1()
{
    self endon( "armor_plate_done" );
    self endon( "armor_repair_end" );
    self endon( "disconnect" );
    _id_077B::_id_108C3( "death", "last_stand_start" );
    _id_F2D8( 0 );
}

_id_F2D8( var_0 )
{
    _id_06BB::_id_155F( !var_0 );
    self allowlean( !var_0 );
    _id_06BB::_id_1527( !var_0 );
    self._id_82CE = var_0;
}

_id_AA5C( var_0, var_1 )
{
    if ( !istrue( var_1 ) )
    {
        _id_F2D8( 0 );
        return;
    }
}

_id_AA5D( var_0 )
{
    _id_F2D8( 0 );
}

_id_82CC( var_0 )
{
    self endon( "death_or_disconnect" );
    self endon( "armor_repair_end" );
    thread _id_10A8D();

    if ( !_id_8730() )
    {
        self notify( "try_armor_repair_cancel" );
        return;
    }

    var_1 = gettime();

    if ( self._id_752C )
    {
        var_2 = var_1 + 2800.0;
        var_3 = 3000.0;
        var_4 = 2800.0;
        var_5 = var_1 + 1125.0;
    }
    else
    {
        var_2 = var_1 + 1860.0;
        var_3 = 2000.0;
        var_4 = 1860.0;
        var_5 = 0;
    }

    while ( var_1 < var_2 )
    {
        if ( self._id_752C && var_1 > var_5 )
        {
            self._id_752C = 0;
            _id_1B36();
        }

        if ( !isdefined( var_0._id_1B4C ) || var_0._id_1B4C != self getcurrentweapon() )
            return;

        waitframe();
        var_1 = gettime();
    }

    _id_1B39();
    var_6 = ( var_3 - var_4 ) / 1000;
    wait( var_6 );

    while ( _id_DB10() )
    {
        var_7 = self._id_5532["health"];
        var_8 = scripts\engine\trace::_id_69F6( "health" );

        if ( isdefined( var_7 ) && isdefined( var_8 ) && var_8 > 0 && self._id_29E8 < self._id_2A57 )
        {
            var_9 = gettime() + 1250.0;

            while ( gettime() < var_9 )
            {
                if ( !isdefined( var_0._id_1B4C ) || var_0._id_1B4C != self getcurrentweapon() )
                    return;

                waitframe();
            }

            _id_1B39();
            var_10 = 0.25;
            wait( var_10 );
            continue;
        }

        break;
    }

    self notify( "armor_plate_done" );
}

_id_8730()
{
    if ( isdefined( self._id_FFF1 ) )
    {
        var_0 = _id_09BA::_id_101A4( self._id_FFF1, self );

        if ( var_0 == "driver" )
            return 0;
    }

    if ( self isskydiving() )
        return 0;

    if ( self._id_29E8 == self._id_2A57 )
    {
        _id_07B9::_id_DC9F( level._id_2A6F._id_2A68 );
        return 0;
    }

    return 1;
}

_id_DB10()
{
    var_0 = _id_077B::_id_864F() && self _meth_876C();
    var_1 = isdefined( self._id_1B3B ) && self._id_1B3B > 0;
    return var_0 || var_1;
}

_id_10A8D()
{
    self endon( "armor_repair_end" );
    self endon( "death_or_disconnect" );
    childthread _id_1B40();
}

_id_1B40()
{
    self endon( "armor_repair_end" );
    self endon( "disconnect" );
    self _meth_824A( "try_armor_repair_cancel", "+weapnext" );
    self _meth_824A( "try_armor_repair_cancel", "+weapprev" );
    self _meth_824A( "try_armor_repair_cancel", "+attack" );
    self _meth_824A( "try_armor_repair_cancel", "+smoke" );
    self _meth_824A( "try_armor_repair_cancel", "+frag" );
    self _meth_824A( "try_armor_repair_cancel", "+melee_zoom" );
    _id_077B::_id_10882( "death", "mantle_start", "try_armor_repair_cancel", "last_stand_start", "special_weapon_fired", "armor_plate_done" );
    thread _id_1B42();
}

_id_1B41()
{
    self endon( "armor_repair_end" );
    self endon( "try_use_heal_slot" );
    self waittill( "try_armor_repair_weapnext" );
    waitframe();

    while ( self _meth_876C() )
        waitframe();

    self notify( "try_armor_repair_cancel" );
}

_id_1B3F()
{
    self endon( "armor_repair_end" );
    self endon( "death_or_disconnect" );

    for (;;)
    {
        self waittill( "damage", var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 );
        thread _id_1B42();
    }
}

_id_1B42()
{
    self endon( "disconnect" );
    self notifyonplayercommand( "try_armor_repair_cancel", "+weapnext" );
    self notifyonplayercommand( "try_armor_repair_cancel", "+attack" );
    self notifyonplayercommand( "try_armor_repair_cancel", "+smoke" );
    self notifyonplayercommand( "try_armor_repair_cancel", "+frag" );
    self notifyonplayercommand( "try_armor_repair_cancel", "+melee_zoom" );
    self notify( "armor_repair_end" );

    while ( self._id_0122._id_0084 == "armor_plate_deploy_mp" )
        waitframe();

    waitframe();
    _id_F2D8( 0 );
}

_id_1B07()
{
    self endon( "death_or_disconnect" );

    while ( self _meth_81EA() )
        waitframe();

    if ( self._id_0122._id_0084 == "armor_plate_deploy_mp" )
        _id_0990::getrankforxp( self._id_0122 );

    thread _id_1B42();
}
